; ModuleID = 'fft.c'
source_filename = "fft.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@main.sin_64 = private unnamed_addr constant [448 x float] [float -0.000000e+00, float -0.000000e+00, float -0.000000e+00, float -0.000000e+00, float -0.000000e+00, float -0.000000e+00, float -0.000000e+00, float 0xBFD87DE0E0000000, float 0xBFC8F8B580000000, float 0xBFE1C73AC0000000, float 0xBFB917A460000000, float 0xBFDE2B5E60000000, float 0xBFD2940780000000, float 0xBFE44CF280000000, float 0xBFE6A09EE0000000, float 0xBFD87DE0E0000000, float 0xBFED906CC0000000, float 0xBFC8F8B580000000, float 0xBFEA9B6700000000, float 0xBFE1C73AC0000000, float 0xBFEF629740000000, float 0xBFED906CC0000000, float 0xBFE1C73AC0000000, float 0xBFEF629740000000, float 0xBFD2940780000000, float 0xBFEFD88E40000000, float 0xBFE8BC7F80000000, float 0xBFEC38B260000000, float -1.000000e+00, float 0xBFE6A09EE0000000, float 0xBFE6A09EE0000000, float 0xBFD87DE0E0000000, float 0xBFED906CC0000000, float 0xBFED906CC0000000, float 0xBFD87DE0E0000000, float 0xBFED906CC0000000, float 0xBFEA9B6700000000, float 0xBFC8F8B580000000, float 0xBFDE2B5E60000000, float 0xBFE44CF280000000, float 0xBFEFD88E40000000, float 0x3FD2940780000000, float 0xBFE6A09EE0000000, float 0xBFED906CC0000000, float 0x3FD87DE0E0000000, float 0xBFE1C73AC0000000, float 0xBFC8F8B580000000, float 0xBFEF629740000000, float 0x3FEA9B6700000000, float 0xBFD87DE0E0000000, float 0xBFEF629740000000, float 0x3FEA9B6700000000, float 0xBFE44CF280000000, float 0x3FD2940780000000, float 0xBFEC38B260000000, float 0x3FEFD88E40000000, float -0.000000e+00, float -1.000000e+00, float 1.000000e+00, float 0xBFE6A09EE0000000, float 0x3FE6A09EE0000000, float 0xBFE6A09EE0000000, float 0x3FE6A09EE0000000, float 0x3FD87DE0E0000000, float 0xBFEF629740000000, float 0x3FEA9B6700000000, float 0xBFE8BC7F80000000, float 0x3FEE9F40A0000000, float 0xBFDE2B5E60000000, float 0x3FB917A460000000, float 0x3FE6A09EE0000000, float 0xBFED906CC0000000, float 0x3FD87DE0E0000000, float 0xBFEA9B6700000000, float 0x3FEF629740000000, float 0xBFC8F8B580000000, float 0xBFE1C73AC0000000, float 0x3FED906CC0000000, float 0xBFEA9B6700000000, float 0xBFC8F8B580000000, float 0xBFEC38B260000000, float 0x3FE8BC7F80000000, float 0x3FB917A460000000, float 0xBFEE9F40A0000000, float 1.000000e+00, float 0xBFE6A09EE0000000, float 0xBFE6A09EE0000000, float 0xBFED906CC0000000, float 0x3FD87DE0E0000000, float 0x3FD87DE0E0000000, float 0xBFED906CC0000000, float 0x3FED906CC0000000, float 0xBFE1C73AC0000000, float 0xBFEF629740000000, float 0xBFEE9F40A0000000, float 0xBFB917A460000000, float 0x3FE44CF280000000, float 0xBFDE2B5E60000000, float 0x3FE6A09EE0000000, float 0xBFD87DE0E0000000, float 0xBFED906CC0000000, float 0xBFEF629740000000, float 0xBFE1C73AC0000000, float 0x3FEA9B6700000000, float 0x3FC8F8B580000000, float 0x3FD87DE0E0000000, float 0xBFC8F8B580000000, float 0xBFE1C73AC0000000, float 0xBFEFD88E40000000, float 0xBFEC38B260000000, float 0x3FEE9F40A0000000, float 0x3FE8BC7F80000000, float 0.000000e+00, float -0.000000e+00, float -0.000000e+00, float -1.000000e+00, float -1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 0xBFD87DE0E0000000, float 0x3FC8F8B580000000, float 0x3FE1C73AC0000000, float 0xBFEFD88E40000000, float 0xBFEC38B260000000, float 0x3FEE9F40A0000000, float 0x3FE8BC7F80000000, float 0xBFE6A09EE0000000, float 0x3FD87DE0E0000000, float 0x3FED906CC0000000, float 0xBFEF629740000000, float 0xBFE1C73AC0000000, float 0x3FEA9B6700000000, float 0x3FC8F8B580000000, float 0xBFED906CC0000000, float 0x3FE1C73AC0000000, float 0x3FEF629740000000, float 0xBFEE9F40A0000000, float 0xBFB917A460000000, float 0x3FE44CF280000000, float 0xBFDE2B5E60000000, float -1.000000e+00, float 0x3FE6A09EE0000000, float 0x3FE6A09EE0000000, float 0xBFED906CC0000000, float 0x3FD87DE0E0000000, float 0x3FD87DE0E0000000, float 0xBFED906CC0000000, float 0xBFED906CC0000000, float 0x3FEA9B6700000000, float 0x3FC8F8B580000000, float 0xBFEC38B260000000, float 0x3FE8BC7F80000000, float 0x3FB917A460000000, float 0xBFEE9F40A0000000, float 0xBFE6A09EE0000000, float 0x3FED906CC0000000, float 0xBFD87DE0E0000000, float 0xBFEA9B6700000000, float 0x3FEF629740000000, float 0xBFC8F8B580000000, float 0xBFE1C73AC0000000, float 0xBFD87DE0E0000000, float 0x3FEF629740000000, float 0xBFEA9B6700000000, float 0xBFE8BC7F80000000, float 0x3FEE9F40A0000000, float 0xBFDE2B5E60000000, float 0x3FB917A460000000, float -0.000000e+00, float 1.000000e+00, float -1.000000e+00, float 0xBFE6A09EE0000000, float 0x3FE6A09EE0000000, float 0xBFE6A09EE0000000, float 0x3FE6A09EE0000000, float 0x3FD87DE0E0000000, float 0x3FEF629740000000, float 0xBFEA9B6700000000, float 0xBFE44CF280000000, float 0x3FD2940780000000, float 0xBFEC38B260000000, float 0x3FEFD88E40000000, float 0x3FE6A09EE0000000, float 0x3FED906CC0000000, float 0xBFD87DE0E0000000, float 0xBFE1C73AC0000000, float 0xBFC8F8B580000000, float 0xBFEF629740000000, float 0x3FEA9B6700000000, float 0x3FED906CC0000000, float 0x3FEA9B6700000000, float 0x3FC8F8B580000000, float 0xBFDE2B5E60000000, float 0xBFE44CF280000000, float 0xBFEFD88E40000000, float 0x3FD2940780000000, float 1.000000e+00, float 0x3FE6A09EE0000000, float 0x3FE6A09EE0000000, float 0xBFD87DE0E0000000, float 0xBFED906CC0000000, float 0xBFED906CC0000000, float 0xBFD87DE0E0000000, float 0x3FED906CC0000000, float 0x3FE1C73AC0000000, float 0x3FEF629740000000, float 0xBFD2940780000000, float 0xBFEFD88E40000000, float 0xBFE8BC7F80000000, float 0xBFEC38B260000000, float 0x3FE6A09EE0000000, float 0x3FD87DE0E0000000, float 0x3FED906CC0000000, float 0xBFC8F8B580000000, float 0xBFEA9B6700000000, float 0xBFE1C73AC0000000, float 0xBFEF629740000000, float 0x3FD87DE0E0000000, float 0x3FC8F8B580000000, float 0x3FE1C73AC0000000, float 0xBFB917A460000000, float 0xBFDE2B5E60000000, float 0xBFD2940780000000, float 0xBFE44CF280000000, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float -0.000000e+00, float -0.000000e+00, float -0.000000e+00, float -0.000000e+00, float 0xBFD87DE0E0000000, float 0xBFC8F8B580000000, float 0xBFE1C73AC0000000, float 0x3FB917A460000000, float 0x3FDE2B5E60000000, float 0x3FD2940780000000, float 0x3FE44CF280000000, float 0xBFE6A09EE0000000, float 0xBFD87DE0E0000000, float 0xBFED906CC0000000, float 0x3FC8F8B580000000, float 0x3FEA9B6700000000, float 0x3FE1C73AC0000000, float 0x3FEF629740000000, float 0xBFED906CC0000000, float 0xBFE1C73AC0000000, float 0xBFEF629740000000, float 0x3FD2940780000000, float 0x3FEFD88E40000000, float 0x3FE8BC7F80000000, float 0x3FEC38B260000000, float -1.000000e+00, float 0xBFE6A09EE0000000, float 0xBFE6A09EE0000000, float 0x3FD87DE0E0000000, float 0x3FED906CC0000000, float 0x3FED906CC0000000, float 0x3FD87DE0E0000000, float 0xBFED906CC0000000, float 0xBFEA9B6700000000, float 0xBFC8F8B580000000, float 0x3FDE2B5E60000000, float 0x3FE44CF280000000, float 0x3FEFD88E40000000, float 0xBFD2940780000000, float 0xBFE6A09EE0000000, float 0xBFED906CC0000000, float 0x3FD87DE0E0000000, float 0x3FE1C73AC0000000, float 0x3FC8F8B580000000, float 0x3FEF629740000000, float 0xBFEA9B6700000000, float 0xBFD87DE0E0000000, float 0xBFEF629740000000, float 0x3FEA9B6700000000, float 0x3FE44CF280000000, float 0xBFD2940780000000, float 0x3FEC38B260000000, float 0xBFEFD88E40000000, float -0.000000e+00, float -1.000000e+00, float 1.000000e+00, float 0x3FE6A09EE0000000, float 0xBFE6A09EE0000000, float 0x3FE6A09EE0000000, float 0xBFE6A09EE0000000, float 0x3FD87DE0E0000000, float 0xBFEF629740000000, float 0x3FEA9B6700000000, float 0x3FE8BC7F80000000, float 0xBFEE9F40A0000000, float 0x3FDE2B5E60000000, float 0xBFB917A460000000, float 0x3FE6A09EE0000000, float 0xBFED906CC0000000, float 0x3FD87DE0E0000000, float 0x3FEA9B6700000000, float 0xBFEF629740000000, float 0x3FC8F8B580000000, float 0x3FE1C73AC0000000, float 0x3FED906CC0000000, float 0xBFEA9B6700000000, float 0xBFC8F8B580000000, float 0x3FEC38B260000000, float 0xBFE8BC7F80000000, float 0xBFB917A460000000, float 0x3FEE9F40A0000000, float 1.000000e+00, float 0xBFE6A09EE0000000, float 0xBFE6A09EE0000000, float 0x3FED906CC0000000, float 0xBFD87DE0E0000000, float 0xBFD87DE0E0000000, float 0x3FED906CC0000000, float 0x3FED906CC0000000, float 0xBFE1C73AC0000000, float 0xBFEF629740000000, float 0x3FEE9F40A0000000, float 0x3FB917A460000000, float 0xBFE44CF280000000, float 0x3FDE2B5E60000000, float 0x3FE6A09EE0000000, float 0xBFD87DE0E0000000, float 0xBFED906CC0000000, float 0x3FEF629740000000, float 0x3FE1C73AC0000000, float 0xBFEA9B6700000000, float 0xBFC8F8B580000000, float 0x3FD87DE0E0000000, float 0xBFC8F8B580000000, float 0xBFE1C73AC0000000, float 0x3FEFD88E40000000, float 0x3FEC38B260000000, float 0xBFEE9F40A0000000, float 0xBFE8BC7F80000000, float 0.000000e+00, float -0.000000e+00, float -0.000000e+00, float 1.000000e+00, float 1.000000e+00, float -1.000000e+00, float -1.000000e+00, float 0xBFD87DE0E0000000, float 0x3FC8F8B580000000, float 0x3FE1C73AC0000000, float 0x3FEFD88E40000000, float 0x3FEC38B260000000, float 0xBFEE9F40A0000000, float 0xBFE8BC7F80000000, float 0xBFE6A09EE0000000, float 0x3FD87DE0E0000000, float 0x3FED906CC0000000, float 0x3FEF629740000000, float 0x3FE1C73AC0000000, float 0xBFEA9B6700000000, float 0xBFC8F8B580000000, float 0xBFED906CC0000000, float 0x3FE1C73AC0000000, float 0x3FEF629740000000, float 0x3FEE9F40A0000000, float 0x3FB917A460000000, float 0xBFE44CF280000000, float 0x3FDE2B5E60000000, float -1.000000e+00, float 0x3FE6A09EE0000000, float 0x3FE6A09EE0000000, float 0x3FED906CC0000000, float 0xBFD87DE0E0000000, float 0xBFD87DE0E0000000, float 0x3FED906CC0000000, float 0xBFED906CC0000000, float 0x3FEA9B6700000000, float 0x3FC8F8B580000000, float 0x3FEC38B260000000, float 0xBFE8BC7F80000000, float 0xBFB917A460000000, float 0x3FEE9F40A0000000, float 0xBFE6A09EE0000000, float 0x3FED906CC0000000, float 0xBFD87DE0E0000000, float 0x3FEA9B6700000000, float 0xBFEF629740000000, float 0x3FC8F8B580000000, float 0x3FE1C73AC0000000, float 0xBFD87DE0E0000000, float 0x3FEF629740000000, float 0xBFEA9B6700000000, float 0x3FE8BC7F80000000, float 0xBFEE9F40A0000000, float 0x3FDE2B5E60000000, float 0xBFB917A460000000, float -0.000000e+00, float 1.000000e+00, float -1.000000e+00, float 0x3FE6A09EE0000000, float 0xBFE6A09EE0000000, float 0x3FE6A09EE0000000, float 0xBFE6A09EE0000000, float 0x3FD87DE0E0000000, float 0x3FEF629740000000, float 0xBFEA9B6700000000, float 0x3FE44CF280000000, float 0xBFD2940780000000, float 0x3FEC38B260000000, float 0xBFEFD88E40000000, float 0x3FE6A09EE0000000, float 0x3FED906CC0000000, float 0xBFD87DE0E0000000, float 0x3FE1C73AC0000000, float 0x3FC8F8B580000000, float 0x3FEF629740000000, float 0xBFEA9B6700000000, float 0x3FED906CC0000000, float 0x3FEA9B6700000000, float 0x3FC8F8B580000000, float 0x3FDE2B5E60000000, float 0x3FE44CF280000000, float 0x3FEFD88E40000000, float 0xBFD2940780000000, float 1.000000e+00, float 0x3FE6A09EE0000000, float 0x3FE6A09EE0000000, float 0x3FD87DE0E0000000, float 0x3FED906CC0000000, float 0x3FED906CC0000000, float 0x3FD87DE0E0000000, float 0x3FED906CC0000000, float 0x3FE1C73AC0000000, float 0x3FEF629740000000, float 0x3FD2940780000000, float 0x3FEFD88E40000000, float 0x3FE8BC7F80000000, float 0x3FEC38B260000000, float 0x3FE6A09EE0000000, float 0x3FD87DE0E0000000, float 0x3FED906CC0000000, float 0x3FC8F8B580000000, float 0x3FEA9B6700000000, float 0x3FE1C73AC0000000, float 0x3FEF629740000000, float 0x3FD87DE0E0000000, float 0x3FC8F8B580000000, float 0x3FE1C73AC0000000, float 0x3FB917A460000000, float 0x3FDE2B5E60000000, float 0x3FD2940780000000, float 0x3FE44CF280000000], align 16
@main.sin_512 = private unnamed_addr constant [448 x float] [float -0.000000e+00, float -0.000000e+00, float -0.000000e+00, float -0.000000e+00, float -0.000000e+00, float -0.000000e+00, float -0.000000e+00, float 0xBFA91F70E0000000, float 0xBF992146A0000000, float 0xBFB2D527E0000000, float 0xBF89221000000000, float 0xBFAF657760000000, float 0xBFA2D85E00000000, float 0xBFB5F6CAC0000000, float 0xBFB917A460000000, float 0xBFA91F70E0000000, float 0xBFC2C80C80000000, float 0xBF992146A0000000, float 0xBFBF5653C0000000, float 0xBFB2D527E0000000, float 0xBFC5E21540000000, float 0xBFC2C80C80000000, float 0xBFB2D527E0000000, float 0xBFCC0B8060000000, float 0xBFA2D85E00000000, float 0xBFC76DDAC0000000, float 0xBFBC378240000000, float 0xBFD04FB980000000, float 0xBFC8F8B580000000, float 0xBFB917A460000000, float 0xBFD2940780000000, float 0xBFA91F70E0000000, float 0xBFCF19F800000000, float 0xBFC2C80C80000000, float 0xBFD58F9B20000000, float 0xBFCF19F800000000, float 0xBFBF5653C0000000, float 0xBFD7088500000000, float 0xBFAF657760000000, float 0xBFD3541100000000, float 0xBFC76DDAC0000000, float 0xBFDAA6CA00000000, float 0xBFD2940780000000, float 0xBFC2C80C80000000, float 0xBFDB5D0FA0000000, float 0xBFB2D527E0000000, float 0xBFD7088500000000, float 0xBFCC0B8060000000, float 0xBFDF8BA400000000, float 0xBFD58F9B20000000, float 0xBFC5E21540000000, float 0xBFDF8BA400000000, float 0xBFB5F6CAC0000000, float 0xBFDAA6CA00000000, float 0xBFD04FB980000000, float 0xBFE21A7A00000000, float 0xBFD87DE0E0000000, float 0xBFC8F8B580000000, float 0xBFE1C73AC0000000, float 0xBFB917A460000000, float 0xBFDE2B5E60000000, float 0xBFD2940780000000, float 0xBFE44CF280000000, float 0xBFDB5D0FA0000000, float 0xBFCC0B8060000000, float 0xBFE3AFFB00000000, float 0xBFBC378240000000, float 0xBFE0C97100000000, float 0xBFD4D1E100000000, float 0xBFE65918A0000000, float 0xBFDE2B5E60000000, float 0xBFCF19F800000000, float 0xBFE57D6940000000, float 0xBFBF5653C0000000, float 0xBFE26D04E0000000, float 0xBFD7088500000000, float 0xBFE83B0E60000000, float 0xBFE0738820000000, float 0xBFD111D360000000, float 0xBFE72D0800000000, float 0xBFC139F340000000, float 0xBFE3FED840000000, float 0xBFD9372A40000000, float 0xBFE9EF4380000000, float 0xBFE1C73AC0000000, float 0xBFD2940780000000, float 0xBFE8BC7F80000000, float 0xBFC2C80C80000000, float 0xBFE57D6940000000, float 0xBFDB5D0FA0000000, float 0xBFEB728420000000, float 0xBFE30FF760000000, float 0xBFD4135DA0000000, float 0xBFEA29A800000000, float 0xBFC4557580000000, float 0xBFE6E744C0000000, float 0xBFDD7978A0000000, float 0xBFECC1F000000000, float 0xBFE44CF280000000, float 0xBFD58F9B20000000, float 0xBFEB728420000000, float 0xBFC5E21540000000, float 0xBFE83B0E60000000, float 0xBFDF8BA400000000, float 0xBFEDDB1420000000, float 0xBFE57D6940000000, float 0xBFD7088500000000, float 0xBFEC954A80000000, float 0xBFC76DDAC0000000, float 0xBFE9777F20000000, float 0xBFE0C97100000000, float 0xBFEEBBD9C0000000, float 0xBFE6A09EE0000000, float 0xBFD87DE0E0000000, float 0xBFED906CC0000000, float 0xBFC8F8B580000000, float 0xBFEA9B6700000000, float 0xBFE1C73AC0000000, float 0xBFEF629740000000, float 0xBFE7B5DEE0000000, float 0xBFD9EF7800000000, float 0xBFEE628880000000, float 0xBFCA829D00000000, float 0xBFEBA5AAC0000000, float 0xBFE2BEDB80000000, float 0xBFEFCE1600000000, float 0xBFE8BC7F80000000, float 0xBFDB5D0FA0000000, float 0xBFEF0A7E80000000, float 0xBFCC0B8060000000, float 0xBFEC954A80000000, float 0xBFE3AFFB00000000, float 0xBFEFFD88C0000000, float 0xBFE9B3E140000000, float 0xBFDCC66D40000000, float 0xBFEF8765C0000000, float 0xBFCD934F00000000, float 0xBFED6961C0000000, float 0xBFE49A45A0000000, float 0xBFEFF09520000000, float 0xBFEA9B6700000000, float 0xBFDE2B5E60000000, float 0xBFEFD88E40000000, float 0xBFCF19F800000000, float 0xBFEE2120E0000000, float 0xBFE57D6940000000, float 0xBFEFA75680000000, float 0xBFEB728420000000, float 0xBFDF8BA400000000, float 0xBFEFFD88C0000000, float 0xBFD04FB980000000, float 0xBFEEBBD9C0000000, float 0xBFE65918A0000000, float 0xBFEF225320000000, float 0xBFEC38B260000000, float 0xBFE0738820000000, float 0xBFEFF620E0000000, float 0xBFD111D360000000, float 0xBFEF38F360000000, float 0xBFE72D0800000000, float 0xBFEE628880000000, float 0xBFECED7A60000000, float 0xBFE11EB420000000, float 0xBFEFC26560000000, float 0xBFD1D34580000000, float 0xBFEF97F840000000, float 0xBFE7F8EC00000000, float 0xBFED6961C0000000, float 0xBFED906CC0000000, float 0xBFE1C73AC0000000, float 0xBFEF629740000000, float 0xBFD2940780000000, float 0xBFEFD88E40000000, float 0xBFE8BC7F80000000, float 0xBFEC38B260000000, float 0xBFEE2120E0000000, float 0xBFE26D04E0000000, float 0xBFEED740C0000000, float 0xBFD3541100000000, float 0xBFEFFA7220000000, float 0xBFE9777F20000000, float 0xBFEAD2BD40000000, float 0xBFEE9F40A0000000, float 0xBFE30FF760000000, float 0xBFEE2120E0000000, float 0xBFD4135DA0000000, float 0xBFEFFD88C0000000, float 0xBFEA29A800000000, float 0xBFE93A2160000000, float 0xBFEF0A7E80000000, float 0xBFE3AFFB00000000, float 0xBFED413560000000, float 0xBFD4D1E100000000, float 0xBFEFE1CBC0000000, float 0xBFEAD2BD40000000, float 0xBFE771E6C0000000, float 0xBFEF629740000000, float 0xBFE44CF280000000, float 0xBFEC38B260000000, float 0xBFD58F9B20000000, float 0xBFEFA75680000000, float 0xBFEB728420000000, float 0xBFE57D6940000000, float 0xBFEFA75680000000, float 0xBFE4E6CB20000000, float 0xBFEB090B40000000, float 0xBFD64C7F40000000, float 0xBFEF4E5F80000000, float 0xBFEC08C400000000, float 0xBFE36058A0000000, float 0xBFEFD88E40000000, float 0xBFE57D6940000000, float 0xBFE9B3E140000000, float 0xBFD7088500000000, float 0xBFEED740C0000000, float 0xBFEC954A80000000, float 0xBFE11EB420000000, float 0xBFEFF620E0000000, float 0xBFE610B840000000, float 0xBFE83B0E60000000, float 0xBFD7C3A860000000, float 0xBFEE4269A0000000, float 0xBFED17E780000000, float 0xBFDD7978A0000000, float -1.000000e+00, float 0xBFE6A09EE0000000, float 0xBFE6A09EE0000000, float 0xBFD87DE0E0000000, float 0xBFED906CC0000000, float 0xBFED906CC0000000, float 0xBFD87DE0E0000000, float 0xBFEFF620E0000000, float 0xBFE72D0800000000, float 0xBFE4E6CB20000000, float 0xBFD9372A40000000, float 0xBFECC1F000000000, float 0xBFEDFEAE60000000, float 0xBFD3541100000000, float 0xBFEFD88E40000000, float 0xBFE7B5DEE0000000, float 0xBFE30FF760000000, float 0xBFD9EF7800000000, float 0xBFEBD7C0C0000000, float 0xBFEE628880000000, float 0xBFCC0B8060000000, float 0xBFEFA75680000000, float 0xBFE83B0E60000000, float 0xBFE11EB420000000, float 0xBFDAA6CA00000000, float 0xBFEAD2BD40000000, float 0xBFEEBBD9C0000000, float 0xBFC139F340000000, float 0xBFEF629740000000, float 0xBFE8BC7F80000000, float 0xBFDE2B5E60000000, float 0xBFDB5D0FA0000000, float 0xBFE9B3E140000000, float 0xBFEF0A7E80000000, float 0xBFA91F70E0000000, float 0xBFEF0A7E80000000, float 0xBFE93A2160000000, float 0xBFD9EF7800000000, float 0xBFDC1248E0000000, float 0xBFE87C3F80000000, float 0xBFEF4E5F80000000, float 0x3FA2D85E00000000, float 0xBFEE9F40A0000000, float 0xBFE9B3E140000000, float 0xBFD58F9B20000000, float 0xBFDCC66D40000000, float 0xBFE72D0800000000, float 0xBFEF8765C0000000, float 0x3FBF5653C0000000, float 0xBFEE2120E0000000, float 0xBFEA29A800000000, float 0xBFD111D360000000, float 0xBFDD7978A0000000, float 0xBFE5C77BC0000000, float 0xBFEFB57A40000000, float 0x3FCA829D00000000, float 0xBFED906CC0000000, float 0xBFEA9B6700000000, float 0xBFC8F8B580000000, float 0xBFDE2B5E60000000, float 0xBFE44CF280000000, float 0xBFEFD88E40000000, float 0x3FD2940780000000, float 0xBFECED7A60000000, float 0xBFEB090B40000000, float 0xBFBF5653C0000000, float 0xBFDEDC1A40000000, float 0xBFE2BEDB80000000, float 0xBFEFF09520000000, float 0x3FD7C3A860000000, float 0xBFEC38B260000000, float 0xBFEB728420000000, float 0xBFA91F70E0000000, float 0xBFDF8BA400000000, float 0xBFE11EB420000000, float 0xBFEFFD88C0000000, float 0x3FDCC66D40000000, float 0xBFEB728420000000, float 0xBFEBD7C0C0000000, float 0x3F992146A0000000, float 0xBFE01CFBC0000000, float 0xBFDEDC1A40000000, float 0xBFEFFF62C0000000, float 0x3FE0C97100000000, float 0xBFEA9B6700000000, float 0xBFEC38B260000000, float 0x3FB917A460000000, float 0xBFE0738820000000, float 0xBFDB5D0FA0000000, float 0xBFEFF620E0000000, float 0x3FE30FF760000000, float 0xBFE9B3E140000000, float 0xBFEC954A80000000, float 0x3FC5E21540000000, float 0xBFE0C97100000000, float 0xBFD7C3A860000000, float 0xBFEFE1CBC0000000, float 0x3FE5328300000000, float 0xBFE8BC7F80000000, float 0xBFECED7A60000000, float 0x3FCF19F800000000, float 0xBFE11EB420000000, float 0xBFD4135DA0000000, float 0xBFEFC26560000000, float 0x3FE72D0800000000, float 0xBFE7B5DEE0000000, float 0xBFED413560000000, float 0x3FD4135DA0000000, float 0xBFE1734D60000000, float 0xBFD04FB980000000, float 0xBFEF97F840000000, float 0x3FE8FBCC20000000, float 0xBFE6A09EE0000000, float 0xBFED906CC0000000, float 0x3FD87DE0E0000000, float 0xBFE1C73AC0000000, float 0xBFC8F8B580000000, float 0xBFEF629740000000, float 0x3FEA9B6700000000, float 0xBFE57D6940000000, float 0xBFEDDB1420000000, float 0x3FDCC66D40000000, float 0xBFE21A7A00000000, float 0xBFC139F340000000, float 0xBFEF225320000000, float 0x3FEC08C400000000, float 0xBFE44CF280000000, float 0xBFEE2120E0000000, float 0x3FE0738820000000, float 0xBFE26D04E0000000, float 0xBFB2D527E0000000, float 0xBFEED740C0000000, float 0x3FED413560000000, float 0xBFE30FF760000000, float 0xBFEE628880000000, float 0x3FE26D04E0000000, float 0xBFE2BEDB80000000, float 0xBF89221000000000, float 0xBFEE817BA0000000, float 0x3FEE4269A0000000, float 0xBFE1C73AC0000000, float 0xBFEE9F40A0000000, float 0x3FE44CF280000000, float 0xBFE30FF760000000, float 0x3FA91F70E0000000, float 0xBFEE2120E0000000, float 0x3FEF0A7E80000000, float 0xBFE0738820000000, float 0xBFEED740C0000000, float 0x3FE610B840000000, float 0xBFE36058A0000000, float 0x3FBC378240000000, float 0xBFEDB65240000000, float 0x3FEF97F840000000, float 0xBFDE2B5E60000000, float 0xBFEF0A7E80000000, float 0x3FE7B5DEE0000000, float 0xBFE3AFFB00000000, float 0x3FC5E21540000000, float 0xBFED413560000000, float 0x3FEFE9CCC0000000, float 0xBFDB5D0FA0000000, float 0xBFEF38F360000000, float 0x3FE93A2160000000, float 0xBFE3FED840000000, float 0x3FCD934F00000000, float 0xBFECC1F000000000, float 0x3FEFFF62C0000000, float 0xBFD87DE0E0000000, float 0xBFEF629740000000, float 0x3FEA9B6700000000, float 0xBFE44CF280000000, float 0x3FD2940780000000, float 0xBFEC38B260000000, float 0x3FEFD88E40000000, float 0xBFD58F9B20000000, float 0xBFEF8765C0000000, float 0x3FEBD7C0C0000000, float 0xBFE49A45A0000000, float 0x3FD64C7F40000000, float 0xBFEBA5AAC0000000, float 0x3FEF7598A0000000, float 0xBFD2940780000000, float 0xBFEFA75680000000, float 0x3FECED7A60000000, float 0xBFE4E6CB20000000, float 0x3FD9EF7800000000, float 0xBFEB090B40000000, float 0x3FEED740C0000000, float 0xBFCF19F800000000, float 0xBFEFC26560000000, float 0x3FEDDB1420000000, float 0xBFE5328300000000, float 0x3FDD7978A0000000, float 0xBFEA630880000000, float 0x3FEDFEAE60000000, float 0xBFC8F8B580000000, float 0xBFEFD88E40000000, float 0x3FEE9F40A0000000, float 0xBFE57D6940000000, float 0x3FE0738820000000, float 0xBFE9B3E140000000, float 0x3FECED7A60000000, float 0xBFC2C80C80000000, float 0xBFEFE9CCC0000000, float 0x3FEF38F360000000, float 0xBFE5C77BC0000000, float 0x3FE21A7A00000000, float 0xBFE8FBCC20000000, float 0x3FEBA5AAC0000000, float 0xBFB917A460000000, float 0xBFEFF620E0000000, float 0x3FEFA75680000000, float 0xBFE610B840000000, float 0x3FE3AFFB00000000, float 0xBFE83B0E60000000, float 0x3FEA29A800000000, float 0xBFA91F70E0000000, float 0xBFEFFD88C0000000, float 0x3FEFE9CCC0000000, float 0xBFE65918A0000000, float 0x3FE5328300000000, float 0xBFE771E6C0000000, float 0x3FE87C3F80000000], align 16
@main.cos_64 = private unnamed_addr constant [448 x float] [float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 0x3FED906CC0000000, float 0x3FEF629740000000, float 0x3FEA9B6700000000, float 0x3FEFD88E40000000, float 0x3FEC38B260000000, float 0x3FEE9F40A0000000, float 0x3FE8BC7F80000000, float 0x3FE6A09EE0000000, float 0x3FED906CC0000000, float 0x3FD87DE0E0000000, float 0x3FEF629740000000, float 0x3FE1C73AC0000000, float 0x3FEA9B6700000000, float 0x3FC8F8B580000000, float 0x3FD87DE0E0000000, float 0x3FEA9B6700000000, float 0xBFC8F8B580000000, float 0x3FEE9F40A0000000, float 0x3FB917A460000000, float 0x3FE44CF280000000, float 0xBFDE2B5E60000000, float 0.000000e+00, float 0x3FE6A09EE0000000, float 0xBFE6A09EE0000000, float 0x3FED906CC0000000, float 0xBFD87DE0E0000000, float 0x3FD87DE0E0000000, float 0xBFED906CC0000000, float 0xBFD87DE0E0000000, float 0x3FE1C73AC0000000, float 0xBFEF629740000000, float 0x3FEC38B260000000, float 0xBFE8BC7F80000000, float 0x3FB917A460000000, float 0xBFEE9F40A0000000, float 0xBFE6A09EE0000000, float 0x3FD87DE0E0000000, float 0xBFED906CC0000000, float 0x3FEA9B6700000000, float 0xBFEF629740000000, float 0xBFC8F8B580000000, float 0xBFE1C73AC0000000, float 0xBFED906CC0000000, float 0x3FC8F8B580000000, float 0xBFE1C73AC0000000, float 0x3FE8BC7F80000000, float 0xBFEE9F40A0000000, float 0xBFDE2B5E60000000, float 0x3FB917A460000000, float -1.000000e+00, float 0.000000e+00, float -0.000000e+00, float 0x3FE6A09EE0000000, float 0xBFE6A09EE0000000, float 0xBFE6A09EE0000000, float 0x3FE6A09EE0000000, float 0xBFED906CC0000000, float 0xBFC8F8B580000000, float 0x3FE1C73AC0000000, float 0x3FE44CF280000000, float 0xBFD2940780000000, float 0xBFEC38B260000000, float 0x3FEFD88E40000000, float 0xBFE6A09EE0000000, float 0xBFD87DE0E0000000, float 0x3FED906CC0000000, float 0x3FE1C73AC0000000, float 0x3FC8F8B580000000, float 0xBFEF629740000000, float 0x3FEA9B6700000000, float 0xBFD87DE0E0000000, float 0xBFE1C73AC0000000, float 0x3FEF629740000000, float 0x3FDE2B5E60000000, float 0x3FE44CF280000000, float 0xBFEFD88E40000000, float 0x3FD2940780000000, float -0.000000e+00, float 0xBFE6A09EE0000000, float 0x3FE6A09EE0000000, float 0x3FD87DE0E0000000, float 0x3FED906CC0000000, float 0xBFED906CC0000000, float 0xBFD87DE0E0000000, float 0x3FD87DE0E0000000, float 0xBFEA9B6700000000, float 0x3FC8F8B580000000, float 0x3FD2940780000000, float 0x3FEFD88E40000000, float 0xBFE8BC7F80000000, float 0xBFEC38B260000000, float 0x3FE6A09EE0000000, float 0xBFED906CC0000000, float 0xBFD87DE0E0000000, float 0x3FC8F8B580000000, float 0x3FEA9B6700000000, float 0xBFE1C73AC0000000, float 0xBFEF629740000000, float 0x3FED906CC0000000, float 0xBFEF629740000000, float 0xBFEA9B6700000000, float 0x3FB917A460000000, float 0x3FDE2B5E60000000, float 0xBFD2940780000000, float 0xBFE44CF280000000, float 1.000000e+00, float -1.000000e+00, float -1.000000e+00, float 0.000000e+00, float 0.000000e+00, float -0.000000e+00, float -0.000000e+00, float 0x3FED906CC0000000, float 0xBFEF629740000000, float 0xBFEA9B6700000000, float 0xBFB917A460000000, float 0xBFDE2B5E60000000, float 0x3FD2940780000000, float 0x3FE44CF280000000, float 0x3FE6A09EE0000000, float 0xBFED906CC0000000, float 0xBFD87DE0E0000000, float 0xBFC8F8B580000000, float 0xBFEA9B6700000000, float 0x3FE1C73AC0000000, float 0x3FEF629740000000, float 0x3FD87DE0E0000000, float 0xBFEA9B6700000000, float 0x3FC8F8B580000000, float 0xBFD2940780000000, float 0xBFEFD88E40000000, float 0x3FE8BC7F80000000, float 0x3FEC38B260000000, float 0.000000e+00, float 0xBFE6A09EE0000000, float 0x3FE6A09EE0000000, float 0xBFD87DE0E0000000, float 0xBFED906CC0000000, float 0x3FED906CC0000000, float 0x3FD87DE0E0000000, float 0xBFD87DE0E0000000, float 0xBFE1C73AC0000000, float 0x3FEF629740000000, float 0xBFDE2B5E60000000, float 0xBFE44CF280000000, float 0x3FEFD88E40000000, float 0xBFD2940780000000, float 0xBFE6A09EE0000000, float 0xBFD87DE0E0000000, float 0x3FED906CC0000000, float 0xBFE1C73AC0000000, float 0xBFC8F8B580000000, float 0x3FEF629740000000, float 0xBFEA9B6700000000, float 0xBFED906CC0000000, float 0xBFC8F8B580000000, float 0x3FE1C73AC0000000, float 0xBFE44CF280000000, float 0x3FD2940780000000, float 0x3FEC38B260000000, float 0xBFEFD88E40000000, float -1.000000e+00, float -0.000000e+00, float 0.000000e+00, float 0xBFE6A09EE0000000, float 0x3FE6A09EE0000000, float 0x3FE6A09EE0000000, float 0xBFE6A09EE0000000, float 0xBFED906CC0000000, float 0x3FC8F8B580000000, float 0xBFE1C73AC0000000, float 0xBFE8BC7F80000000, float 0x3FEE9F40A0000000, float 0x3FDE2B5E60000000, float 0xBFB917A460000000, float 0xBFE6A09EE0000000, float 0x3FD87DE0E0000000, float 0xBFED906CC0000000, float 0xBFEA9B6700000000, float 0x3FEF629740000000, float 0x3FC8F8B580000000, float 0x3FE1C73AC0000000, float 0xBFD87DE0E0000000, float 0x3FE1C73AC0000000, float 0xBFEF629740000000, float 0xBFEC38B260000000, float 0x3FE8BC7F80000000, float 0xBFB917A460000000, float 0x3FEE9F40A0000000, float -0.000000e+00, float 0x3FE6A09EE0000000, float 0xBFE6A09EE0000000, float 0xBFED906CC0000000, float 0x3FD87DE0E0000000, float 0xBFD87DE0E0000000, float 0x3FED906CC0000000, float 0x3FD87DE0E0000000, float 0x3FEA9B6700000000, float 0xBFC8F8B580000000, float 0xBFEE9F40A0000000, float 0xBFB917A460000000, float 0xBFE44CF280000000, float 0x3FDE2B5E60000000, float 0x3FE6A09EE0000000, float 0x3FED906CC0000000, float 0x3FD87DE0E0000000, float 0xBFEF629740000000, float 0xBFE1C73AC0000000, float 0xBFEA9B6700000000, float 0xBFC8F8B580000000, float 0x3FED906CC0000000, float 0x3FEF629740000000, float 0x3FEA9B6700000000, float 0xBFEFD88E40000000, float 0xBFEC38B260000000, float 0xBFEE9F40A0000000, float 0xBFE8BC7F80000000, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float -1.000000e+00, float -1.000000e+00, float -1.000000e+00, float -1.000000e+00, float 0x3FED906CC0000000, float 0x3FEF629740000000, float 0x3FEA9B6700000000, float 0xBFEFD88E40000000, float 0xBFEC38B260000000, float 0xBFEE9F40A0000000, float 0xBFE8BC7F80000000, float 0x3FE6A09EE0000000, float 0x3FED906CC0000000, float 0x3FD87DE0E0000000, float 0xBFEF629740000000, float 0xBFE1C73AC0000000, float 0xBFEA9B6700000000, float 0xBFC8F8B580000000, float 0x3FD87DE0E0000000, float 0x3FEA9B6700000000, float 0xBFC8F8B580000000, float 0xBFEE9F40A0000000, float 0xBFB917A460000000, float 0xBFE44CF280000000, float 0x3FDE2B5E60000000, float 0.000000e+00, float 0x3FE6A09EE0000000, float 0xBFE6A09EE0000000, float 0xBFED906CC0000000, float 0x3FD87DE0E0000000, float 0xBFD87DE0E0000000, float 0x3FED906CC0000000, float 0xBFD87DE0E0000000, float 0x3FE1C73AC0000000, float 0xBFEF629740000000, float 0xBFEC38B260000000, float 0x3FE8BC7F80000000, float 0xBFB917A460000000, float 0x3FEE9F40A0000000, float 0xBFE6A09EE0000000, float 0x3FD87DE0E0000000, float 0xBFED906CC0000000, float 0xBFEA9B6700000000, float 0x3FEF629740000000, float 0x3FC8F8B580000000, float 0x3FE1C73AC0000000, float 0xBFED906CC0000000, float 0x3FC8F8B580000000, float 0xBFE1C73AC0000000, float 0xBFE8BC7F80000000, float 0x3FEE9F40A0000000, float 0x3FDE2B5E60000000, float 0xBFB917A460000000, float -1.000000e+00, float 0.000000e+00, float -0.000000e+00, float 0xBFE6A09EE0000000, float 0x3FE6A09EE0000000, float 0x3FE6A09EE0000000, float 0xBFE6A09EE0000000, float 0xBFED906CC0000000, float 0xBFC8F8B580000000, float 0x3FE1C73AC0000000, float 0xBFE44CF280000000, float 0x3FD2940780000000, float 0x3FEC38B260000000, float 0xBFEFD88E40000000, float 0xBFE6A09EE0000000, float 0xBFD87DE0E0000000, float 0x3FED906CC0000000, float 0xBFE1C73AC0000000, float 0xBFC8F8B580000000, float 0x3FEF629740000000, float 0xBFEA9B6700000000, float 0xBFD87DE0E0000000, float 0xBFE1C73AC0000000, float 0x3FEF629740000000, float 0xBFDE2B5E60000000, float 0xBFE44CF280000000, float 0x3FEFD88E40000000, float 0xBFD2940780000000, float -0.000000e+00, float 0xBFE6A09EE0000000, float 0x3FE6A09EE0000000, float 0xBFD87DE0E0000000, float 0xBFED906CC0000000, float 0x3FED906CC0000000, float 0x3FD87DE0E0000000, float 0x3FD87DE0E0000000, float 0xBFEA9B6700000000, float 0x3FC8F8B580000000, float 0xBFD2940780000000, float 0xBFEFD88E40000000, float 0x3FE8BC7F80000000, float 0x3FEC38B260000000, float 0x3FE6A09EE0000000, float 0xBFED906CC0000000, float 0xBFD87DE0E0000000, float 0xBFC8F8B580000000, float 0xBFEA9B6700000000, float 0x3FE1C73AC0000000, float 0x3FEF629740000000, float 0x3FED906CC0000000, float 0xBFEF629740000000, float 0xBFEA9B6700000000, float 0xBFB917A460000000, float 0xBFDE2B5E60000000, float 0x3FD2940780000000, float 0x3FE44CF280000000, float 1.000000e+00, float -1.000000e+00, float -1.000000e+00, float -0.000000e+00, float -0.000000e+00, float 0.000000e+00, float -0.000000e+00, float 0x3FED906CC0000000, float 0xBFEF629740000000, float 0xBFEA9B6700000000, float 0x3FB917A460000000, float 0x3FDE2B5E60000000, float 0xBFD2940780000000, float 0xBFE44CF280000000, float 0x3FE6A09EE0000000, float 0xBFED906CC0000000, float 0xBFD87DE0E0000000, float 0x3FC8F8B580000000, float 0x3FEA9B6700000000, float 0xBFE1C73AC0000000, float 0xBFEF629740000000, float 0x3FD87DE0E0000000, float 0xBFEA9B6700000000, float 0x3FC8F8B580000000, float 0x3FD2940780000000, float 0x3FEFD88E40000000, float 0xBFE8BC7F80000000, float 0xBFEC38B260000000, float -0.000000e+00, float 0xBFE6A09EE0000000, float 0x3FE6A09EE0000000, float 0x3FD87DE0E0000000, float 0x3FED906CC0000000, float 0xBFED906CC0000000, float 0xBFD87DE0E0000000, float 0xBFD87DE0E0000000, float 0xBFE1C73AC0000000, float 0x3FEF629740000000, float 0x3FDE2B5E60000000, float 0x3FE44CF280000000, float 0xBFEFD88E40000000, float 0x3FD2940780000000, float 0xBFE6A09EE0000000, float 0xBFD87DE0E0000000, float 0x3FED906CC0000000, float 0x3FE1C73AC0000000, float 0x3FC8F8B580000000, float 0xBFEF629740000000, float 0x3FEA9B6700000000, float 0xBFED906CC0000000, float 0xBFC8F8B580000000, float 0x3FE1C73AC0000000, float 0x3FE44CF280000000, float 0xBFD2940780000000, float 0xBFEC38B260000000, float 0x3FEFD88E40000000, float -1.000000e+00, float -0.000000e+00, float -0.000000e+00, float 0x3FE6A09EE0000000, float 0xBFE6A09EE0000000, float 0xBFE6A09EE0000000, float 0x3FE6A09EE0000000, float 0xBFED906CC0000000, float 0x3FC8F8B580000000, float 0xBFE1C73AC0000000, float 0x3FE8BC7F80000000, float 0xBFEE9F40A0000000, float 0xBFDE2B5E60000000, float 0x3FB917A460000000, float 0xBFE6A09EE0000000, float 0x3FD87DE0E0000000, float 0xBFED906CC0000000, float 0x3FEA9B6700000000, float 0xBFEF629740000000, float 0xBFC8F8B580000000, float 0xBFE1C73AC0000000, float 0xBFD87DE0E0000000, float 0x3FE1C73AC0000000, float 0xBFEF629740000000, float 0x3FEC38B260000000, float 0xBFE8BC7F80000000, float 0x3FB917A460000000, float 0xBFEE9F40A0000000, float -0.000000e+00, float 0x3FE6A09EE0000000, float 0xBFE6A09EE0000000, float 0x3FED906CC0000000, float 0xBFD87DE0E0000000, float 0x3FD87DE0E0000000, float 0xBFED906CC0000000, float 0x3FD87DE0E0000000, float 0x3FEA9B6700000000, float 0xBFC8F8B580000000, float 0x3FEE9F40A0000000, float 0x3FB917A460000000, float 0x3FE44CF280000000, float 0xBFDE2B5E60000000, float 0x3FE6A09EE0000000, float 0x3FED906CC0000000, float 0x3FD87DE0E0000000, float 0x3FEF629740000000, float 0x3FE1C73AC0000000, float 0x3FEA9B6700000000, float 0x3FC8F8B580000000, float 0x3FED906CC0000000, float 0x3FEF629740000000, float 0x3FEA9B6700000000, float 0x3FEFD88E40000000, float 0x3FEC38B260000000, float 0x3FEE9F40A0000000, float 0x3FE8BC7F80000000], align 16
@main.cos_512 = private unnamed_addr constant [448 x float] [float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 0x3FEFF620E0000000, float 0x3FEFFD88C0000000, float 0x3FEFE9CCC0000000, float 0x3FEFFF62C0000000, float 0x3FEFF09520000000, float 0x3FEFFA7220000000, float 0x3FEFE1CBC0000000, float 0x3FEFD88E40000000, float 0x3FEFF620E0000000, float 0x3FEFA75680000000, float 0x3FEFFD88C0000000, float 0x3FEFC26560000000, float 0x3FEFE9CCC0000000, float 0x3FEF8765C0000000, float 0x3FEFA75680000000, float 0x3FEFE9CCC0000000, float 0x3FEF38F360000000, float 0x3FEFFA7220000000, float 0x3FEF7598A0000000, float 0x3FEFCE1600000000, float 0x3FEEF177A0000000, float 0x3FEF629740000000, float 0x3FEFD88E40000000, float 0x3FEE9F40A0000000, float 0x3FEFF620E0000000, float 0x3FEF0A7E80000000, float 0x3FEFA75680000000, float 0x3FEE2120E0000000, float 0x3FEF0A7E80000000, float 0x3FEFC26560000000, float 0x3FEDDB1420000000, float 0x3FEFF09520000000, float 0x3FEE817BA0000000, float 0x3FEF7598A0000000, float 0x3FED17E780000000, float 0x3FEE9F40A0000000, float 0x3FEFA75680000000, float 0x3FECED7A60000000, float 0x3FEFE9CCC0000000, float 0x3FEDDB1420000000, float 0x3FEF38F360000000, float 0x3FEBD7C0C0000000, float 0x3FEE2120E0000000, float 0x3FEF8765C0000000, float 0x3FEBD7C0C0000000, float 0x3FEFE1CBC0000000, float 0x3FED17E780000000, float 0x3FEEF177A0000000, float 0x3FEA630880000000, float 0x3FED906CC0000000, float 0x3FEF629740000000, float 0x3FEA9B6700000000, float 0x3FEFD88E40000000, float 0x3FEC38B260000000, float 0x3FEE9F40A0000000, float 0x3FE8BC7F80000000, float 0x3FECED7A60000000, float 0x3FEF38F360000000, float 0x3FE93A2160000000, float 0x3FEFCE1600000000, float 0x3FEB3E4CE0000000, float 0x3FEE4269A0000000, float 0x3FE6E744C0000000, float 0x3FEC38B260000000, float 0x3FEF0A7E80000000, float 0x3FE7B5DEE0000000, float 0x3FEFC26560000000, float 0x3FEA29A800000000, float 0x3FEDDB1420000000, float 0x3FE4E6CB20000000, float 0x3FEB728420000000, float 0x3FEED740C0000000, float 0x3FE610B840000000, float 0x3FEFB57A40000000, float 0x3FE8FBCC20000000, float 0x3FED6961C0000000, float 0x3FE2BEDB80000000, float 0x3FEA9B6700000000, float 0x3FEE9F40A0000000, float 0x3FE44CF280000000, float 0x3FEFA75680000000, float 0x3FE7B5DEE0000000, float 0x3FECED7A60000000, float 0x3FE0738820000000, float 0x3FE9B3E140000000, float 0x3FEE628880000000, float 0x3FE26D04E0000000, float 0x3FEF97F840000000, float 0x3FE65918A0000000, float 0x3FEC678C00000000, float 0x3FDC1248E0000000, float 0x3FE8BC7F80000000, float 0x3FEE2120E0000000, float 0x3FE0738820000000, float 0x3FEF8765C0000000, float 0x3FE4E6CB20000000, float 0x3FEBD7C0C0000000, float 0x3FD7088500000000, float 0x3FE7B5DEE0000000, float 0x3FEDDB1420000000, float 0x3FDCC66D40000000, float 0x3FEF7598A0000000, float 0x3FE36058A0000000, float 0x3FEB3E4CE0000000, float 0x3FD1D34580000000, float 0x3FE6A09EE0000000, float 0x3FED906CC0000000, float 0x3FD87DE0E0000000, float 0x3FEF629740000000, float 0x3FE1C73AC0000000, float 0x3FEA9B6700000000, float 0x3FC8F8B580000000, float 0x3FE57D6940000000, float 0x3FED413560000000, float 0x3FD4135DA0000000, float 0x3FEF4E5F80000000, float 0x3FE01CFBC0000000, float 0x3FE9EF4380000000, float 0x3FBC378240000000, float 0x3FE44CF280000000, float 0x3FECED7A60000000, float 0x3FCF19F800000000, float 0x3FEF38F360000000, float 0x3FDCC66D40000000, float 0x3FE93A2160000000, float 0x3F992146A0000000, float 0x3FE30FF760000000, float 0x3FEC954A80000000, float 0x3FC5E21540000000, float 0x3FEF225320000000, float 0x3FD9372A40000000, float 0x3FE87C3F80000000, float 0xBFAF657760000000, float 0x3FE1C73AC0000000, float 0x3FEC38B260000000, float 0x3FB917A460000000, float 0x3FEF0A7E80000000, float 0x3FD58F9B20000000, float 0x3FE7B5DEE0000000, float 0xBFC2C80C80000000, float 0x3FE0738820000000, float 0x3FEBD7C0C0000000, float 0x3F992146A0000000, float 0x3FEEF177A0000000, float 0x3FD1D34580000000, float 0x3FE6E744C0000000, float 0xBFCD934F00000000, float 0x3FDE2B5E60000000, float 0x3FEB728420000000, float 0xBFA91F70E0000000, float 0x3FEED740C0000000, float 0x3FCC0B8060000000, float 0x3FE610B840000000, float 0xBFD4135DA0000000, float 0x3FDB5D0FA0000000, float 0x3FEB090B40000000, float 0xBFBF5653C0000000, float 0x3FEEBBD9C0000000, float 0x3FC4557580000000, float 0x3FE5328300000000, float 0xBFD9372A40000000, float 0x3FD87DE0E0000000, float 0x3FEA9B6700000000, float 0xBFC8F8B580000000, float 0x3FEE9F40A0000000, float 0x3FB917A460000000, float 0x3FE44CF280000000, float 0xBFDE2B5E60000000, float 0x3FD58F9B20000000, float 0x3FEA29A800000000, float 0xBFD111D360000000, float 0x3FEE817BA0000000, float 0x3FA2D85E00000000, float 0x3FE36058A0000000, float 0xBFE1734D60000000, float 0x3FD2940780000000, float 0x3FE9B3E140000000, float 0xBFD58F9B20000000, float 0x3FEE628880000000, float 0xBF992146A0000000, float 0x3FE26D04E0000000, float 0xBFE3AFFB00000000, float 0x3FCF19F800000000, float 0x3FE93A2160000000, float 0xBFD9EF7800000000, float 0x3FEE4269A0000000, float 0xBFB5F6CAC0000000, float 0x3FE1734D60000000, float 0xBFE5C77BC0000000, float 0x3FC8F8B580000000, float 0x3FE8BC7F80000000, float 0xBFDE2B5E60000000, float 0x3FEE2120E0000000, float 0xBFC2C80C80000000, float 0x3FE0738820000000, float 0xBFE7B5DEE0000000, float 0x3FC2C80C80000000, float 0x3FE83B0E60000000, float 0xBFE11EB420000000, float 0x3FEDFEAE60000000, float 0xBFCA829D00000000, float 0x3FDEDC1A40000000, float 0xBFE9777F20000000, float 0x3FB917A460000000, float 0x3FE7B5DEE0000000, float 0xBFE30FF760000000, float 0x3FEDDB1420000000, float 0xBFD111D360000000, float 0x3FDCC66D40000000, float 0xBFEB090B40000000, float 0x3FA91F70E0000000, float 0x3FE72D0800000000, float 0xBFE4E6CB20000000, float 0x3FEDB65240000000, float 0xBFD4D1E100000000, float 0x3FDAA6CA00000000, float 0xBFEC678C00000000, float 0.000000e+00, float 0x3FE6A09EE0000000, float 0xBFE6A09EE0000000, float 0x3FED906CC0000000, float 0xBFD87DE0E0000000, float 0x3FD87DE0E0000000, float 0xBFED906CC0000000, float 0xBFA91F70E0000000, float 0x3FE610B840000000, float 0xBFE83B0E60000000, float 0x3FED6961C0000000, float 0xBFDC1248E0000000, float 0x3FD64C7F40000000, float 0xBFEE817BA0000000, float 0xBFB917A460000000, float 0x3FE57D6940000000, float 0xBFE9B3E140000000, float 0x3FED413560000000, float 0xBFDF8BA400000000, float 0x3FD4135DA0000000, float 0xBFEF38F360000000, float 0xBFC2C80C80000000, float 0x3FE4E6CB20000000, float 0xBFEB090B40000000, float 0x3FED17E780000000, float 0xBFE1734D60000000, float 0x3FD1D34580000000, float 0xBFEFB57A40000000, float 0xBFC8F8B580000000, float 0x3FE44CF280000000, float 0xBFEC38B260000000, float 0x3FECED7A60000000, float 0xBFE30FF760000000, float 0x3FCF19F800000000, float 0xBFEFF620E0000000, float 0xBFCF19F800000000, float 0x3FE3AFFB00000000, float 0xBFED413560000000, float 0x3FECC1F000000000, float 0xBFE49A45A0000000, float 0x3FCA829D00000000, float 0xBFEFFA7220000000, float 0xBFD2940780000000, float 0x3FE30FF760000000, float 0xBFEE2120E0000000, float 0x3FEC954A80000000, float 0xBFE610B840000000, float 0x3FC5E21540000000, float 0xBFEFC26560000000, float 0xBFD58F9B20000000, float 0x3FE26D04E0000000, float 0xBFEED740C0000000, float 0x3FEC678C00000000, float 0xBFE771E6C0000000, float 0x3FC139F340000000, float 0xBFEF4E5F80000000, float 0xBFD87DE0E0000000, float 0x3FE1C73AC0000000, float 0xBFEF629740000000, float 0x3FEC38B260000000, float 0xBFE8BC7F80000000, float 0x3FB917A460000000, float 0xBFEE9F40A0000000, float 0xBFDB5D0FA0000000, float 0x3FE11EB420000000, float 0xBFEFC26560000000, float 0x3FEC08C400000000, float 0xBFE9EF4380000000, float 0x3FAF657760000000, float 0xBFEDB65240000000, float 0xBFDE2B5E60000000, float 0x3FE0738820000000, float 0xBFEFF620E0000000, float 0x3FEBD7C0C0000000, float 0xBFEB090B40000000, float 0x3F992146A0000000, float 0xBFEC954A80000000, float 0xBFE0738820000000, float 0x3FDF8BA400000000, float 0xBFEFFD88C0000000, float 0x3FEBA5AAC0000000, float 0xBFEC08C400000000, float 0xBF89221000000000, float 0xBFEB3E4CE0000000, float 0xBFE1C73AC0000000, float 0x3FDE2B5E60000000, float 0xBFEFD88E40000000, float 0x3FEB728420000000, float 0xBFECED7A60000000, float 0xBFA91F70E0000000, float 0xBFE9B3E140000000, float 0xBFE30FF760000000, float 0x3FDCC66D40000000, float 0xBFEF8765C0000000, float 0x3FEB3E4CE0000000, float 0xBFEDB65240000000, float 0xBFB5F6CAC0000000, float 0xBFE7F8EC00000000, float 0xBFE44CF280000000, float 0x3FDB5D0FA0000000, float 0xBFEF0A7E80000000, float 0x3FEB090B40000000, float 0xBFEE628880000000, float 0xBFBF5653C0000000, float 0xBFE610B840000000, float 0xBFE57D6940000000, float 0x3FD9EF7800000000, float 0xBFEE628880000000, float 0x3FEAD2BD40000000, float 0xBFEEF177A0000000, float 0xBFC4557580000000, float 0xBFE3FED840000000, float 0xBFE6A09EE0000000, float 0x3FD87DE0E0000000, float 0xBFED906CC0000000, float 0x3FEA9B6700000000, float 0xBFEF629740000000, float 0xBFC8F8B580000000, float 0xBFE1C73AC0000000, float 0xBFE7B5DEE0000000, float 0x3FD7088500000000, float 0xBFEC954A80000000, float 0x3FEA630880000000, float 0xBFEFB57A40000000, float 0xBFCD934F00000000, float 0xBFDEDC1A40000000, float 0xBFE8BC7F80000000, float 0x3FD58F9B20000000, float 0xBFEB728420000000, float 0x3FEA29A800000000, float 0xBFEFE9CCC0000000, float 0xBFD111D360000000, float 0xBFD9EF7800000000, float 0xBFE9B3E140000000, float 0x3FD4135DA0000000, float 0xBFEA29A800000000, float 0x3FE9EF4380000000, float 0xBFEFFF62C0000000, float 0xBFD3541100000000, float 0xBFD4D1E100000000, float 0xBFEA9B6700000000, float 0x3FD2940780000000, float 0xBFE8BC7F80000000, float 0x3FE9B3E140000000, float 0xBFEFF620E0000000, float 0xBFD58F9B20000000, float 0xBFCF19F800000000, float 0xBFEB728420000000, float 0x3FD111D360000000, float 0xBFE72D0800000000, float 0x3FE9777F20000000, float 0xBFEFCE1600000000, float 0xBFD7C3A860000000, float 0xBFC4557580000000, float 0xBFEC38B260000000, float 0x3FCF19F800000000, float 0xBFE57D6940000000, float 0x3FE93A2160000000, float 0xBFEF8765C0000000, float 0xBFD9EF7800000000, float 0xBFB2D527E0000000, float 0xBFECED7A60000000, float 0x3FCC0B8060000000, float 0xBFE3AFFB00000000, float 0x3FE8FBCC20000000, float 0xBFEF225320000000, float 0xBFDC1248E0000000, float 0x3F89221000000000, float 0xBFED906CC0000000, float 0x3FC8F8B580000000, float 0xBFE1C73AC0000000, float 0x3FE8BC7F80000000, float 0xBFEE9F40A0000000, float 0xBFDE2B5E60000000, float 0x3FB917A460000000, float 0xBFEE2120E0000000, float 0x3FC5E21540000000, float 0xBFDF8BA400000000, float 0x3FE87C3F80000000, float 0xBFEDFEAE60000000, float 0xBFE01CFBC0000000, float 0x3FC76DDAC0000000, float 0xBFEE9F40A0000000, float 0x3FC2C80C80000000, float 0xBFDB5D0FA0000000, float 0x3FE83B0E60000000, float 0xBFED413560000000, float 0xBFE11EB420000000, float 0x3FD111D360000000, float 0xBFEF0A7E80000000, float 0x3FBF5653C0000000, float 0xBFD7088500000000, float 0x3FE7F8EC00000000, float 0xBFEC678C00000000, float 0xBFE21A7A00000000, float 0x3FD64C7F40000000, float 0xBFEF629740000000, float 0x3FB917A460000000, float 0xBFD2940780000000, float 0x3FE7B5DEE0000000, float 0xBFEB728420000000, float 0xBFE30FF760000000, float 0x3FDB5D0FA0000000, float 0xBFEFA75680000000, float 0x3FB2D527E0000000, float 0xBFCC0B8060000000, float 0x3FE771E6C0000000, float 0xBFEA630880000000, float 0xBFE3FED840000000, float 0x3FE01CFBC0000000, float 0xBFEFD88E40000000, float 0x3FA91F70E0000000, float 0xBFC2C80C80000000, float 0x3FE72D0800000000, float 0xBFE93A2160000000, float 0xBFE4E6CB20000000, float 0x3FE26D04E0000000, float 0xBFEFF620E0000000, float 0x3F992146A0000000, float 0xBFB2D527E0000000, float 0x3FE6E744C0000000, float 0xBFE7F8EC00000000, float 0xBFE5C77BC0000000, float 0x3FE49A45A0000000], align 16
@main.reversed = private unnamed_addr constant [8 x i32] [i32 0, i32 4, i32 2, i32 6, i32 1, i32 5, i32 3, i32 7], align 16
@.str = private unnamed_addr constant [16 x i8] c"x = %i y = %i \0A\00", align 1

; Function Attrs: noinline nounwind uwtable
define void @step1(i32* nocapture readonly %work_x, i32* nocapture readonly %work_y, i32* nocapture %DATA_x, i32* nocapture %DATA_y, i32* nocapture %data_x, i32* nocapture %data_y, i32* nocapture readnone %smem, i32* nocapture readnone %reversed, float* nocapture readnone %sin_64, float* nocapture readnone %cos_64, float* nocapture readonly %sin_512, float* nocapture readonly %cos_512) local_unnamed_addr #0 !dbg !7 {
  call void @llvm.dbg.value(metadata i32* %work_x, metadata !15, metadata !DIExpression()), !dbg !95
  call void @llvm.dbg.value(metadata i32* %work_y, metadata !16, metadata !DIExpression()), !dbg !96
  call void @llvm.dbg.value(metadata i32* %DATA_x, metadata !17, metadata !DIExpression()), !dbg !97
  call void @llvm.dbg.value(metadata i32* %DATA_y, metadata !18, metadata !DIExpression()), !dbg !98
  call void @llvm.dbg.value(metadata i32* %data_x, metadata !19, metadata !DIExpression()), !dbg !99
  call void @llvm.dbg.value(metadata i32* %data_y, metadata !20, metadata !DIExpression()), !dbg !100
  call void @llvm.dbg.value(metadata i32* %smem, metadata !21, metadata !DIExpression()), !dbg !101
  call void @llvm.dbg.value(metadata i32* %reversed, metadata !22, metadata !DIExpression()), !dbg !102
  call void @llvm.dbg.value(metadata float* %sin_64, metadata !23, metadata !DIExpression()), !dbg !103
  call void @llvm.dbg.value(metadata float* %cos_64, metadata !24, metadata !DIExpression()), !dbg !104
  call void @llvm.dbg.value(metadata float* %sin_512, metadata !25, metadata !DIExpression()), !dbg !105
  call void @llvm.dbg.value(metadata float* %cos_512, metadata !26, metadata !DIExpression()), !dbg !106
  call void @llvm.dbg.value(metadata i32 64, metadata !32, metadata !DIExpression()), !dbg !107
  call void @llvm.dbg.value(metadata i32 0, metadata !27, metadata !DIExpression()), !dbg !108
  %arrayidx12 = getelementptr inbounds i32, i32* %data_x, i64 4
  %arrayidx15 = getelementptr inbounds i32, i32* %data_y, i64 4
  %arrayidx24 = getelementptr inbounds i32, i32* %data_x, i64 1
  %arrayidx26 = getelementptr inbounds i32, i32* %data_y, i64 1
  %arrayidx27 = getelementptr inbounds i32, i32* %data_x, i64 5
  %arrayidx30 = getelementptr inbounds i32, i32* %data_y, i64 5
  %arrayidx40 = getelementptr inbounds i32, i32* %data_x, i64 2
  %arrayidx42 = getelementptr inbounds i32, i32* %data_y, i64 2
  %arrayidx43 = getelementptr inbounds i32, i32* %data_x, i64 6
  %arrayidx46 = getelementptr inbounds i32, i32* %data_y, i64 6
  %arrayidx56 = getelementptr inbounds i32, i32* %data_x, i64 3
  %arrayidx58 = getelementptr inbounds i32, i32* %data_y, i64 3
  %arrayidx59 = getelementptr inbounds i32, i32* %data_x, i64 7
  %arrayidx62 = getelementptr inbounds i32, i32* %data_y, i64 7
  br label %1, !dbg !109

; <label>:1:                                      ; preds = %106, %0
  %indvars.iv608 = phi i64 [ 0, %0 ], [ %indvars.iv.next609, %106 ]
  call void @llvm.dbg.value(metadata i32 0, metadata !30, metadata !DIExpression()), !dbg !110
  call void @llvm.dbg.value(metadata i64 %indvars.iv608, metadata !27, metadata !DIExpression()), !dbg !108
  br label %2, !dbg !111

; <label>:2:                                      ; preds = %2, %1
  %indvars.iv = phi i64 [ 0, %1 ], [ %indvars.iv.next, %2 ]
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !30, metadata !DIExpression()), !dbg !110
  %3 = shl i64 %indvars.iv, 6, !dbg !113
  %4 = add nuw nsw i64 %3, %indvars.iv608, !dbg !116
  %arrayidx = getelementptr inbounds i32, i32* %work_x, i64 %4, !dbg !117
  %5 = load i32, i32* %arrayidx, align 4, !dbg !117, !tbaa !118
  %arrayidx3 = getelementptr inbounds i32, i32* %data_x, i64 %indvars.iv, !dbg !122
  store i32 %5, i32* %arrayidx3, align 4, !dbg !123, !tbaa !118
  %arrayidx7 = getelementptr inbounds i32, i32* %work_y, i64 %4, !dbg !124
  %6 = load i32, i32* %arrayidx7, align 4, !dbg !124, !tbaa !118
  %arrayidx9 = getelementptr inbounds i32, i32* %data_y, i64 %indvars.iv, !dbg !125
  store i32 %6, i32* %arrayidx9, align 4, !dbg !126, !tbaa !118
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !127
  %exitcond = icmp eq i64 %indvars.iv.next, 8, !dbg !128
  br i1 %exitcond, label %7, label %2, !dbg !111, !llvm.loop !129

; <label>:7:                                      ; preds = %2
  call void @llvm.dbg.value(metadata i32 1, metadata !33, metadata !DIExpression()), !dbg !131
  call void @llvm.dbg.value(metadata i32 -1, metadata !40, metadata !DIExpression()), !dbg !131
  call void @llvm.dbg.value(metadata i32 0, metadata !38, metadata !DIExpression()), !dbg !131
  call void @llvm.dbg.value(metadata i32 -1, metadata !41, metadata !DIExpression()), !dbg !131
  call void @llvm.dbg.value(metadata i32 -1, metadata !39, metadata !DIExpression()), !dbg !131
  call void @llvm.dbg.value(metadata i32 -1, metadata !42, metadata !DIExpression()), !dbg !131
  %8 = load i32, i32* %data_x, align 4, !dbg !132, !tbaa !118
  call void @llvm.dbg.value(metadata i32 %8, metadata !45, metadata !DIExpression()), !dbg !132
  %9 = load i32, i32* %data_y, align 4, !dbg !132, !tbaa !118
  call void @llvm.dbg.value(metadata i32 %9, metadata !47, metadata !DIExpression()), !dbg !132
  %10 = load i32, i32* %arrayidx12, align 4, !dbg !132, !tbaa !118
  %add13 = add nsw i32 %10, %8, !dbg !132
  store i32 %add13, i32* %data_x, align 4, !dbg !132, !tbaa !118
  %11 = load i32, i32* %arrayidx15, align 4, !dbg !132, !tbaa !118
  %add16 = add nsw i32 %11, %9, !dbg !132
  store i32 %add16, i32* %data_y, align 4, !dbg !132, !tbaa !118
  %12 = load i32, i32* %arrayidx12, align 4, !dbg !132, !tbaa !118
  %sub = sub nsw i32 %8, %12, !dbg !132
  store i32 %sub, i32* %arrayidx12, align 4, !dbg !132, !tbaa !118
  %13 = load i32, i32* %arrayidx15, align 4, !dbg !132, !tbaa !118
  %sub21 = sub nsw i32 %9, %13, !dbg !132
  store i32 %sub21, i32* %arrayidx15, align 4, !dbg !132, !tbaa !118
  %14 = load i32, i32* %arrayidx24, align 4, !dbg !133, !tbaa !118
  call void @llvm.dbg.value(metadata i32 %14, metadata !48, metadata !DIExpression()), !dbg !133
  %15 = load i32, i32* %arrayidx26, align 4, !dbg !133, !tbaa !118
  call void @llvm.dbg.value(metadata i32 %15, metadata !50, metadata !DIExpression()), !dbg !133
  %16 = load i32, i32* %arrayidx27, align 4, !dbg !133, !tbaa !118
  %add28 = add nsw i32 %16, %14, !dbg !133
  store i32 %add28, i32* %arrayidx24, align 4, !dbg !133, !tbaa !118
  %17 = load i32, i32* %arrayidx30, align 4, !dbg !133, !tbaa !118
  %add31 = add nsw i32 %17, %15, !dbg !133
  store i32 %add31, i32* %arrayidx26, align 4, !dbg !133, !tbaa !118
  %18 = load i32, i32* %arrayidx27, align 4, !dbg !133, !tbaa !118
  %sub34 = sub nsw i32 %14, %18, !dbg !133
  store i32 %sub34, i32* %arrayidx27, align 4, !dbg !133, !tbaa !118
  %19 = load i32, i32* %arrayidx30, align 4, !dbg !133, !tbaa !118
  %sub37 = sub nsw i32 %15, %19, !dbg !133
  store i32 %sub37, i32* %arrayidx30, align 4, !dbg !133, !tbaa !118
  %20 = load i32, i32* %arrayidx40, align 4, !dbg !134, !tbaa !118
  call void @llvm.dbg.value(metadata i32 %20, metadata !51, metadata !DIExpression()), !dbg !134
  %21 = load i32, i32* %arrayidx42, align 4, !dbg !134, !tbaa !118
  call void @llvm.dbg.value(metadata i32 %21, metadata !53, metadata !DIExpression()), !dbg !134
  %22 = load i32, i32* %arrayidx43, align 4, !dbg !134, !tbaa !118
  %add44 = add nsw i32 %22, %20, !dbg !134
  store i32 %add44, i32* %arrayidx40, align 4, !dbg !134, !tbaa !118
  %23 = load i32, i32* %arrayidx46, align 4, !dbg !134, !tbaa !118
  %add47 = add nsw i32 %23, %21, !dbg !134
  store i32 %add47, i32* %arrayidx42, align 4, !dbg !134, !tbaa !118
  %24 = load i32, i32* %arrayidx43, align 4, !dbg !134, !tbaa !118
  %sub50 = sub nsw i32 %20, %24, !dbg !134
  store i32 %sub50, i32* %arrayidx43, align 4, !dbg !134, !tbaa !118
  %25 = load i32, i32* %arrayidx46, align 4, !dbg !134, !tbaa !118
  %sub53 = sub nsw i32 %21, %25, !dbg !134
  store i32 %sub53, i32* %arrayidx46, align 4, !dbg !134, !tbaa !118
  %26 = load i32, i32* %arrayidx56, align 4, !dbg !135, !tbaa !118
  call void @llvm.dbg.value(metadata i32 %26, metadata !54, metadata !DIExpression()), !dbg !135
  %27 = load i32, i32* %arrayidx58, align 4, !dbg !135, !tbaa !118
  call void @llvm.dbg.value(metadata i32 %27, metadata !56, metadata !DIExpression()), !dbg !135
  %28 = load i32, i32* %arrayidx59, align 4, !dbg !135, !tbaa !118
  %add60 = add nsw i32 %28, %26, !dbg !135
  store i32 %add60, i32* %arrayidx56, align 4, !dbg !135, !tbaa !118
  %29 = load i32, i32* %arrayidx62, align 4, !dbg !135, !tbaa !118
  %add63 = add nsw i32 %29, %27, !dbg !135
  store i32 %add63, i32* %arrayidx58, align 4, !dbg !135, !tbaa !118
  %30 = load i32, i32* %arrayidx59, align 4, !dbg !135, !tbaa !118
  %sub66 = sub nsw i32 %26, %30, !dbg !135
  store i32 %sub66, i32* %arrayidx59, align 4, !dbg !135, !tbaa !118
  %31 = load i32, i32* %arrayidx62, align 4, !dbg !135, !tbaa !118
  %sub69 = sub nsw i32 %27, %31, !dbg !135
  store i32 %sub69, i32* %arrayidx62, align 4, !dbg !135, !tbaa !118
  %32 = load i32, i32* %arrayidx27, align 4, !dbg !131, !tbaa !118
  call void @llvm.dbg.value(metadata i32 %32, metadata !43, metadata !DIExpression()), !dbg !131
  %33 = load i32, i32* %arrayidx30, align 4, !dbg !131, !tbaa !118
  %sub76 = add nsw i32 %33, %32, !dbg !131
  %conv = sitofp i32 %sub76 to float, !dbg !131
  %mul77 = fmul float %conv, 0x3FE6A09E60000000, !dbg !131
  %conv78 = fptosi float %mul77 to i32, !dbg !131
  store i32 %conv78, i32* %arrayidx27, align 4, !dbg !131, !tbaa !118
  %34 = load i32, i32* %arrayidx30, align 4, !dbg !131, !tbaa !118
  %add83 = sub i32 %34, %32, !dbg !131
  %conv84 = sitofp i32 %add83 to float, !dbg !131
  %mul85 = fmul float %conv84, 0x3FE6A09E60000000, !dbg !131
  %conv86 = fptosi float %mul85 to i32, !dbg !131
  store i32 %conv86, i32* %arrayidx30, align 4, !dbg !131, !tbaa !118
  %35 = load i32, i32* %arrayidx43, align 4, !dbg !131, !tbaa !118
  call void @llvm.dbg.value(metadata i32 %35, metadata !43, metadata !DIExpression()), !dbg !131
  %36 = load i32, i32* %arrayidx46, align 4, !dbg !131, !tbaa !118
  store i32 %36, i32* %arrayidx43, align 4, !dbg !131, !tbaa !118
  %mul95 = sub nsw i32 0, %35, !dbg !131
  store i32 %mul95, i32* %arrayidx46, align 4, !dbg !131, !tbaa !118
  %37 = load i32, i32* %arrayidx59, align 4, !dbg !131, !tbaa !118
  call void @llvm.dbg.value(metadata i32 %37, metadata !43, metadata !DIExpression()), !dbg !131
  %38 = load i32, i32* %arrayidx62, align 4, !dbg !131, !tbaa !118
  %sub105 = sub i32 %38, %37, !dbg !131
  %conv106 = sitofp i32 %sub105 to float, !dbg !131
  %mul107 = fmul float %conv106, 0x3FE6A09E60000000, !dbg !131
  %conv108 = fptosi float %mul107 to i32, !dbg !131
  store i32 %conv108, i32* %arrayidx59, align 4, !dbg !131, !tbaa !118
  %39 = load i32, i32* %arrayidx62, align 4, !dbg !131, !tbaa !118
  %40 = add i32 %37, %39, !dbg !131
  %add113 = sub i32 0, %40, !dbg !131
  %conv114 = sitofp i32 %add113 to float, !dbg !131
  %mul115 = fmul float %conv114, 0x3FE6A09E60000000, !dbg !131
  %conv116 = fptosi float %mul115 to i32, !dbg !131
  store i32 %conv116, i32* %arrayidx62, align 4, !dbg !131, !tbaa !118
  call void @llvm.dbg.value(metadata i32 0, metadata !57, metadata !DIExpression()), !dbg !136
  call void @llvm.dbg.value(metadata i32 -1, metadata !59, metadata !DIExpression()), !dbg !136
  %41 = load i32, i32* %data_x, align 4, !dbg !137, !tbaa !118
  call void @llvm.dbg.value(metadata i32 %41, metadata !61, metadata !DIExpression()), !dbg !137
  %42 = load i32, i32* %data_y, align 4, !dbg !137, !tbaa !118
  call void @llvm.dbg.value(metadata i32 %42, metadata !63, metadata !DIExpression()), !dbg !137
  %43 = load i32, i32* %arrayidx40, align 4, !dbg !137, !tbaa !118
  %add123 = add nsw i32 %43, %41, !dbg !137
  store i32 %add123, i32* %data_x, align 4, !dbg !137, !tbaa !118
  %44 = load i32, i32* %arrayidx42, align 4, !dbg !137, !tbaa !118
  %add126 = add nsw i32 %44, %42, !dbg !137
  store i32 %add126, i32* %data_y, align 4, !dbg !137, !tbaa !118
  %45 = load i32, i32* %arrayidx40, align 4, !dbg !137, !tbaa !118
  %sub129 = sub nsw i32 %41, %45, !dbg !137
  store i32 %sub129, i32* %arrayidx40, align 4, !dbg !137, !tbaa !118
  %46 = load i32, i32* %arrayidx42, align 4, !dbg !137, !tbaa !118
  %sub132 = sub nsw i32 %42, %46, !dbg !137
  store i32 %sub132, i32* %arrayidx42, align 4, !dbg !137, !tbaa !118
  %47 = load i32, i32* %arrayidx24, align 4, !dbg !138, !tbaa !118
  call void @llvm.dbg.value(metadata i32 %47, metadata !64, metadata !DIExpression()), !dbg !138
  %48 = load i32, i32* %arrayidx26, align 4, !dbg !138, !tbaa !118
  call void @llvm.dbg.value(metadata i32 %48, metadata !66, metadata !DIExpression()), !dbg !138
  %49 = load i32, i32* %arrayidx56, align 4, !dbg !138, !tbaa !118
  %add139 = add nsw i32 %49, %47, !dbg !138
  store i32 %add139, i32* %arrayidx24, align 4, !dbg !138, !tbaa !118
  %50 = load i32, i32* %arrayidx58, align 4, !dbg !138, !tbaa !118
  %add142 = add nsw i32 %50, %48, !dbg !138
  store i32 %add142, i32* %arrayidx26, align 4, !dbg !138, !tbaa !118
  %51 = load i32, i32* %arrayidx56, align 4, !dbg !138, !tbaa !118
  %sub145 = sub nsw i32 %47, %51, !dbg !138
  store i32 %sub145, i32* %arrayidx56, align 4, !dbg !138, !tbaa !118
  %52 = load i32, i32* %arrayidx58, align 4, !dbg !138, !tbaa !118
  %sub148 = sub nsw i32 %48, %52, !dbg !138
  store i32 %sub148, i32* %arrayidx58, align 4, !dbg !138, !tbaa !118
  %53 = load i32, i32* %arrayidx56, align 4, !dbg !136, !tbaa !118
  call void @llvm.dbg.value(metadata i32 %53, metadata !60, metadata !DIExpression()), !dbg !136
  store i32 %sub148, i32* %arrayidx56, align 4, !dbg !136, !tbaa !118
  %mul157 = sub nsw i32 0, %53, !dbg !136
  store i32 %mul157, i32* %arrayidx58, align 4, !dbg !136, !tbaa !118
  %54 = load i32, i32* %data_x, align 4, !dbg !139, !tbaa !118
  call void @llvm.dbg.value(metadata i32 %54, metadata !67, metadata !DIExpression()), !dbg !139
  %55 = load i32, i32* %data_y, align 4, !dbg !139, !tbaa !118
  call void @llvm.dbg.value(metadata i32 %55, metadata !69, metadata !DIExpression()), !dbg !139
  %56 = load i32, i32* %arrayidx24, align 4, !dbg !139, !tbaa !118
  %add167 = add nsw i32 %56, %54, !dbg !139
  store i32 %add167, i32* %data_x, align 4, !dbg !139, !tbaa !118
  %57 = load i32, i32* %arrayidx26, align 4, !dbg !139, !tbaa !118
  %add170 = add nsw i32 %57, %55, !dbg !139
  store i32 %add170, i32* %data_y, align 4, !dbg !139, !tbaa !118
  %58 = load i32, i32* %arrayidx24, align 4, !dbg !139, !tbaa !118
  %sub173 = sub nsw i32 %54, %58, !dbg !139
  store i32 %sub173, i32* %arrayidx24, align 4, !dbg !139, !tbaa !118
  %59 = load i32, i32* %arrayidx26, align 4, !dbg !139, !tbaa !118
  %sub176 = sub nsw i32 %55, %59, !dbg !139
  store i32 %sub176, i32* %arrayidx26, align 4, !dbg !139, !tbaa !118
  %60 = load i32, i32* %arrayidx40, align 4, !dbg !140, !tbaa !118
  call void @llvm.dbg.value(metadata i32 %60, metadata !70, metadata !DIExpression()), !dbg !140
  %61 = load i32, i32* %arrayidx42, align 4, !dbg !140, !tbaa !118
  call void @llvm.dbg.value(metadata i32 %61, metadata !72, metadata !DIExpression()), !dbg !140
  %62 = load i32, i32* %arrayidx56, align 4, !dbg !140, !tbaa !118
  %add183 = add nsw i32 %62, %60, !dbg !140
  store i32 %add183, i32* %arrayidx40, align 4, !dbg !140, !tbaa !118
  %63 = load i32, i32* %arrayidx58, align 4, !dbg !140, !tbaa !118
  %add186 = add nsw i32 %63, %61, !dbg !140
  store i32 %add186, i32* %arrayidx42, align 4, !dbg !140, !tbaa !118
  %64 = load i32, i32* %arrayidx56, align 4, !dbg !140, !tbaa !118
  %sub189 = sub nsw i32 %60, %64, !dbg !140
  store i32 %sub189, i32* %arrayidx56, align 4, !dbg !140, !tbaa !118
  %65 = load i32, i32* %arrayidx58, align 4, !dbg !140, !tbaa !118
  %sub192 = sub nsw i32 %61, %65, !dbg !140
  store i32 %sub192, i32* %arrayidx58, align 4, !dbg !140, !tbaa !118
  call void @llvm.dbg.value(metadata i32 0, metadata !73, metadata !DIExpression()), !dbg !141
  call void @llvm.dbg.value(metadata i32 -1, metadata !75, metadata !DIExpression()), !dbg !141
  %66 = load i32, i32* %arrayidx12, align 4, !dbg !142, !tbaa !118
  call void @llvm.dbg.value(metadata i32 %66, metadata !77, metadata !DIExpression()), !dbg !142
  %67 = load i32, i32* %arrayidx15, align 4, !dbg !142, !tbaa !118
  call void @llvm.dbg.value(metadata i32 %67, metadata !79, metadata !DIExpression()), !dbg !142
  %68 = load i32, i32* %arrayidx43, align 4, !dbg !142, !tbaa !118
  %add202 = add nsw i32 %68, %66, !dbg !142
  store i32 %add202, i32* %arrayidx12, align 4, !dbg !142, !tbaa !118
  %69 = load i32, i32* %arrayidx46, align 4, !dbg !142, !tbaa !118
  %add205 = add nsw i32 %69, %67, !dbg !142
  store i32 %add205, i32* %arrayidx15, align 4, !dbg !142, !tbaa !118
  %70 = load i32, i32* %arrayidx43, align 4, !dbg !142, !tbaa !118
  %sub208 = sub nsw i32 %66, %70, !dbg !142
  store i32 %sub208, i32* %arrayidx43, align 4, !dbg !142, !tbaa !118
  %71 = load i32, i32* %arrayidx46, align 4, !dbg !142, !tbaa !118
  %sub211 = sub nsw i32 %67, %71, !dbg !142
  store i32 %sub211, i32* %arrayidx46, align 4, !dbg !142, !tbaa !118
  %72 = load i32, i32* %arrayidx27, align 4, !dbg !143, !tbaa !118
  call void @llvm.dbg.value(metadata i32 %72, metadata !80, metadata !DIExpression()), !dbg !143
  %73 = load i32, i32* %arrayidx30, align 4, !dbg !143, !tbaa !118
  call void @llvm.dbg.value(metadata i32 %73, metadata !82, metadata !DIExpression()), !dbg !143
  %74 = load i32, i32* %arrayidx59, align 4, !dbg !143, !tbaa !118
  %add218 = add nsw i32 %74, %72, !dbg !143
  store i32 %add218, i32* %arrayidx27, align 4, !dbg !143, !tbaa !118
  %75 = load i32, i32* %arrayidx62, align 4, !dbg !143, !tbaa !118
  %add221 = add nsw i32 %75, %73, !dbg !143
  store i32 %add221, i32* %arrayidx30, align 4, !dbg !143, !tbaa !118
  %76 = load i32, i32* %arrayidx59, align 4, !dbg !143, !tbaa !118
  %sub224 = sub nsw i32 %72, %76, !dbg !143
  store i32 %sub224, i32* %arrayidx59, align 4, !dbg !143, !tbaa !118
  %77 = load i32, i32* %arrayidx62, align 4, !dbg !143, !tbaa !118
  %sub227 = sub nsw i32 %73, %77, !dbg !143
  store i32 %sub227, i32* %arrayidx62, align 4, !dbg !143, !tbaa !118
  %78 = load i32, i32* %arrayidx59, align 4, !dbg !141, !tbaa !118
  call void @llvm.dbg.value(metadata i32 %78, metadata !76, metadata !DIExpression()), !dbg !141
  store i32 %sub227, i32* %arrayidx59, align 4, !dbg !141, !tbaa !118
  %mul236 = sub nsw i32 0, %78, !dbg !141
  store i32 %mul236, i32* %arrayidx62, align 4, !dbg !141, !tbaa !118
  %79 = load i32, i32* %arrayidx12, align 4, !dbg !144, !tbaa !118
  call void @llvm.dbg.value(metadata i32 %79, metadata !83, metadata !DIExpression()), !dbg !144
  %80 = load i32, i32* %arrayidx15, align 4, !dbg !144, !tbaa !118
  call void @llvm.dbg.value(metadata i32 %80, metadata !85, metadata !DIExpression()), !dbg !144
  %81 = load i32, i32* %arrayidx27, align 4, !dbg !144, !tbaa !118
  %add246 = add nsw i32 %81, %79, !dbg !144
  store i32 %add246, i32* %arrayidx12, align 4, !dbg !144, !tbaa !118
  %82 = load i32, i32* %arrayidx30, align 4, !dbg !144, !tbaa !118
  %add249 = add nsw i32 %82, %80, !dbg !144
  store i32 %add249, i32* %arrayidx15, align 4, !dbg !144, !tbaa !118
  %83 = load i32, i32* %arrayidx27, align 4, !dbg !144, !tbaa !118
  %sub252 = sub nsw i32 %79, %83, !dbg !144
  store i32 %sub252, i32* %arrayidx27, align 4, !dbg !144, !tbaa !118
  %84 = load i32, i32* %arrayidx30, align 4, !dbg !144, !tbaa !118
  %sub255 = sub nsw i32 %80, %84, !dbg !144
  store i32 %sub255, i32* %arrayidx30, align 4, !dbg !144, !tbaa !118
  %85 = load i32, i32* %arrayidx43, align 4, !dbg !145, !tbaa !118
  call void @llvm.dbg.value(metadata i32 %85, metadata !86, metadata !DIExpression()), !dbg !145
  %86 = load i32, i32* %arrayidx46, align 4, !dbg !145, !tbaa !118
  call void @llvm.dbg.value(metadata i32 %86, metadata !88, metadata !DIExpression()), !dbg !145
  %87 = load i32, i32* %arrayidx59, align 4, !dbg !145, !tbaa !118
  %add262 = add nsw i32 %87, %85, !dbg !145
  store i32 %add262, i32* %arrayidx43, align 4, !dbg !145, !tbaa !118
  %88 = load i32, i32* %arrayidx62, align 4, !dbg !145, !tbaa !118
  %add265 = add nsw i32 %88, %86, !dbg !145
  store i32 %add265, i32* %arrayidx46, align 4, !dbg !145, !tbaa !118
  %89 = load i32, i32* %arrayidx59, align 4, !dbg !145, !tbaa !118
  %sub268 = sub nsw i32 %85, %89, !dbg !145
  store i32 %sub268, i32* %arrayidx59, align 4, !dbg !145, !tbaa !118
  %90 = load i32, i32* %arrayidx62, align 4, !dbg !145, !tbaa !118
  %sub271 = sub nsw i32 %86, %90, !dbg !145
  store i32 %sub271, i32* %arrayidx62, align 4, !dbg !145, !tbaa !118
  call void @llvm.dbg.value(metadata i32 1, metadata !31, metadata !DIExpression()), !dbg !146
  %91 = mul nuw nsw i64 %indvars.iv608, 7
  %92 = add nsw i64 %91, -1
  br label %93, !dbg !147

; <label>:93:                                     ; preds = %93, %7
  %indvars.iv600 = phi i64 [ 1, %7 ], [ %indvars.iv.next601, %93 ]
  call void @llvm.dbg.value(metadata i64 %indvars.iv600, metadata !31, metadata !DIExpression()), !dbg !146
  %94 = add nsw i64 %92, %indvars.iv600, !dbg !148
  %arrayidx280 = getelementptr inbounds float, float* %cos_512, i64 %94, !dbg !149
  %95 = load float, float* %arrayidx280, align 4, !dbg !149, !tbaa !150
  %conv281 = fptosi float %95 to i32, !dbg !149
  call void @llvm.dbg.value(metadata i32 %conv281, metadata !89, metadata !DIExpression()), !dbg !152
  %arrayidx286 = getelementptr inbounds float, float* %sin_512, i64 %94, !dbg !153
  %96 = load float, float* %arrayidx286, align 4, !dbg !153, !tbaa !150
  %conv287 = fptosi float %96 to i32, !dbg !153
  call void @llvm.dbg.value(metadata i32 %conv287, metadata !93, metadata !DIExpression()), !dbg !154
  %arrayidx289 = getelementptr inbounds i32, i32* %data_x, i64 %indvars.iv600, !dbg !155
  %97 = load i32, i32* %arrayidx289, align 4, !dbg !155, !tbaa !118
  call void @llvm.dbg.value(metadata i32 %97, metadata !94, metadata !DIExpression()), !dbg !156
  %mul292 = mul nsw i32 %97, %conv281, !dbg !157
  %arrayidx294 = getelementptr inbounds i32, i32* %data_y, i64 %indvars.iv600, !dbg !157
  %98 = load i32, i32* %arrayidx294, align 4, !dbg !157, !tbaa !118
  %mul295 = mul nsw i32 %98, %conv287, !dbg !157
  %sub296 = sub nsw i32 %mul292, %mul295, !dbg !157
  store i32 %sub296, i32* %arrayidx289, align 4, !dbg !158, !tbaa !118
  %mul299 = mul nsw i32 %97, %conv287, !dbg !159
  %99 = load i32, i32* %arrayidx294, align 4, !dbg !159, !tbaa !118
  %mul302 = mul nsw i32 %99, %conv281, !dbg !159
  %add303 = add nsw i32 %mul302, %mul299, !dbg !159
  store i32 %add303, i32* %arrayidx294, align 4, !dbg !160, !tbaa !118
  %indvars.iv.next601 = add nuw nsw i64 %indvars.iv600, 1, !dbg !161
  %exitcond603 = icmp eq i64 %indvars.iv.next601, 8, !dbg !162
  br i1 %exitcond603, label %100, label %93, !dbg !147, !llvm.loop !163

; <label>:100:                                    ; preds = %93
  call void @llvm.dbg.value(metadata i32 0, metadata !30, metadata !DIExpression()), !dbg !110
  %101 = shl i64 %indvars.iv608, 3
  br label %102, !dbg !165

; <label>:102:                                    ; preds = %102, %100
  %indvars.iv604 = phi i64 [ 0, %100 ], [ %indvars.iv.next605, %102 ]
  call void @llvm.dbg.value(metadata i64 %indvars.iv604, metadata !30, metadata !DIExpression()), !dbg !110
  %arrayidx310 = getelementptr inbounds i32, i32* %data_x, i64 %indvars.iv604, !dbg !167
  %103 = load i32, i32* %arrayidx310, align 4, !dbg !167, !tbaa !118
  %104 = add nuw nsw i64 %indvars.iv604, %101, !dbg !170
  %arrayidx314 = getelementptr inbounds i32, i32* %DATA_x, i64 %104, !dbg !171
  store i32 %103, i32* %arrayidx314, align 4, !dbg !172, !tbaa !118
  %arrayidx316 = getelementptr inbounds i32, i32* %data_y, i64 %indvars.iv604, !dbg !173
  %105 = load i32, i32* %arrayidx316, align 4, !dbg !173, !tbaa !118
  %arrayidx320 = getelementptr inbounds i32, i32* %DATA_y, i64 %104, !dbg !174
  store i32 %105, i32* %arrayidx320, align 4, !dbg !175, !tbaa !118
  %indvars.iv.next605 = add nuw nsw i64 %indvars.iv604, 1, !dbg !176
  %exitcond607 = icmp eq i64 %indvars.iv.next605, 8, !dbg !177
  br i1 %exitcond607, label %106, label %102, !dbg !165, !llvm.loop !178

; <label>:106:                                    ; preds = %102
  %indvars.iv.next609 = add nuw nsw i64 %indvars.iv608, 1, !dbg !180
  %exitcond613 = icmp eq i64 %indvars.iv.next609, 64, !dbg !181
  br i1 %exitcond613, label %107, label %1, !dbg !109, !llvm.loop !182

; <label>:107:                                    ; preds = %106
  ret void, !dbg !184
}

; Function Attrs: nounwind readnone speculatable
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64, i8* nocapture) #2

; Function Attrs: noinline nounwind uwtable
define void @step2(i32* nocapture readnone %work_x, i32* nocapture readnone %work_y, i32* nocapture readonly %DATA_x, i32* nocapture readnone %DATA_y, i32* nocapture %data_x, i32* nocapture readnone %data_y, i32* nocapture %smem, i32* nocapture readonly %reversed, float* nocapture readnone %sin_64, float* nocapture readnone %cos_64, float* nocapture readnone %sin_512, float* nocapture readnone %cos_512) local_unnamed_addr #0 !dbg !185 {
  call void @llvm.dbg.value(metadata i32* %work_x, metadata !187, metadata !DIExpression()), !dbg !205
  call void @llvm.dbg.value(metadata i32* %work_y, metadata !188, metadata !DIExpression()), !dbg !206
  call void @llvm.dbg.value(metadata i32* %DATA_x, metadata !189, metadata !DIExpression()), !dbg !207
  call void @llvm.dbg.value(metadata i32* %DATA_y, metadata !190, metadata !DIExpression()), !dbg !208
  call void @llvm.dbg.value(metadata i32* %data_x, metadata !191, metadata !DIExpression()), !dbg !209
  call void @llvm.dbg.value(metadata i32* %data_y, metadata !192, metadata !DIExpression()), !dbg !210
  call void @llvm.dbg.value(metadata i32* %smem, metadata !193, metadata !DIExpression()), !dbg !211
  call void @llvm.dbg.value(metadata i32* %reversed, metadata !194, metadata !DIExpression()), !dbg !212
  call void @llvm.dbg.value(metadata float* %sin_64, metadata !195, metadata !DIExpression()), !dbg !213
  call void @llvm.dbg.value(metadata float* %cos_64, metadata !196, metadata !DIExpression()), !dbg !214
  call void @llvm.dbg.value(metadata float* %sin_512, metadata !197, metadata !DIExpression()), !dbg !215
  call void @llvm.dbg.value(metadata float* %cos_512, metadata !198, metadata !DIExpression()), !dbg !216
  call void @llvm.dbg.value(metadata i32 64, metadata !204, metadata !DIExpression()), !dbg !217
  call void @llvm.dbg.value(metadata i32 0, metadata !199, metadata !DIExpression()), !dbg !218
  %arrayidx12 = getelementptr inbounds i32, i32* %reversed, i64 1
  %arrayidx20 = getelementptr inbounds i32, i32* %reversed, i64 2
  %arrayidx28 = getelementptr inbounds i32, i32* %reversed, i64 3
  %arrayidx36 = getelementptr inbounds i32, i32* %reversed, i64 4
  %arrayidx44 = getelementptr inbounds i32, i32* %reversed, i64 5
  %arrayidx52 = getelementptr inbounds i32, i32* %reversed, i64 6
  %arrayidx60 = getelementptr inbounds i32, i32* %reversed, i64 7
  br label %1, !dbg !219

; <label>:1:                                      ; preds = %6, %0
  %indvars.iv121 = phi i64 [ 0, %0 ], [ %indvars.iv.next122, %6 ]
  call void @llvm.dbg.value(metadata i32 0, metadata !202, metadata !DIExpression()), !dbg !221
  call void @llvm.dbg.value(metadata i64 %indvars.iv121, metadata !199, metadata !DIExpression()), !dbg !218
  %2 = shl i64 %indvars.iv121, 3
  br label %3, !dbg !222

; <label>:3:                                      ; preds = %3, %1
  %indvars.iv = phi i64 [ 0, %1 ], [ %indvars.iv.next, %3 ]
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !202, metadata !DIExpression()), !dbg !221
  %4 = add nuw nsw i64 %indvars.iv, %2, !dbg !226
  %arrayidx = getelementptr inbounds i32, i32* %DATA_x, i64 %4, !dbg !229
  %5 = load i32, i32* %arrayidx, align 4, !dbg !229, !tbaa !118
  %arrayidx3 = getelementptr inbounds i32, i32* %data_x, i64 %indvars.iv, !dbg !230
  store i32 %5, i32* %arrayidx3, align 4, !dbg !231, !tbaa !118
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !232
  %exitcond = icmp eq i64 %indvars.iv.next, 8, !dbg !233
  br i1 %exitcond, label %6, label %3, !dbg !222, !llvm.loop !234

; <label>:6:                                      ; preds = %3
  %7 = and i64 %indvars.iv121, 2147483640, !dbg !236
  %and = and i64 %indvars.iv121, 7, !dbg !238
  %8 = load i32, i32* %reversed, align 4, !dbg !236, !tbaa !118
  %idxprom5 = sext i32 %8 to i64, !dbg !236
  %arrayidx6 = getelementptr inbounds i32, i32* %data_x, i64 %idxprom5, !dbg !236
  %9 = load i32, i32* %arrayidx6, align 4, !dbg !236, !tbaa !118
  %arrayidx11 = getelementptr inbounds i32, i32* %smem, i64 %indvars.iv121, !dbg !236
  store i32 %9, i32* %arrayidx11, align 4, !dbg !236, !tbaa !118
  %10 = load i32, i32* %arrayidx12, align 4, !dbg !236, !tbaa !118
  %idxprom13 = sext i32 %10 to i64, !dbg !236
  %arrayidx14 = getelementptr inbounds i32, i32* %data_x, i64 %idxprom13, !dbg !236
  %11 = load i32, i32* %arrayidx14, align 4, !dbg !236, !tbaa !118
  %12 = add nuw nsw i64 %indvars.iv121, 66, !dbg !236
  %arrayidx19 = getelementptr inbounds i32, i32* %smem, i64 %12, !dbg !236
  store i32 %11, i32* %arrayidx19, align 4, !dbg !236, !tbaa !118
  %13 = load i32, i32* %arrayidx20, align 4, !dbg !236, !tbaa !118
  %idxprom21 = sext i32 %13 to i64, !dbg !236
  %arrayidx22 = getelementptr inbounds i32, i32* %data_x, i64 %idxprom21, !dbg !236
  %14 = load i32, i32* %arrayidx22, align 4, !dbg !236, !tbaa !118
  %15 = add nuw nsw i64 %indvars.iv121, 132, !dbg !236
  %arrayidx27 = getelementptr inbounds i32, i32* %smem, i64 %15, !dbg !236
  store i32 %14, i32* %arrayidx27, align 4, !dbg !236, !tbaa !118
  %16 = load i32, i32* %arrayidx28, align 4, !dbg !236, !tbaa !118
  %idxprom29 = sext i32 %16 to i64, !dbg !236
  %arrayidx30 = getelementptr inbounds i32, i32* %data_x, i64 %idxprom29, !dbg !236
  %17 = load i32, i32* %arrayidx30, align 4, !dbg !236, !tbaa !118
  %18 = add nuw nsw i64 %indvars.iv121, 198, !dbg !236
  %arrayidx35 = getelementptr inbounds i32, i32* %smem, i64 %18, !dbg !236
  store i32 %17, i32* %arrayidx35, align 4, !dbg !236, !tbaa !118
  %19 = load i32, i32* %arrayidx36, align 4, !dbg !236, !tbaa !118
  %idxprom37 = sext i32 %19 to i64, !dbg !236
  %arrayidx38 = getelementptr inbounds i32, i32* %data_x, i64 %idxprom37, !dbg !236
  %20 = load i32, i32* %arrayidx38, align 4, !dbg !236, !tbaa !118
  %add40 = add nuw nsw i64 %7, 264, !dbg !236
  %add41 = or i64 %add40, %and, !dbg !236
  %arrayidx43 = getelementptr inbounds i32, i32* %smem, i64 %add41, !dbg !236
  store i32 %20, i32* %arrayidx43, align 4, !dbg !236, !tbaa !118
  %21 = load i32, i32* %arrayidx44, align 4, !dbg !236, !tbaa !118
  %idxprom45 = sext i32 %21 to i64, !dbg !236
  %arrayidx46 = getelementptr inbounds i32, i32* %data_x, i64 %idxprom45, !dbg !236
  %22 = load i32, i32* %arrayidx46, align 4, !dbg !236, !tbaa !118
  %23 = add nuw nsw i64 %indvars.iv121, 330, !dbg !236
  %arrayidx51 = getelementptr inbounds i32, i32* %smem, i64 %23, !dbg !236
  store i32 %22, i32* %arrayidx51, align 4, !dbg !236, !tbaa !118
  %24 = load i32, i32* %arrayidx52, align 4, !dbg !236, !tbaa !118
  %idxprom53 = sext i32 %24 to i64, !dbg !236
  %arrayidx54 = getelementptr inbounds i32, i32* %data_x, i64 %idxprom53, !dbg !236
  %25 = load i32, i32* %arrayidx54, align 4, !dbg !236, !tbaa !118
  %26 = add nuw nsw i64 %indvars.iv121, 396, !dbg !236
  %arrayidx59 = getelementptr inbounds i32, i32* %smem, i64 %26, !dbg !236
  store i32 %25, i32* %arrayidx59, align 4, !dbg !236, !tbaa !118
  %27 = load i32, i32* %arrayidx60, align 4, !dbg !236, !tbaa !118
  %idxprom61 = sext i32 %27 to i64, !dbg !236
  %arrayidx62 = getelementptr inbounds i32, i32* %data_x, i64 %idxprom61, !dbg !236
  %28 = load i32, i32* %arrayidx62, align 4, !dbg !236, !tbaa !118
  %29 = add nuw nsw i64 %indvars.iv121, 462, !dbg !236
  %arrayidx67 = getelementptr inbounds i32, i32* %smem, i64 %29, !dbg !236
  store i32 %28, i32* %arrayidx67, align 4, !dbg !236, !tbaa !118
  %indvars.iv.next122 = add nuw nsw i64 %indvars.iv121, 1, !dbg !239
  %exitcond130 = icmp eq i64 %indvars.iv.next122, 64, !dbg !240
  br i1 %exitcond130, label %30, label %1, !dbg !219, !llvm.loop !241

; <label>:30:                                     ; preds = %6
  ret void, !dbg !243
}

; Function Attrs: noinline nounwind uwtable
define void @step3(i32* nocapture readnone %work_x, i32* nocapture readnone %work_y, i32* nocapture %DATA_x, i32* nocapture readnone %DATA_y, i32* nocapture %data_x, i32* nocapture readnone %data_y, i32* nocapture readonly %smem, i32* nocapture readnone %reversed, float* nocapture readnone %sin_64, float* nocapture readnone %cos_64, float* nocapture readnone %sin_512, float* nocapture readnone %cos_512) local_unnamed_addr #0 !dbg !244 {
  call void @llvm.dbg.value(metadata i32* %work_x, metadata !246, metadata !DIExpression()), !dbg !264
  call void @llvm.dbg.value(metadata i32* %work_y, metadata !247, metadata !DIExpression()), !dbg !265
  call void @llvm.dbg.value(metadata i32* %DATA_x, metadata !248, metadata !DIExpression()), !dbg !266
  call void @llvm.dbg.value(metadata i32* %DATA_y, metadata !249, metadata !DIExpression()), !dbg !267
  call void @llvm.dbg.value(metadata i32* %data_x, metadata !250, metadata !DIExpression()), !dbg !268
  call void @llvm.dbg.value(metadata i32* %data_y, metadata !251, metadata !DIExpression()), !dbg !269
  call void @llvm.dbg.value(metadata i32* %smem, metadata !252, metadata !DIExpression()), !dbg !270
  call void @llvm.dbg.value(metadata i32* %reversed, metadata !253, metadata !DIExpression()), !dbg !271
  call void @llvm.dbg.value(metadata float* %sin_64, metadata !254, metadata !DIExpression()), !dbg !272
  call void @llvm.dbg.value(metadata float* %cos_64, metadata !255, metadata !DIExpression()), !dbg !273
  call void @llvm.dbg.value(metadata float* %sin_512, metadata !256, metadata !DIExpression()), !dbg !274
  call void @llvm.dbg.value(metadata float* %cos_512, metadata !257, metadata !DIExpression()), !dbg !275
  call void @llvm.dbg.value(metadata i32 64, metadata !263, metadata !DIExpression()), !dbg !276
  call void @llvm.dbg.value(metadata i32 0, metadata !258, metadata !DIExpression()), !dbg !277
  %arrayidx15 = getelementptr inbounds i32, i32* %data_x, i64 1
  %arrayidx21 = getelementptr inbounds i32, i32* %data_x, i64 2
  %arrayidx27 = getelementptr inbounds i32, i32* %data_x, i64 3
  %arrayidx33 = getelementptr inbounds i32, i32* %data_x, i64 4
  %arrayidx39 = getelementptr inbounds i32, i32* %data_x, i64 5
  %arrayidx45 = getelementptr inbounds i32, i32* %data_x, i64 6
  %arrayidx51 = getelementptr inbounds i32, i32* %data_x, i64 7
  br label %1, !dbg !278

; <label>:1:                                      ; preds = %30, %0
  %indvars.iv118 = phi i64 [ 0, %0 ], [ %indvars.iv.next119, %30 ]
  call void @llvm.dbg.value(metadata i32 0, metadata !261, metadata !DIExpression()), !dbg !280
  call void @llvm.dbg.value(metadata i64 %indvars.iv118, metadata !258, metadata !DIExpression()), !dbg !277
  %2 = shl i64 %indvars.iv118, 3
  br label %3, !dbg !281

; <label>:3:                                      ; preds = %3, %1
  %indvars.iv = phi i64 [ 0, %1 ], [ %indvars.iv.next, %3 ]
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !261, metadata !DIExpression()), !dbg !280
  %4 = add nuw nsw i64 %indvars.iv, %2, !dbg !285
  %arrayidx = getelementptr inbounds i32, i32* %DATA_x, i64 %4, !dbg !288
  %5 = load i32, i32* %arrayidx, align 4, !dbg !288, !tbaa !118
  %arrayidx3 = getelementptr inbounds i32, i32* %data_x, i64 %indvars.iv, !dbg !289
  store i32 %5, i32* %arrayidx3, align 4, !dbg !290, !tbaa !118
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !291
  %exitcond = icmp eq i64 %indvars.iv.next, 8, !dbg !292
  br i1 %exitcond, label %6, label %3, !dbg !281, !llvm.loop !293

; <label>:6:                                      ; preds = %3
  %7 = trunc i64 %indvars.iv118 to i32, !dbg !295
  %8 = lshr i32 %7, 3, !dbg !295
  call void @llvm.dbg.value(metadata i32 %8, metadata !259, metadata !DIExpression()), !dbg !296
  %9 = trunc i64 %indvars.iv118 to i32, !dbg !297
  %and = and i32 %9, 7, !dbg !297
  call void @llvm.dbg.value(metadata i32 %and, metadata !260, metadata !DIExpression()), !dbg !298
  %mul4 = mul nuw nsw i32 %and, 66, !dbg !299
  %add6 = add nuw nsw i32 %mul4, %8, !dbg !299
  %10 = zext i32 %add6 to i64, !dbg !299
  %arrayidx8 = getelementptr inbounds i32, i32* %smem, i64 %10, !dbg !299
  %11 = load i32, i32* %arrayidx8, align 4, !dbg !299, !tbaa !118
  store i32 %11, i32* %data_x, align 4, !dbg !299, !tbaa !118
  %add11 = add nuw nsw i32 %mul4, %8, !dbg !299
  %add12 = add nuw nsw i32 %add11, 8, !dbg !299
  %12 = zext i32 %add12 to i64, !dbg !299
  %arrayidx14 = getelementptr inbounds i32, i32* %smem, i64 %12, !dbg !299
  %13 = load i32, i32* %arrayidx14, align 4, !dbg !299, !tbaa !118
  store i32 %13, i32* %arrayidx15, align 4, !dbg !299, !tbaa !118
  %add17 = add nuw nsw i32 %mul4, %8, !dbg !299
  %add18 = add nuw nsw i32 %add17, 16, !dbg !299
  %14 = zext i32 %add18 to i64, !dbg !299
  %arrayidx20 = getelementptr inbounds i32, i32* %smem, i64 %14, !dbg !299
  %15 = load i32, i32* %arrayidx20, align 4, !dbg !299, !tbaa !118
  store i32 %15, i32* %arrayidx21, align 4, !dbg !299, !tbaa !118
  %add23 = add nuw nsw i32 %mul4, %8, !dbg !299
  %add24 = add nuw nsw i32 %add23, 24, !dbg !299
  %16 = zext i32 %add24 to i64, !dbg !299
  %arrayidx26 = getelementptr inbounds i32, i32* %smem, i64 %16, !dbg !299
  %17 = load i32, i32* %arrayidx26, align 4, !dbg !299, !tbaa !118
  store i32 %17, i32* %arrayidx27, align 4, !dbg !299, !tbaa !118
  %add29 = add nuw nsw i32 %mul4, %8, !dbg !299
  %add30 = add nuw nsw i32 %add29, 32, !dbg !299
  %18 = zext i32 %add30 to i64, !dbg !299
  %arrayidx32 = getelementptr inbounds i32, i32* %smem, i64 %18, !dbg !299
  %19 = load i32, i32* %arrayidx32, align 4, !dbg !299, !tbaa !118
  store i32 %19, i32* %arrayidx33, align 4, !dbg !299, !tbaa !118
  %add35 = add nuw nsw i32 %mul4, %8, !dbg !299
  %add36 = add nuw nsw i32 %add35, 40, !dbg !299
  %20 = zext i32 %add36 to i64, !dbg !299
  %arrayidx38 = getelementptr inbounds i32, i32* %smem, i64 %20, !dbg !299
  %21 = load i32, i32* %arrayidx38, align 4, !dbg !299, !tbaa !118
  store i32 %21, i32* %arrayidx39, align 4, !dbg !299, !tbaa !118
  %add41 = add nuw nsw i32 %mul4, %8, !dbg !299
  %add42 = add nuw nsw i32 %add41, 48, !dbg !299
  %22 = zext i32 %add42 to i64, !dbg !299
  %arrayidx44 = getelementptr inbounds i32, i32* %smem, i64 %22, !dbg !299
  %23 = load i32, i32* %arrayidx44, align 4, !dbg !299, !tbaa !118
  store i32 %23, i32* %arrayidx45, align 4, !dbg !299, !tbaa !118
  %add47 = add nuw nsw i32 %mul4, %8, !dbg !299
  %add48 = add nuw nsw i32 %add47, 56, !dbg !299
  %24 = zext i32 %add48 to i64, !dbg !299
  %arrayidx50 = getelementptr inbounds i32, i32* %smem, i64 %24, !dbg !299
  %25 = load i32, i32* %arrayidx50, align 4, !dbg !299, !tbaa !118
  store i32 %25, i32* %arrayidx51, align 4, !dbg !299, !tbaa !118
  call void @llvm.dbg.value(metadata i32 0, metadata !261, metadata !DIExpression()), !dbg !280
  %26 = shl i64 %indvars.iv118, 3
  br label %27, !dbg !301

; <label>:27:                                     ; preds = %27, %6
  %indvars.iv114 = phi i64 [ 0, %6 ], [ %indvars.iv.next115, %27 ]
  call void @llvm.dbg.value(metadata i64 %indvars.iv114, metadata !261, metadata !DIExpression()), !dbg !280
  %arrayidx54 = getelementptr inbounds i32, i32* %data_x, i64 %indvars.iv114, !dbg !303
  %28 = load i32, i32* %arrayidx54, align 4, !dbg !303, !tbaa !118
  %29 = add nuw nsw i64 %indvars.iv114, %26, !dbg !306
  %arrayidx58 = getelementptr inbounds i32, i32* %DATA_x, i64 %29, !dbg !307
  store i32 %28, i32* %arrayidx58, align 4, !dbg !308, !tbaa !118
  %indvars.iv.next115 = add nuw nsw i64 %indvars.iv114, 1, !dbg !309
  %exitcond117 = icmp eq i64 %indvars.iv.next115, 8, !dbg !310
  br i1 %exitcond117, label %30, label %27, !dbg !301, !llvm.loop !311

; <label>:30:                                     ; preds = %27
  %indvars.iv.next119 = add nuw nsw i64 %indvars.iv118, 1, !dbg !313
  %exitcond122 = icmp eq i64 %indvars.iv.next119, 64, !dbg !314
  br i1 %exitcond122, label %31, label %1, !dbg !278, !llvm.loop !315

; <label>:31:                                     ; preds = %30
  ret void, !dbg !317
}

; Function Attrs: noinline nounwind uwtable
define void @step4(i32* nocapture readnone %work_x, i32* nocapture readnone %work_y, i32* nocapture readnone %DATA_x, i32* nocapture readonly %DATA_y, i32* nocapture readnone %data_x, i32* nocapture %data_y, i32* nocapture %smem, i32* nocapture readonly %reversed, float* nocapture readnone %sin_64, float* nocapture readnone %cos_64, float* nocapture readnone %sin_512, float* nocapture readnone %cos_512) local_unnamed_addr #0 !dbg !318 {
  call void @llvm.dbg.value(metadata i32* %work_x, metadata !320, metadata !DIExpression()), !dbg !338
  call void @llvm.dbg.value(metadata i32* %work_y, metadata !321, metadata !DIExpression()), !dbg !339
  call void @llvm.dbg.value(metadata i32* %DATA_x, metadata !322, metadata !DIExpression()), !dbg !340
  call void @llvm.dbg.value(metadata i32* %DATA_y, metadata !323, metadata !DIExpression()), !dbg !341
  call void @llvm.dbg.value(metadata i32* %data_x, metadata !324, metadata !DIExpression()), !dbg !342
  call void @llvm.dbg.value(metadata i32* %data_y, metadata !325, metadata !DIExpression()), !dbg !343
  call void @llvm.dbg.value(metadata i32* %smem, metadata !326, metadata !DIExpression()), !dbg !344
  call void @llvm.dbg.value(metadata i32* %reversed, metadata !327, metadata !DIExpression()), !dbg !345
  call void @llvm.dbg.value(metadata float* %sin_64, metadata !328, metadata !DIExpression()), !dbg !346
  call void @llvm.dbg.value(metadata float* %cos_64, metadata !329, metadata !DIExpression()), !dbg !347
  call void @llvm.dbg.value(metadata float* %sin_512, metadata !330, metadata !DIExpression()), !dbg !348
  call void @llvm.dbg.value(metadata float* %cos_512, metadata !331, metadata !DIExpression()), !dbg !349
  call void @llvm.dbg.value(metadata i32 64, metadata !337, metadata !DIExpression()), !dbg !350
  call void @llvm.dbg.value(metadata i32 0, metadata !332, metadata !DIExpression()), !dbg !351
  %arrayidx12 = getelementptr inbounds i32, i32* %reversed, i64 1
  %arrayidx20 = getelementptr inbounds i32, i32* %reversed, i64 2
  %arrayidx28 = getelementptr inbounds i32, i32* %reversed, i64 3
  %arrayidx36 = getelementptr inbounds i32, i32* %reversed, i64 4
  %arrayidx44 = getelementptr inbounds i32, i32* %reversed, i64 5
  %arrayidx52 = getelementptr inbounds i32, i32* %reversed, i64 6
  %arrayidx60 = getelementptr inbounds i32, i32* %reversed, i64 7
  br label %1, !dbg !352

; <label>:1:                                      ; preds = %6, %0
  %indvars.iv121 = phi i64 [ 0, %0 ], [ %indvars.iv.next122, %6 ]
  call void @llvm.dbg.value(metadata i32 0, metadata !335, metadata !DIExpression()), !dbg !354
  call void @llvm.dbg.value(metadata i64 %indvars.iv121, metadata !332, metadata !DIExpression()), !dbg !351
  %2 = shl i64 %indvars.iv121, 3
  br label %3, !dbg !355

; <label>:3:                                      ; preds = %3, %1
  %indvars.iv = phi i64 [ 0, %1 ], [ %indvars.iv.next, %3 ]
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !335, metadata !DIExpression()), !dbg !354
  %4 = add nuw nsw i64 %indvars.iv, %2, !dbg !359
  %arrayidx = getelementptr inbounds i32, i32* %DATA_y, i64 %4, !dbg !362
  %5 = load i32, i32* %arrayidx, align 4, !dbg !362, !tbaa !118
  %arrayidx3 = getelementptr inbounds i32, i32* %data_y, i64 %indvars.iv, !dbg !363
  store i32 %5, i32* %arrayidx3, align 4, !dbg !364, !tbaa !118
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !365
  %exitcond = icmp eq i64 %indvars.iv.next, 8, !dbg !366
  br i1 %exitcond, label %6, label %3, !dbg !355, !llvm.loop !367

; <label>:6:                                      ; preds = %3
  %7 = and i64 %indvars.iv121, 2147483640, !dbg !369
  %and = and i64 %indvars.iv121, 7, !dbg !371
  %8 = load i32, i32* %reversed, align 4, !dbg !369, !tbaa !118
  %idxprom5 = sext i32 %8 to i64, !dbg !369
  %arrayidx6 = getelementptr inbounds i32, i32* %data_y, i64 %idxprom5, !dbg !369
  %9 = load i32, i32* %arrayidx6, align 4, !dbg !369, !tbaa !118
  %arrayidx11 = getelementptr inbounds i32, i32* %smem, i64 %indvars.iv121, !dbg !369
  store i32 %9, i32* %arrayidx11, align 4, !dbg !369, !tbaa !118
  %10 = load i32, i32* %arrayidx12, align 4, !dbg !369, !tbaa !118
  %idxprom13 = sext i32 %10 to i64, !dbg !369
  %arrayidx14 = getelementptr inbounds i32, i32* %data_y, i64 %idxprom13, !dbg !369
  %11 = load i32, i32* %arrayidx14, align 4, !dbg !369, !tbaa !118
  %12 = add nuw nsw i64 %indvars.iv121, 66, !dbg !369
  %arrayidx19 = getelementptr inbounds i32, i32* %smem, i64 %12, !dbg !369
  store i32 %11, i32* %arrayidx19, align 4, !dbg !369, !tbaa !118
  %13 = load i32, i32* %arrayidx20, align 4, !dbg !369, !tbaa !118
  %idxprom21 = sext i32 %13 to i64, !dbg !369
  %arrayidx22 = getelementptr inbounds i32, i32* %data_y, i64 %idxprom21, !dbg !369
  %14 = load i32, i32* %arrayidx22, align 4, !dbg !369, !tbaa !118
  %15 = add nuw nsw i64 %indvars.iv121, 132, !dbg !369
  %arrayidx27 = getelementptr inbounds i32, i32* %smem, i64 %15, !dbg !369
  store i32 %14, i32* %arrayidx27, align 4, !dbg !369, !tbaa !118
  %16 = load i32, i32* %arrayidx28, align 4, !dbg !369, !tbaa !118
  %idxprom29 = sext i32 %16 to i64, !dbg !369
  %arrayidx30 = getelementptr inbounds i32, i32* %data_y, i64 %idxprom29, !dbg !369
  %17 = load i32, i32* %arrayidx30, align 4, !dbg !369, !tbaa !118
  %18 = add nuw nsw i64 %indvars.iv121, 198, !dbg !369
  %arrayidx35 = getelementptr inbounds i32, i32* %smem, i64 %18, !dbg !369
  store i32 %17, i32* %arrayidx35, align 4, !dbg !369, !tbaa !118
  %19 = load i32, i32* %arrayidx36, align 4, !dbg !369, !tbaa !118
  %idxprom37 = sext i32 %19 to i64, !dbg !369
  %arrayidx38 = getelementptr inbounds i32, i32* %data_y, i64 %idxprom37, !dbg !369
  %20 = load i32, i32* %arrayidx38, align 4, !dbg !369, !tbaa !118
  %add40 = add nuw nsw i64 %7, 264, !dbg !369
  %add41 = or i64 %add40, %and, !dbg !369
  %arrayidx43 = getelementptr inbounds i32, i32* %smem, i64 %add41, !dbg !369
  store i32 %20, i32* %arrayidx43, align 4, !dbg !369, !tbaa !118
  %21 = load i32, i32* %arrayidx44, align 4, !dbg !369, !tbaa !118
  %idxprom45 = sext i32 %21 to i64, !dbg !369
  %arrayidx46 = getelementptr inbounds i32, i32* %data_y, i64 %idxprom45, !dbg !369
  %22 = load i32, i32* %arrayidx46, align 4, !dbg !369, !tbaa !118
  %23 = add nuw nsw i64 %indvars.iv121, 330, !dbg !369
  %arrayidx51 = getelementptr inbounds i32, i32* %smem, i64 %23, !dbg !369
  store i32 %22, i32* %arrayidx51, align 4, !dbg !369, !tbaa !118
  %24 = load i32, i32* %arrayidx52, align 4, !dbg !369, !tbaa !118
  %idxprom53 = sext i32 %24 to i64, !dbg !369
  %arrayidx54 = getelementptr inbounds i32, i32* %data_y, i64 %idxprom53, !dbg !369
  %25 = load i32, i32* %arrayidx54, align 4, !dbg !369, !tbaa !118
  %26 = add nuw nsw i64 %indvars.iv121, 396, !dbg !369
  %arrayidx59 = getelementptr inbounds i32, i32* %smem, i64 %26, !dbg !369
  store i32 %25, i32* %arrayidx59, align 4, !dbg !369, !tbaa !118
  %27 = load i32, i32* %arrayidx60, align 4, !dbg !369, !tbaa !118
  %idxprom61 = sext i32 %27 to i64, !dbg !369
  %arrayidx62 = getelementptr inbounds i32, i32* %data_y, i64 %idxprom61, !dbg !369
  %28 = load i32, i32* %arrayidx62, align 4, !dbg !369, !tbaa !118
  %29 = add nuw nsw i64 %indvars.iv121, 462, !dbg !369
  %arrayidx67 = getelementptr inbounds i32, i32* %smem, i64 %29, !dbg !369
  store i32 %28, i32* %arrayidx67, align 4, !dbg !369, !tbaa !118
  %indvars.iv.next122 = add nuw nsw i64 %indvars.iv121, 1, !dbg !372
  %exitcond130 = icmp eq i64 %indvars.iv.next122, 64, !dbg !373
  br i1 %exitcond130, label %30, label %1, !dbg !352, !llvm.loop !374

; <label>:30:                                     ; preds = %6
  ret void, !dbg !376
}

; Function Attrs: noinline nounwind uwtable
define void @step5(i32* nocapture readnone %work_x, i32* nocapture readnone %work_y, i32* nocapture readnone %DATA_x, i32* nocapture %DATA_y, i32* nocapture readnone %data_x, i32* nocapture %data_y, i32* nocapture readonly %smem, i32* nocapture readnone %reversed, float* nocapture readnone %sin_64, float* nocapture readnone %cos_64, float* nocapture readnone %sin_512, float* nocapture readnone %cos_512) local_unnamed_addr #0 !dbg !377 {
  call void @llvm.dbg.value(metadata i32* %work_x, metadata !379, metadata !DIExpression()), !dbg !397
  call void @llvm.dbg.value(metadata i32* %work_y, metadata !380, metadata !DIExpression()), !dbg !398
  call void @llvm.dbg.value(metadata i32* %DATA_x, metadata !381, metadata !DIExpression()), !dbg !399
  call void @llvm.dbg.value(metadata i32* %DATA_y, metadata !382, metadata !DIExpression()), !dbg !400
  call void @llvm.dbg.value(metadata i32* %data_x, metadata !383, metadata !DIExpression()), !dbg !401
  call void @llvm.dbg.value(metadata i32* %data_y, metadata !384, metadata !DIExpression()), !dbg !402
  call void @llvm.dbg.value(metadata i32* %smem, metadata !385, metadata !DIExpression()), !dbg !403
  call void @llvm.dbg.value(metadata i32* %reversed, metadata !386, metadata !DIExpression()), !dbg !404
  call void @llvm.dbg.value(metadata float* %sin_64, metadata !387, metadata !DIExpression()), !dbg !405
  call void @llvm.dbg.value(metadata float* %cos_64, metadata !388, metadata !DIExpression()), !dbg !406
  call void @llvm.dbg.value(metadata float* %sin_512, metadata !389, metadata !DIExpression()), !dbg !407
  call void @llvm.dbg.value(metadata float* %cos_512, metadata !390, metadata !DIExpression()), !dbg !408
  call void @llvm.dbg.value(metadata i32 64, metadata !396, metadata !DIExpression()), !dbg !409
  call void @llvm.dbg.value(metadata i32 0, metadata !391, metadata !DIExpression()), !dbg !410
  %arrayidx15 = getelementptr inbounds i32, i32* %data_y, i64 1
  %arrayidx21 = getelementptr inbounds i32, i32* %data_y, i64 2
  %arrayidx27 = getelementptr inbounds i32, i32* %data_y, i64 3
  %arrayidx33 = getelementptr inbounds i32, i32* %data_y, i64 4
  %arrayidx39 = getelementptr inbounds i32, i32* %data_y, i64 5
  %arrayidx45 = getelementptr inbounds i32, i32* %data_y, i64 6
  %arrayidx51 = getelementptr inbounds i32, i32* %data_y, i64 7
  br label %1, !dbg !411

; <label>:1:                                      ; preds = %30, %0
  %indvars.iv118 = phi i64 [ 0, %0 ], [ %indvars.iv.next119, %30 ]
  call void @llvm.dbg.value(metadata i32 0, metadata !394, metadata !DIExpression()), !dbg !413
  call void @llvm.dbg.value(metadata i64 %indvars.iv118, metadata !391, metadata !DIExpression()), !dbg !410
  %2 = shl i64 %indvars.iv118, 3
  br label %3, !dbg !414

; <label>:3:                                      ; preds = %3, %1
  %indvars.iv = phi i64 [ 0, %1 ], [ %indvars.iv.next, %3 ]
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !394, metadata !DIExpression()), !dbg !413
  %4 = add nuw nsw i64 %indvars.iv, %2, !dbg !418
  %arrayidx = getelementptr inbounds i32, i32* %DATA_y, i64 %4, !dbg !421
  %5 = load i32, i32* %arrayidx, align 4, !dbg !421, !tbaa !118
  %arrayidx3 = getelementptr inbounds i32, i32* %data_y, i64 %indvars.iv, !dbg !422
  store i32 %5, i32* %arrayidx3, align 4, !dbg !423, !tbaa !118
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !424
  %exitcond = icmp eq i64 %indvars.iv.next, 8, !dbg !425
  br i1 %exitcond, label %6, label %3, !dbg !414, !llvm.loop !426

; <label>:6:                                      ; preds = %3
  %7 = trunc i64 %indvars.iv118 to i32, !dbg !428
  %8 = lshr i32 %7, 3, !dbg !428
  call void @llvm.dbg.value(metadata i32 %8, metadata !392, metadata !DIExpression()), !dbg !429
  %9 = trunc i64 %indvars.iv118 to i32, !dbg !430
  %and = and i32 %9, 7, !dbg !430
  call void @llvm.dbg.value(metadata i32 %and, metadata !393, metadata !DIExpression()), !dbg !431
  %mul4 = mul nuw nsw i32 %and, 66, !dbg !432
  %add6 = add nuw nsw i32 %mul4, %8, !dbg !432
  %10 = zext i32 %add6 to i64, !dbg !432
  %arrayidx8 = getelementptr inbounds i32, i32* %smem, i64 %10, !dbg !432
  %11 = load i32, i32* %arrayidx8, align 4, !dbg !432, !tbaa !118
  store i32 %11, i32* %data_y, align 4, !dbg !432, !tbaa !118
  %add11 = add nuw nsw i32 %mul4, %8, !dbg !432
  %add12 = add nuw nsw i32 %add11, 8, !dbg !432
  %12 = zext i32 %add12 to i64, !dbg !432
  %arrayidx14 = getelementptr inbounds i32, i32* %smem, i64 %12, !dbg !432
  %13 = load i32, i32* %arrayidx14, align 4, !dbg !432, !tbaa !118
  store i32 %13, i32* %arrayidx15, align 4, !dbg !432, !tbaa !118
  %add17 = add nuw nsw i32 %mul4, %8, !dbg !432
  %add18 = add nuw nsw i32 %add17, 16, !dbg !432
  %14 = zext i32 %add18 to i64, !dbg !432
  %arrayidx20 = getelementptr inbounds i32, i32* %smem, i64 %14, !dbg !432
  %15 = load i32, i32* %arrayidx20, align 4, !dbg !432, !tbaa !118
  store i32 %15, i32* %arrayidx21, align 4, !dbg !432, !tbaa !118
  %add23 = add nuw nsw i32 %mul4, %8, !dbg !432
  %add24 = add nuw nsw i32 %add23, 24, !dbg !432
  %16 = zext i32 %add24 to i64, !dbg !432
  %arrayidx26 = getelementptr inbounds i32, i32* %smem, i64 %16, !dbg !432
  %17 = load i32, i32* %arrayidx26, align 4, !dbg !432, !tbaa !118
  store i32 %17, i32* %arrayidx27, align 4, !dbg !432, !tbaa !118
  %add29 = add nuw nsw i32 %mul4, %8, !dbg !432
  %add30 = add nuw nsw i32 %add29, 32, !dbg !432
  %18 = zext i32 %add30 to i64, !dbg !432
  %arrayidx32 = getelementptr inbounds i32, i32* %smem, i64 %18, !dbg !432
  %19 = load i32, i32* %arrayidx32, align 4, !dbg !432, !tbaa !118
  store i32 %19, i32* %arrayidx33, align 4, !dbg !432, !tbaa !118
  %add35 = add nuw nsw i32 %mul4, %8, !dbg !432
  %add36 = add nuw nsw i32 %add35, 40, !dbg !432
  %20 = zext i32 %add36 to i64, !dbg !432
  %arrayidx38 = getelementptr inbounds i32, i32* %smem, i64 %20, !dbg !432
  %21 = load i32, i32* %arrayidx38, align 4, !dbg !432, !tbaa !118
  store i32 %21, i32* %arrayidx39, align 4, !dbg !432, !tbaa !118
  %add41 = add nuw nsw i32 %mul4, %8, !dbg !432
  %add42 = add nuw nsw i32 %add41, 48, !dbg !432
  %22 = zext i32 %add42 to i64, !dbg !432
  %arrayidx44 = getelementptr inbounds i32, i32* %smem, i64 %22, !dbg !432
  %23 = load i32, i32* %arrayidx44, align 4, !dbg !432, !tbaa !118
  store i32 %23, i32* %arrayidx45, align 4, !dbg !432, !tbaa !118
  %add47 = add nuw nsw i32 %mul4, %8, !dbg !432
  %add48 = add nuw nsw i32 %add47, 56, !dbg !432
  %24 = zext i32 %add48 to i64, !dbg !432
  %arrayidx50 = getelementptr inbounds i32, i32* %smem, i64 %24, !dbg !432
  %25 = load i32, i32* %arrayidx50, align 4, !dbg !432, !tbaa !118
  store i32 %25, i32* %arrayidx51, align 4, !dbg !432, !tbaa !118
  call void @llvm.dbg.value(metadata i32 0, metadata !394, metadata !DIExpression()), !dbg !413
  %26 = shl i64 %indvars.iv118, 3
  br label %27, !dbg !434

; <label>:27:                                     ; preds = %27, %6
  %indvars.iv114 = phi i64 [ 0, %6 ], [ %indvars.iv.next115, %27 ]
  call void @llvm.dbg.value(metadata i64 %indvars.iv114, metadata !394, metadata !DIExpression()), !dbg !413
  %arrayidx54 = getelementptr inbounds i32, i32* %data_y, i64 %indvars.iv114, !dbg !436
  %28 = load i32, i32* %arrayidx54, align 4, !dbg !436, !tbaa !118
  %29 = add nuw nsw i64 %indvars.iv114, %26, !dbg !439
  %arrayidx58 = getelementptr inbounds i32, i32* %DATA_y, i64 %29, !dbg !440
  store i32 %28, i32* %arrayidx58, align 4, !dbg !441, !tbaa !118
  %indvars.iv.next115 = add nuw nsw i64 %indvars.iv114, 1, !dbg !442
  %exitcond117 = icmp eq i64 %indvars.iv.next115, 8, !dbg !443
  br i1 %exitcond117, label %30, label %27, !dbg !434, !llvm.loop !444

; <label>:30:                                     ; preds = %27
  %indvars.iv.next119 = add nuw nsw i64 %indvars.iv118, 1, !dbg !446
  %exitcond122 = icmp eq i64 %indvars.iv.next119, 64, !dbg !447
  br i1 %exitcond122, label %31, label %1, !dbg !411, !llvm.loop !448

; <label>:31:                                     ; preds = %30
  ret void, !dbg !450
}

; Function Attrs: noinline nounwind uwtable
define void @step6(i32* nocapture readnone %work_x, i32* nocapture readnone %work_y, i32* nocapture %DATA_x, i32* nocapture %DATA_y, i32* nocapture %data_x, i32* nocapture %data_y, i32* nocapture readnone %smem, i32* nocapture readnone %reversed, float* nocapture readonly %sin_64, float* nocapture readonly %cos_64, float* nocapture readnone %sin_512, float* nocapture readnone %cos_512) local_unnamed_addr #0 !dbg !451 {
  call void @llvm.dbg.value(metadata i32* %work_x, metadata !453, metadata !DIExpression()), !dbg !533
  call void @llvm.dbg.value(metadata i32* %work_y, metadata !454, metadata !DIExpression()), !dbg !534
  call void @llvm.dbg.value(metadata i32* %DATA_x, metadata !455, metadata !DIExpression()), !dbg !535
  call void @llvm.dbg.value(metadata i32* %DATA_y, metadata !456, metadata !DIExpression()), !dbg !536
  call void @llvm.dbg.value(metadata i32* %data_x, metadata !457, metadata !DIExpression()), !dbg !537
  call void @llvm.dbg.value(metadata i32* %data_y, metadata !458, metadata !DIExpression()), !dbg !538
  call void @llvm.dbg.value(metadata i32* %smem, metadata !459, metadata !DIExpression()), !dbg !539
  call void @llvm.dbg.value(metadata i32* %reversed, metadata !460, metadata !DIExpression()), !dbg !540
  call void @llvm.dbg.value(metadata float* %sin_64, metadata !461, metadata !DIExpression()), !dbg !541
  call void @llvm.dbg.value(metadata float* %cos_64, metadata !462, metadata !DIExpression()), !dbg !542
  call void @llvm.dbg.value(metadata float* %sin_512, metadata !463, metadata !DIExpression()), !dbg !543
  call void @llvm.dbg.value(metadata float* %cos_512, metadata !464, metadata !DIExpression()), !dbg !544
  call void @llvm.dbg.value(metadata i32 64, metadata !470, metadata !DIExpression()), !dbg !545
  call void @llvm.dbg.value(metadata i32 0, metadata !465, metadata !DIExpression()), !dbg !546
  %arrayidx12 = getelementptr inbounds i32, i32* %data_x, i64 4
  %arrayidx15 = getelementptr inbounds i32, i32* %data_y, i64 4
  %arrayidx24 = getelementptr inbounds i32, i32* %data_x, i64 1
  %arrayidx26 = getelementptr inbounds i32, i32* %data_y, i64 1
  %arrayidx27 = getelementptr inbounds i32, i32* %data_x, i64 5
  %arrayidx30 = getelementptr inbounds i32, i32* %data_y, i64 5
  %arrayidx40 = getelementptr inbounds i32, i32* %data_x, i64 2
  %arrayidx42 = getelementptr inbounds i32, i32* %data_y, i64 2
  %arrayidx43 = getelementptr inbounds i32, i32* %data_x, i64 6
  %arrayidx46 = getelementptr inbounds i32, i32* %data_y, i64 6
  %arrayidx56 = getelementptr inbounds i32, i32* %data_x, i64 3
  %arrayidx58 = getelementptr inbounds i32, i32* %data_y, i64 3
  %arrayidx59 = getelementptr inbounds i32, i32* %data_x, i64 7
  %arrayidx62 = getelementptr inbounds i32, i32* %data_y, i64 7
  br label %1, !dbg !547

; <label>:1:                                      ; preds = %107, %0
  %indvars.iv608 = phi i64 [ 0, %0 ], [ %indvars.iv.next609, %107 ]
  call void @llvm.dbg.value(metadata i32 0, metadata !468, metadata !DIExpression()), !dbg !548
  call void @llvm.dbg.value(metadata i64 %indvars.iv608, metadata !465, metadata !DIExpression()), !dbg !546
  %2 = shl i64 %indvars.iv608, 3
  br label %3, !dbg !549

; <label>:3:                                      ; preds = %3, %1
  %indvars.iv = phi i64 [ 0, %1 ], [ %indvars.iv.next, %3 ]
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !468, metadata !DIExpression()), !dbg !548
  %4 = add nuw nsw i64 %indvars.iv, %2, !dbg !551
  %arrayidx = getelementptr inbounds i32, i32* %DATA_x, i64 %4, !dbg !554
  %5 = load i32, i32* %arrayidx, align 4, !dbg !554, !tbaa !118
  %arrayidx3 = getelementptr inbounds i32, i32* %data_x, i64 %indvars.iv, !dbg !555
  store i32 %5, i32* %arrayidx3, align 4, !dbg !556, !tbaa !118
  %arrayidx7 = getelementptr inbounds i32, i32* %DATA_y, i64 %4, !dbg !557
  %6 = load i32, i32* %arrayidx7, align 4, !dbg !557, !tbaa !118
  %arrayidx9 = getelementptr inbounds i32, i32* %data_y, i64 %indvars.iv, !dbg !558
  store i32 %6, i32* %arrayidx9, align 4, !dbg !559, !tbaa !118
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !560
  %exitcond = icmp eq i64 %indvars.iv.next, 8, !dbg !561
  br i1 %exitcond, label %7, label %3, !dbg !549, !llvm.loop !562

; <label>:7:                                      ; preds = %3
  call void @llvm.dbg.value(metadata i32 1, metadata !471, metadata !DIExpression()), !dbg !564
  call void @llvm.dbg.value(metadata i32 -1, metadata !478, metadata !DIExpression()), !dbg !564
  call void @llvm.dbg.value(metadata i32 0, metadata !476, metadata !DIExpression()), !dbg !564
  call void @llvm.dbg.value(metadata i32 -1, metadata !479, metadata !DIExpression()), !dbg !564
  call void @llvm.dbg.value(metadata i32 -1, metadata !477, metadata !DIExpression()), !dbg !564
  call void @llvm.dbg.value(metadata i32 -1, metadata !480, metadata !DIExpression()), !dbg !564
  %8 = load i32, i32* %data_x, align 4, !dbg !565, !tbaa !118
  call void @llvm.dbg.value(metadata i32 %8, metadata !483, metadata !DIExpression()), !dbg !565
  %9 = load i32, i32* %data_y, align 4, !dbg !565, !tbaa !118
  call void @llvm.dbg.value(metadata i32 %9, metadata !485, metadata !DIExpression()), !dbg !565
  %10 = load i32, i32* %arrayidx12, align 4, !dbg !565, !tbaa !118
  %add13 = add nsw i32 %10, %8, !dbg !565
  store i32 %add13, i32* %data_x, align 4, !dbg !565, !tbaa !118
  %11 = load i32, i32* %arrayidx15, align 4, !dbg !565, !tbaa !118
  %add16 = add nsw i32 %11, %9, !dbg !565
  store i32 %add16, i32* %data_y, align 4, !dbg !565, !tbaa !118
  %12 = load i32, i32* %arrayidx12, align 4, !dbg !565, !tbaa !118
  %sub = sub nsw i32 %8, %12, !dbg !565
  store i32 %sub, i32* %arrayidx12, align 4, !dbg !565, !tbaa !118
  %13 = load i32, i32* %arrayidx15, align 4, !dbg !565, !tbaa !118
  %sub21 = sub nsw i32 %9, %13, !dbg !565
  store i32 %sub21, i32* %arrayidx15, align 4, !dbg !565, !tbaa !118
  %14 = load i32, i32* %arrayidx24, align 4, !dbg !566, !tbaa !118
  call void @llvm.dbg.value(metadata i32 %14, metadata !486, metadata !DIExpression()), !dbg !566
  %15 = load i32, i32* %arrayidx26, align 4, !dbg !566, !tbaa !118
  call void @llvm.dbg.value(metadata i32 %15, metadata !488, metadata !DIExpression()), !dbg !566
  %16 = load i32, i32* %arrayidx27, align 4, !dbg !566, !tbaa !118
  %add28 = add nsw i32 %16, %14, !dbg !566
  store i32 %add28, i32* %arrayidx24, align 4, !dbg !566, !tbaa !118
  %17 = load i32, i32* %arrayidx30, align 4, !dbg !566, !tbaa !118
  %add31 = add nsw i32 %17, %15, !dbg !566
  store i32 %add31, i32* %arrayidx26, align 4, !dbg !566, !tbaa !118
  %18 = load i32, i32* %arrayidx27, align 4, !dbg !566, !tbaa !118
  %sub34 = sub nsw i32 %14, %18, !dbg !566
  store i32 %sub34, i32* %arrayidx27, align 4, !dbg !566, !tbaa !118
  %19 = load i32, i32* %arrayidx30, align 4, !dbg !566, !tbaa !118
  %sub37 = sub nsw i32 %15, %19, !dbg !566
  store i32 %sub37, i32* %arrayidx30, align 4, !dbg !566, !tbaa !118
  %20 = load i32, i32* %arrayidx40, align 4, !dbg !567, !tbaa !118
  call void @llvm.dbg.value(metadata i32 %20, metadata !489, metadata !DIExpression()), !dbg !567
  %21 = load i32, i32* %arrayidx42, align 4, !dbg !567, !tbaa !118
  call void @llvm.dbg.value(metadata i32 %21, metadata !491, metadata !DIExpression()), !dbg !567
  %22 = load i32, i32* %arrayidx43, align 4, !dbg !567, !tbaa !118
  %add44 = add nsw i32 %22, %20, !dbg !567
  store i32 %add44, i32* %arrayidx40, align 4, !dbg !567, !tbaa !118
  %23 = load i32, i32* %arrayidx46, align 4, !dbg !567, !tbaa !118
  %add47 = add nsw i32 %23, %21, !dbg !567
  store i32 %add47, i32* %arrayidx42, align 4, !dbg !567, !tbaa !118
  %24 = load i32, i32* %arrayidx43, align 4, !dbg !567, !tbaa !118
  %sub50 = sub nsw i32 %20, %24, !dbg !567
  store i32 %sub50, i32* %arrayidx43, align 4, !dbg !567, !tbaa !118
  %25 = load i32, i32* %arrayidx46, align 4, !dbg !567, !tbaa !118
  %sub53 = sub nsw i32 %21, %25, !dbg !567
  store i32 %sub53, i32* %arrayidx46, align 4, !dbg !567, !tbaa !118
  %26 = load i32, i32* %arrayidx56, align 4, !dbg !568, !tbaa !118
  call void @llvm.dbg.value(metadata i32 %26, metadata !492, metadata !DIExpression()), !dbg !568
  %27 = load i32, i32* %arrayidx58, align 4, !dbg !568, !tbaa !118
  call void @llvm.dbg.value(metadata i32 %27, metadata !494, metadata !DIExpression()), !dbg !568
  %28 = load i32, i32* %arrayidx59, align 4, !dbg !568, !tbaa !118
  %add60 = add nsw i32 %28, %26, !dbg !568
  store i32 %add60, i32* %arrayidx56, align 4, !dbg !568, !tbaa !118
  %29 = load i32, i32* %arrayidx62, align 4, !dbg !568, !tbaa !118
  %add63 = add nsw i32 %29, %27, !dbg !568
  store i32 %add63, i32* %arrayidx58, align 4, !dbg !568, !tbaa !118
  %30 = load i32, i32* %arrayidx59, align 4, !dbg !568, !tbaa !118
  %sub66 = sub nsw i32 %26, %30, !dbg !568
  store i32 %sub66, i32* %arrayidx59, align 4, !dbg !568, !tbaa !118
  %31 = load i32, i32* %arrayidx62, align 4, !dbg !568, !tbaa !118
  %sub69 = sub nsw i32 %27, %31, !dbg !568
  store i32 %sub69, i32* %arrayidx62, align 4, !dbg !568, !tbaa !118
  %32 = load i32, i32* %arrayidx27, align 4, !dbg !564, !tbaa !118
  call void @llvm.dbg.value(metadata i32 %32, metadata !481, metadata !DIExpression()), !dbg !564
  %33 = load i32, i32* %arrayidx30, align 4, !dbg !564, !tbaa !118
  %sub76 = add nsw i32 %33, %32, !dbg !564
  %conv = sitofp i32 %sub76 to float, !dbg !564
  %mul77 = fmul float %conv, 0x3FE6A09E60000000, !dbg !564
  %conv78 = fptosi float %mul77 to i32, !dbg !564
  store i32 %conv78, i32* %arrayidx27, align 4, !dbg !564, !tbaa !118
  %34 = load i32, i32* %arrayidx30, align 4, !dbg !564, !tbaa !118
  %add83 = sub i32 %34, %32, !dbg !564
  %conv84 = sitofp i32 %add83 to float, !dbg !564
  %mul85 = fmul float %conv84, 0x3FE6A09E60000000, !dbg !564
  %conv86 = fptosi float %mul85 to i32, !dbg !564
  store i32 %conv86, i32* %arrayidx30, align 4, !dbg !564, !tbaa !118
  %35 = load i32, i32* %arrayidx43, align 4, !dbg !564, !tbaa !118
  call void @llvm.dbg.value(metadata i32 %35, metadata !481, metadata !DIExpression()), !dbg !564
  %36 = load i32, i32* %arrayidx46, align 4, !dbg !564, !tbaa !118
  store i32 %36, i32* %arrayidx43, align 4, !dbg !564, !tbaa !118
  %mul95 = sub nsw i32 0, %35, !dbg !564
  store i32 %mul95, i32* %arrayidx46, align 4, !dbg !564, !tbaa !118
  %37 = load i32, i32* %arrayidx59, align 4, !dbg !564, !tbaa !118
  call void @llvm.dbg.value(metadata i32 %37, metadata !481, metadata !DIExpression()), !dbg !564
  %38 = load i32, i32* %arrayidx62, align 4, !dbg !564, !tbaa !118
  %sub105 = sub i32 %38, %37, !dbg !564
  %conv106 = sitofp i32 %sub105 to float, !dbg !564
  %mul107 = fmul float %conv106, 0x3FE6A09E60000000, !dbg !564
  %conv108 = fptosi float %mul107 to i32, !dbg !564
  store i32 %conv108, i32* %arrayidx59, align 4, !dbg !564, !tbaa !118
  %39 = load i32, i32* %arrayidx62, align 4, !dbg !564, !tbaa !118
  %40 = add i32 %37, %39, !dbg !564
  %add113 = sub i32 0, %40, !dbg !564
  %conv114 = sitofp i32 %add113 to float, !dbg !564
  %mul115 = fmul float %conv114, 0x3FE6A09E60000000, !dbg !564
  %conv116 = fptosi float %mul115 to i32, !dbg !564
  store i32 %conv116, i32* %arrayidx62, align 4, !dbg !564, !tbaa !118
  call void @llvm.dbg.value(metadata i32 0, metadata !495, metadata !DIExpression()), !dbg !569
  call void @llvm.dbg.value(metadata i32 -1, metadata !497, metadata !DIExpression()), !dbg !569
  %41 = load i32, i32* %data_x, align 4, !dbg !570, !tbaa !118
  call void @llvm.dbg.value(metadata i32 %41, metadata !499, metadata !DIExpression()), !dbg !570
  %42 = load i32, i32* %data_y, align 4, !dbg !570, !tbaa !118
  call void @llvm.dbg.value(metadata i32 %42, metadata !501, metadata !DIExpression()), !dbg !570
  %43 = load i32, i32* %arrayidx40, align 4, !dbg !570, !tbaa !118
  %add123 = add nsw i32 %43, %41, !dbg !570
  store i32 %add123, i32* %data_x, align 4, !dbg !570, !tbaa !118
  %44 = load i32, i32* %arrayidx42, align 4, !dbg !570, !tbaa !118
  %add126 = add nsw i32 %44, %42, !dbg !570
  store i32 %add126, i32* %data_y, align 4, !dbg !570, !tbaa !118
  %45 = load i32, i32* %arrayidx40, align 4, !dbg !570, !tbaa !118
  %sub129 = sub nsw i32 %41, %45, !dbg !570
  store i32 %sub129, i32* %arrayidx40, align 4, !dbg !570, !tbaa !118
  %46 = load i32, i32* %arrayidx42, align 4, !dbg !570, !tbaa !118
  %sub132 = sub nsw i32 %42, %46, !dbg !570
  store i32 %sub132, i32* %arrayidx42, align 4, !dbg !570, !tbaa !118
  %47 = load i32, i32* %arrayidx24, align 4, !dbg !571, !tbaa !118
  call void @llvm.dbg.value(metadata i32 %47, metadata !502, metadata !DIExpression()), !dbg !571
  %48 = load i32, i32* %arrayidx26, align 4, !dbg !571, !tbaa !118
  call void @llvm.dbg.value(metadata i32 %48, metadata !504, metadata !DIExpression()), !dbg !571
  %49 = load i32, i32* %arrayidx56, align 4, !dbg !571, !tbaa !118
  %add139 = add nsw i32 %49, %47, !dbg !571
  store i32 %add139, i32* %arrayidx24, align 4, !dbg !571, !tbaa !118
  %50 = load i32, i32* %arrayidx58, align 4, !dbg !571, !tbaa !118
  %add142 = add nsw i32 %50, %48, !dbg !571
  store i32 %add142, i32* %arrayidx26, align 4, !dbg !571, !tbaa !118
  %51 = load i32, i32* %arrayidx56, align 4, !dbg !571, !tbaa !118
  %sub145 = sub nsw i32 %47, %51, !dbg !571
  store i32 %sub145, i32* %arrayidx56, align 4, !dbg !571, !tbaa !118
  %52 = load i32, i32* %arrayidx58, align 4, !dbg !571, !tbaa !118
  %sub148 = sub nsw i32 %48, %52, !dbg !571
  store i32 %sub148, i32* %arrayidx58, align 4, !dbg !571, !tbaa !118
  %53 = load i32, i32* %arrayidx56, align 4, !dbg !569, !tbaa !118
  call void @llvm.dbg.value(metadata i32 %53, metadata !498, metadata !DIExpression()), !dbg !569
  store i32 %sub148, i32* %arrayidx56, align 4, !dbg !569, !tbaa !118
  %mul157 = sub nsw i32 0, %53, !dbg !569
  store i32 %mul157, i32* %arrayidx58, align 4, !dbg !569, !tbaa !118
  %54 = load i32, i32* %data_x, align 4, !dbg !572, !tbaa !118
  call void @llvm.dbg.value(metadata i32 %54, metadata !505, metadata !DIExpression()), !dbg !572
  %55 = load i32, i32* %data_y, align 4, !dbg !572, !tbaa !118
  call void @llvm.dbg.value(metadata i32 %55, metadata !507, metadata !DIExpression()), !dbg !572
  %56 = load i32, i32* %arrayidx24, align 4, !dbg !572, !tbaa !118
  %add167 = add nsw i32 %56, %54, !dbg !572
  store i32 %add167, i32* %data_x, align 4, !dbg !572, !tbaa !118
  %57 = load i32, i32* %arrayidx26, align 4, !dbg !572, !tbaa !118
  %add170 = add nsw i32 %57, %55, !dbg !572
  store i32 %add170, i32* %data_y, align 4, !dbg !572, !tbaa !118
  %58 = load i32, i32* %arrayidx24, align 4, !dbg !572, !tbaa !118
  %sub173 = sub nsw i32 %54, %58, !dbg !572
  store i32 %sub173, i32* %arrayidx24, align 4, !dbg !572, !tbaa !118
  %59 = load i32, i32* %arrayidx26, align 4, !dbg !572, !tbaa !118
  %sub176 = sub nsw i32 %55, %59, !dbg !572
  store i32 %sub176, i32* %arrayidx26, align 4, !dbg !572, !tbaa !118
  %60 = load i32, i32* %arrayidx40, align 4, !dbg !573, !tbaa !118
  call void @llvm.dbg.value(metadata i32 %60, metadata !508, metadata !DIExpression()), !dbg !573
  %61 = load i32, i32* %arrayidx42, align 4, !dbg !573, !tbaa !118
  call void @llvm.dbg.value(metadata i32 %61, metadata !510, metadata !DIExpression()), !dbg !573
  %62 = load i32, i32* %arrayidx56, align 4, !dbg !573, !tbaa !118
  %add183 = add nsw i32 %62, %60, !dbg !573
  store i32 %add183, i32* %arrayidx40, align 4, !dbg !573, !tbaa !118
  %63 = load i32, i32* %arrayidx58, align 4, !dbg !573, !tbaa !118
  %add186 = add nsw i32 %63, %61, !dbg !573
  store i32 %add186, i32* %arrayidx42, align 4, !dbg !573, !tbaa !118
  %64 = load i32, i32* %arrayidx56, align 4, !dbg !573, !tbaa !118
  %sub189 = sub nsw i32 %60, %64, !dbg !573
  store i32 %sub189, i32* %arrayidx56, align 4, !dbg !573, !tbaa !118
  %65 = load i32, i32* %arrayidx58, align 4, !dbg !573, !tbaa !118
  %sub192 = sub nsw i32 %61, %65, !dbg !573
  store i32 %sub192, i32* %arrayidx58, align 4, !dbg !573, !tbaa !118
  call void @llvm.dbg.value(metadata i32 0, metadata !511, metadata !DIExpression()), !dbg !574
  call void @llvm.dbg.value(metadata i32 -1, metadata !513, metadata !DIExpression()), !dbg !574
  %66 = load i32, i32* %arrayidx12, align 4, !dbg !575, !tbaa !118
  call void @llvm.dbg.value(metadata i32 %66, metadata !515, metadata !DIExpression()), !dbg !575
  %67 = load i32, i32* %arrayidx15, align 4, !dbg !575, !tbaa !118
  call void @llvm.dbg.value(metadata i32 %67, metadata !517, metadata !DIExpression()), !dbg !575
  %68 = load i32, i32* %arrayidx43, align 4, !dbg !575, !tbaa !118
  %add202 = add nsw i32 %68, %66, !dbg !575
  store i32 %add202, i32* %arrayidx12, align 4, !dbg !575, !tbaa !118
  %69 = load i32, i32* %arrayidx46, align 4, !dbg !575, !tbaa !118
  %add205 = add nsw i32 %69, %67, !dbg !575
  store i32 %add205, i32* %arrayidx15, align 4, !dbg !575, !tbaa !118
  %70 = load i32, i32* %arrayidx43, align 4, !dbg !575, !tbaa !118
  %sub208 = sub nsw i32 %66, %70, !dbg !575
  store i32 %sub208, i32* %arrayidx43, align 4, !dbg !575, !tbaa !118
  %71 = load i32, i32* %arrayidx46, align 4, !dbg !575, !tbaa !118
  %sub211 = sub nsw i32 %67, %71, !dbg !575
  store i32 %sub211, i32* %arrayidx46, align 4, !dbg !575, !tbaa !118
  %72 = load i32, i32* %arrayidx27, align 4, !dbg !576, !tbaa !118
  call void @llvm.dbg.value(metadata i32 %72, metadata !518, metadata !DIExpression()), !dbg !576
  %73 = load i32, i32* %arrayidx30, align 4, !dbg !576, !tbaa !118
  call void @llvm.dbg.value(metadata i32 %73, metadata !520, metadata !DIExpression()), !dbg !576
  %74 = load i32, i32* %arrayidx59, align 4, !dbg !576, !tbaa !118
  %add218 = add nsw i32 %74, %72, !dbg !576
  store i32 %add218, i32* %arrayidx27, align 4, !dbg !576, !tbaa !118
  %75 = load i32, i32* %arrayidx62, align 4, !dbg !576, !tbaa !118
  %add221 = add nsw i32 %75, %73, !dbg !576
  store i32 %add221, i32* %arrayidx30, align 4, !dbg !576, !tbaa !118
  %76 = load i32, i32* %arrayidx59, align 4, !dbg !576, !tbaa !118
  %sub224 = sub nsw i32 %72, %76, !dbg !576
  store i32 %sub224, i32* %arrayidx59, align 4, !dbg !576, !tbaa !118
  %77 = load i32, i32* %arrayidx62, align 4, !dbg !576, !tbaa !118
  %sub227 = sub nsw i32 %73, %77, !dbg !576
  store i32 %sub227, i32* %arrayidx62, align 4, !dbg !576, !tbaa !118
  %78 = load i32, i32* %arrayidx59, align 4, !dbg !574, !tbaa !118
  call void @llvm.dbg.value(metadata i32 %78, metadata !514, metadata !DIExpression()), !dbg !574
  store i32 %sub227, i32* %arrayidx59, align 4, !dbg !574, !tbaa !118
  %mul236 = sub nsw i32 0, %78, !dbg !574
  store i32 %mul236, i32* %arrayidx62, align 4, !dbg !574, !tbaa !118
  %79 = load i32, i32* %arrayidx12, align 4, !dbg !577, !tbaa !118
  call void @llvm.dbg.value(metadata i32 %79, metadata !521, metadata !DIExpression()), !dbg !577
  %80 = load i32, i32* %arrayidx15, align 4, !dbg !577, !tbaa !118
  call void @llvm.dbg.value(metadata i32 %80, metadata !523, metadata !DIExpression()), !dbg !577
  %81 = load i32, i32* %arrayidx27, align 4, !dbg !577, !tbaa !118
  %add246 = add nsw i32 %81, %79, !dbg !577
  store i32 %add246, i32* %arrayidx12, align 4, !dbg !577, !tbaa !118
  %82 = load i32, i32* %arrayidx30, align 4, !dbg !577, !tbaa !118
  %add249 = add nsw i32 %82, %80, !dbg !577
  store i32 %add249, i32* %arrayidx15, align 4, !dbg !577, !tbaa !118
  %83 = load i32, i32* %arrayidx27, align 4, !dbg !577, !tbaa !118
  %sub252 = sub nsw i32 %79, %83, !dbg !577
  store i32 %sub252, i32* %arrayidx27, align 4, !dbg !577, !tbaa !118
  %84 = load i32, i32* %arrayidx30, align 4, !dbg !577, !tbaa !118
  %sub255 = sub nsw i32 %80, %84, !dbg !577
  store i32 %sub255, i32* %arrayidx30, align 4, !dbg !577, !tbaa !118
  %85 = load i32, i32* %arrayidx43, align 4, !dbg !578, !tbaa !118
  call void @llvm.dbg.value(metadata i32 %85, metadata !524, metadata !DIExpression()), !dbg !578
  %86 = load i32, i32* %arrayidx46, align 4, !dbg !578, !tbaa !118
  call void @llvm.dbg.value(metadata i32 %86, metadata !526, metadata !DIExpression()), !dbg !578
  %87 = load i32, i32* %arrayidx59, align 4, !dbg !578, !tbaa !118
  %add262 = add nsw i32 %87, %85, !dbg !578
  store i32 %add262, i32* %arrayidx43, align 4, !dbg !578, !tbaa !118
  %88 = load i32, i32* %arrayidx62, align 4, !dbg !578, !tbaa !118
  %add265 = add nsw i32 %88, %86, !dbg !578
  store i32 %add265, i32* %arrayidx46, align 4, !dbg !578, !tbaa !118
  %89 = load i32, i32* %arrayidx59, align 4, !dbg !578, !tbaa !118
  %sub268 = sub nsw i32 %85, %89, !dbg !578
  store i32 %sub268, i32* %arrayidx59, align 4, !dbg !578, !tbaa !118
  %90 = load i32, i32* %arrayidx62, align 4, !dbg !578, !tbaa !118
  %sub271 = sub nsw i32 %86, %90, !dbg !578
  store i32 %sub271, i32* %arrayidx62, align 4, !dbg !578, !tbaa !118
  %91 = trunc i64 %indvars.iv608 to i32, !dbg !579
  %92 = lshr i32 %91, 3, !dbg !579
  call void @llvm.dbg.value(metadata i32 %92, metadata !466, metadata !DIExpression()), !dbg !580
  call void @llvm.dbg.value(metadata i32 1, metadata !469, metadata !DIExpression()), !dbg !581
  %mul276 = mul nuw nsw i32 %92, 7
  %add277 = add nsw i32 %mul276, -1
  %93 = sext i32 %add277 to i64, !dbg !582
  br label %94, !dbg !582

; <label>:94:                                     ; preds = %94, %7
  %indvars.iv600 = phi i64 [ 1, %7 ], [ %indvars.iv.next601, %94 ]
  call void @llvm.dbg.value(metadata i64 %indvars.iv600, metadata !469, metadata !DIExpression()), !dbg !581
  %95 = add nsw i64 %indvars.iv600, %93, !dbg !583
  %arrayidx280 = getelementptr inbounds float, float* %cos_64, i64 %95, !dbg !584
  %96 = load float, float* %arrayidx280, align 4, !dbg !584, !tbaa !150
  %conv281 = fptosi float %96 to i32, !dbg !584
  call void @llvm.dbg.value(metadata i32 %conv281, metadata !527, metadata !DIExpression()), !dbg !585
  %arrayidx286 = getelementptr inbounds float, float* %sin_64, i64 %95, !dbg !586
  %97 = load float, float* %arrayidx286, align 4, !dbg !586, !tbaa !150
  %conv287 = fptosi float %97 to i32, !dbg !586
  call void @llvm.dbg.value(metadata i32 %conv287, metadata !531, metadata !DIExpression()), !dbg !587
  %arrayidx289 = getelementptr inbounds i32, i32* %data_x, i64 %indvars.iv600, !dbg !588
  %98 = load i32, i32* %arrayidx289, align 4, !dbg !588, !tbaa !118
  call void @llvm.dbg.value(metadata i32 %98, metadata !532, metadata !DIExpression()), !dbg !589
  %mul292 = mul nsw i32 %98, %conv281, !dbg !590
  %arrayidx294 = getelementptr inbounds i32, i32* %data_y, i64 %indvars.iv600, !dbg !590
  %99 = load i32, i32* %arrayidx294, align 4, !dbg !590, !tbaa !118
  %mul295 = mul nsw i32 %99, %conv287, !dbg !590
  %sub296 = sub nsw i32 %mul292, %mul295, !dbg !590
  store i32 %sub296, i32* %arrayidx289, align 4, !dbg !591, !tbaa !118
  %mul299 = mul nsw i32 %98, %conv287, !dbg !592
  %100 = load i32, i32* %arrayidx294, align 4, !dbg !592, !tbaa !118
  %mul302 = mul nsw i32 %100, %conv281, !dbg !592
  %add303 = add nsw i32 %mul302, %mul299, !dbg !592
  store i32 %add303, i32* %arrayidx294, align 4, !dbg !593, !tbaa !118
  %indvars.iv.next601 = add nuw nsw i64 %indvars.iv600, 1, !dbg !594
  %exitcond603 = icmp eq i64 %indvars.iv.next601, 8, !dbg !595
  br i1 %exitcond603, label %101, label %94, !dbg !582, !llvm.loop !596

; <label>:101:                                    ; preds = %94
  call void @llvm.dbg.value(metadata i32 0, metadata !468, metadata !DIExpression()), !dbg !548
  %102 = shl i64 %indvars.iv608, 3
  br label %103, !dbg !598

; <label>:103:                                    ; preds = %103, %101
  %indvars.iv604 = phi i64 [ 0, %101 ], [ %indvars.iv.next605, %103 ]
  call void @llvm.dbg.value(metadata i64 %indvars.iv604, metadata !468, metadata !DIExpression()), !dbg !548
  %arrayidx310 = getelementptr inbounds i32, i32* %data_x, i64 %indvars.iv604, !dbg !600
  %104 = load i32, i32* %arrayidx310, align 4, !dbg !600, !tbaa !118
  %105 = add nuw nsw i64 %indvars.iv604, %102, !dbg !603
  %arrayidx314 = getelementptr inbounds i32, i32* %DATA_x, i64 %105, !dbg !604
  store i32 %104, i32* %arrayidx314, align 4, !dbg !605, !tbaa !118
  %arrayidx316 = getelementptr inbounds i32, i32* %data_y, i64 %indvars.iv604, !dbg !606
  %106 = load i32, i32* %arrayidx316, align 4, !dbg !606, !tbaa !118
  %arrayidx320 = getelementptr inbounds i32, i32* %DATA_y, i64 %105, !dbg !607
  store i32 %106, i32* %arrayidx320, align 4, !dbg !608, !tbaa !118
  %indvars.iv.next605 = add nuw nsw i64 %indvars.iv604, 1, !dbg !609
  %exitcond607 = icmp eq i64 %indvars.iv.next605, 8, !dbg !610
  br i1 %exitcond607, label %107, label %103, !dbg !598, !llvm.loop !611

; <label>:107:                                    ; preds = %103
  %indvars.iv.next609 = add nuw nsw i64 %indvars.iv608, 1, !dbg !613
  %exitcond612 = icmp eq i64 %indvars.iv.next609, 64, !dbg !614
  br i1 %exitcond612, label %108, label %1, !dbg !547, !llvm.loop !615

; <label>:108:                                    ; preds = %107
  ret void, !dbg !617
}

; Function Attrs: noinline nounwind uwtable
define void @step7(i32* nocapture readnone %work_x, i32* nocapture readnone %work_y, i32* nocapture readonly %DATA_x, i32* nocapture readnone %DATA_y, i32* nocapture %data_x, i32* nocapture readnone %data_y, i32* nocapture %smem, i32* nocapture readonly %reversed, float* nocapture readnone %sin_64, float* nocapture readnone %cos_64, float* nocapture readnone %sin_512, float* nocapture readnone %cos_512) local_unnamed_addr #0 !dbg !618 {
  call void @llvm.dbg.value(metadata i32* %work_x, metadata !620, metadata !DIExpression()), !dbg !638
  call void @llvm.dbg.value(metadata i32* %work_y, metadata !621, metadata !DIExpression()), !dbg !639
  call void @llvm.dbg.value(metadata i32* %DATA_x, metadata !622, metadata !DIExpression()), !dbg !640
  call void @llvm.dbg.value(metadata i32* %DATA_y, metadata !623, metadata !DIExpression()), !dbg !641
  call void @llvm.dbg.value(metadata i32* %data_x, metadata !624, metadata !DIExpression()), !dbg !642
  call void @llvm.dbg.value(metadata i32* %data_y, metadata !625, metadata !DIExpression()), !dbg !643
  call void @llvm.dbg.value(metadata i32* %smem, metadata !626, metadata !DIExpression()), !dbg !644
  call void @llvm.dbg.value(metadata i32* %reversed, metadata !627, metadata !DIExpression()), !dbg !645
  call void @llvm.dbg.value(metadata float* %sin_64, metadata !628, metadata !DIExpression()), !dbg !646
  call void @llvm.dbg.value(metadata float* %cos_64, metadata !629, metadata !DIExpression()), !dbg !647
  call void @llvm.dbg.value(metadata float* %sin_512, metadata !630, metadata !DIExpression()), !dbg !648
  call void @llvm.dbg.value(metadata float* %cos_512, metadata !631, metadata !DIExpression()), !dbg !649
  call void @llvm.dbg.value(metadata i32 64, metadata !637, metadata !DIExpression()), !dbg !650
  call void @llvm.dbg.value(metadata i32 0, metadata !632, metadata !DIExpression()), !dbg !651
  %arrayidx12 = getelementptr inbounds i32, i32* %reversed, i64 1
  %arrayidx20 = getelementptr inbounds i32, i32* %reversed, i64 2
  %arrayidx28 = getelementptr inbounds i32, i32* %reversed, i64 3
  %arrayidx36 = getelementptr inbounds i32, i32* %reversed, i64 4
  %arrayidx44 = getelementptr inbounds i32, i32* %reversed, i64 5
  %arrayidx52 = getelementptr inbounds i32, i32* %reversed, i64 6
  %arrayidx60 = getelementptr inbounds i32, i32* %reversed, i64 7
  br label %1, !dbg !652

; <label>:1:                                      ; preds = %6, %0
  %indvars.iv121 = phi i64 [ 0, %0 ], [ %indvars.iv.next122, %6 ]
  call void @llvm.dbg.value(metadata i32 0, metadata !635, metadata !DIExpression()), !dbg !654
  call void @llvm.dbg.value(metadata i64 %indvars.iv121, metadata !632, metadata !DIExpression()), !dbg !651
  %2 = shl i64 %indvars.iv121, 3
  br label %3, !dbg !655

; <label>:3:                                      ; preds = %3, %1
  %indvars.iv = phi i64 [ 0, %1 ], [ %indvars.iv.next, %3 ]
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !635, metadata !DIExpression()), !dbg !654
  %4 = add nuw nsw i64 %indvars.iv, %2, !dbg !659
  %arrayidx = getelementptr inbounds i32, i32* %DATA_x, i64 %4, !dbg !662
  %5 = load i32, i32* %arrayidx, align 4, !dbg !662, !tbaa !118
  %arrayidx3 = getelementptr inbounds i32, i32* %data_x, i64 %indvars.iv, !dbg !663
  store i32 %5, i32* %arrayidx3, align 4, !dbg !664, !tbaa !118
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !665
  %exitcond = icmp eq i64 %indvars.iv.next, 8, !dbg !666
  br i1 %exitcond, label %6, label %3, !dbg !655, !llvm.loop !667

; <label>:6:                                      ; preds = %3
  %7 = trunc i64 %indvars.iv121 to i32, !dbg !669
  %8 = and i32 %7, 2147483640, !dbg !669
  %9 = trunc i64 %indvars.iv121 to i32, !dbg !671
  %and = and i32 %9, 7, !dbg !671
  call void @llvm.dbg.value(metadata i32 %and, metadata !634, metadata !DIExpression()), !dbg !672
  %10 = load i32, i32* %reversed, align 4, !dbg !669, !tbaa !118
  %idxprom5 = sext i32 %10 to i64, !dbg !669
  %arrayidx6 = getelementptr inbounds i32, i32* %data_x, i64 %idxprom5, !dbg !669
  %11 = load i32, i32* %arrayidx6, align 4, !dbg !669, !tbaa !118
  %arrayidx11 = getelementptr inbounds i32, i32* %smem, i64 %indvars.iv121, !dbg !669
  store i32 %11, i32* %arrayidx11, align 4, !dbg !669, !tbaa !118
  %12 = load i32, i32* %arrayidx12, align 4, !dbg !669, !tbaa !118
  %idxprom13 = sext i32 %12 to i64, !dbg !669
  %arrayidx14 = getelementptr inbounds i32, i32* %data_x, i64 %idxprom13, !dbg !669
  %13 = load i32, i32* %arrayidx14, align 4, !dbg !669, !tbaa !118
  %add16 = add nuw nsw i32 %8, 72, !dbg !669
  %add17 = or i32 %add16, %and, !dbg !669
  %14 = zext i32 %add17 to i64, !dbg !669
  %arrayidx19 = getelementptr inbounds i32, i32* %smem, i64 %14, !dbg !669
  store i32 %13, i32* %arrayidx19, align 4, !dbg !669, !tbaa !118
  %15 = load i32, i32* %arrayidx20, align 4, !dbg !669, !tbaa !118
  %idxprom21 = sext i32 %15 to i64, !dbg !669
  %arrayidx22 = getelementptr inbounds i32, i32* %data_x, i64 %idxprom21, !dbg !669
  %16 = load i32, i32* %arrayidx22, align 4, !dbg !669, !tbaa !118
  %add24 = add nuw nsw i32 %8, 144, !dbg !669
  %add25 = or i32 %add24, %and, !dbg !669
  %17 = zext i32 %add25 to i64, !dbg !669
  %arrayidx27 = getelementptr inbounds i32, i32* %smem, i64 %17, !dbg !669
  store i32 %16, i32* %arrayidx27, align 4, !dbg !669, !tbaa !118
  %18 = load i32, i32* %arrayidx28, align 4, !dbg !669, !tbaa !118
  %idxprom29 = sext i32 %18 to i64, !dbg !669
  %arrayidx30 = getelementptr inbounds i32, i32* %data_x, i64 %idxprom29, !dbg !669
  %19 = load i32, i32* %arrayidx30, align 4, !dbg !669, !tbaa !118
  %add32 = add nuw nsw i32 %8, 216, !dbg !669
  %add33 = or i32 %add32, %and, !dbg !669
  %20 = zext i32 %add33 to i64, !dbg !669
  %arrayidx35 = getelementptr inbounds i32, i32* %smem, i64 %20, !dbg !669
  store i32 %19, i32* %arrayidx35, align 4, !dbg !669, !tbaa !118
  %21 = load i32, i32* %arrayidx36, align 4, !dbg !669, !tbaa !118
  %idxprom37 = sext i32 %21 to i64, !dbg !669
  %arrayidx38 = getelementptr inbounds i32, i32* %data_x, i64 %idxprom37, !dbg !669
  %22 = load i32, i32* %arrayidx38, align 4, !dbg !669, !tbaa !118
  %add40 = add nuw nsw i32 %8, 288, !dbg !669
  %add41 = or i32 %add40, %and, !dbg !669
  %23 = zext i32 %add41 to i64, !dbg !669
  %arrayidx43 = getelementptr inbounds i32, i32* %smem, i64 %23, !dbg !669
  store i32 %22, i32* %arrayidx43, align 4, !dbg !669, !tbaa !118
  %24 = load i32, i32* %arrayidx44, align 4, !dbg !669, !tbaa !118
  %idxprom45 = sext i32 %24 to i64, !dbg !669
  %arrayidx46 = getelementptr inbounds i32, i32* %data_x, i64 %idxprom45, !dbg !669
  %25 = load i32, i32* %arrayidx46, align 4, !dbg !669, !tbaa !118
  %add48 = add nuw nsw i32 %8, 360, !dbg !669
  %add49 = or i32 %add48, %and, !dbg !669
  %26 = zext i32 %add49 to i64, !dbg !669
  %arrayidx51 = getelementptr inbounds i32, i32* %smem, i64 %26, !dbg !669
  store i32 %25, i32* %arrayidx51, align 4, !dbg !669, !tbaa !118
  %27 = load i32, i32* %arrayidx52, align 4, !dbg !669, !tbaa !118
  %idxprom53 = sext i32 %27 to i64, !dbg !669
  %arrayidx54 = getelementptr inbounds i32, i32* %data_x, i64 %idxprom53, !dbg !669
  %28 = load i32, i32* %arrayidx54, align 4, !dbg !669, !tbaa !118
  %add56 = add nuw nsw i32 %8, 432, !dbg !669
  %add57 = or i32 %add56, %and, !dbg !669
  %29 = zext i32 %add57 to i64, !dbg !669
  %arrayidx59 = getelementptr inbounds i32, i32* %smem, i64 %29, !dbg !669
  store i32 %28, i32* %arrayidx59, align 4, !dbg !669, !tbaa !118
  %30 = load i32, i32* %arrayidx60, align 4, !dbg !669, !tbaa !118
  %idxprom61 = sext i32 %30 to i64, !dbg !669
  %arrayidx62 = getelementptr inbounds i32, i32* %data_x, i64 %idxprom61, !dbg !669
  %31 = load i32, i32* %arrayidx62, align 4, !dbg !669, !tbaa !118
  %add64 = add nuw nsw i32 %8, 504, !dbg !669
  %add65 = or i32 %add64, %and, !dbg !669
  %32 = zext i32 %add65 to i64, !dbg !669
  %arrayidx67 = getelementptr inbounds i32, i32* %smem, i64 %32, !dbg !669
  store i32 %31, i32* %arrayidx67, align 4, !dbg !669, !tbaa !118
  %indvars.iv.next122 = add nuw nsw i64 %indvars.iv121, 1, !dbg !673
  %exitcond124 = icmp eq i64 %indvars.iv.next122, 64, !dbg !674
  br i1 %exitcond124, label %33, label %1, !dbg !652, !llvm.loop !675

; <label>:33:                                     ; preds = %6
  ret void, !dbg !677
}

; Function Attrs: noinline nounwind uwtable
define void @step8(i32* nocapture readnone %work_x, i32* nocapture readnone %work_y, i32* nocapture %DATA_x, i32* nocapture readnone %DATA_y, i32* nocapture %data_x, i32* nocapture readnone %data_y, i32* nocapture readonly %smem, i32* nocapture readnone %reversed, float* nocapture readnone %sin_64, float* nocapture readnone %cos_64, float* nocapture readnone %sin_512, float* nocapture readnone %cos_512) local_unnamed_addr #0 !dbg !678 {
  call void @llvm.dbg.value(metadata i32* %work_x, metadata !680, metadata !DIExpression()), !dbg !698
  call void @llvm.dbg.value(metadata i32* %work_y, metadata !681, metadata !DIExpression()), !dbg !699
  call void @llvm.dbg.value(metadata i32* %DATA_x, metadata !682, metadata !DIExpression()), !dbg !700
  call void @llvm.dbg.value(metadata i32* %DATA_y, metadata !683, metadata !DIExpression()), !dbg !701
  call void @llvm.dbg.value(metadata i32* %data_x, metadata !684, metadata !DIExpression()), !dbg !702
  call void @llvm.dbg.value(metadata i32* %data_y, metadata !685, metadata !DIExpression()), !dbg !703
  call void @llvm.dbg.value(metadata i32* %smem, metadata !686, metadata !DIExpression()), !dbg !704
  call void @llvm.dbg.value(metadata i32* %reversed, metadata !687, metadata !DIExpression()), !dbg !705
  call void @llvm.dbg.value(metadata float* %sin_64, metadata !688, metadata !DIExpression()), !dbg !706
  call void @llvm.dbg.value(metadata float* %cos_64, metadata !689, metadata !DIExpression()), !dbg !707
  call void @llvm.dbg.value(metadata float* %sin_512, metadata !690, metadata !DIExpression()), !dbg !708
  call void @llvm.dbg.value(metadata float* %cos_512, metadata !691, metadata !DIExpression()), !dbg !709
  call void @llvm.dbg.value(metadata i32 64, metadata !697, metadata !DIExpression()), !dbg !710
  call void @llvm.dbg.value(metadata i32 0, metadata !692, metadata !DIExpression()), !dbg !711
  %arrayidx15 = getelementptr inbounds i32, i32* %data_x, i64 1
  %arrayidx21 = getelementptr inbounds i32, i32* %data_x, i64 2
  %arrayidx27 = getelementptr inbounds i32, i32* %data_x, i64 3
  %arrayidx33 = getelementptr inbounds i32, i32* %data_x, i64 4
  %arrayidx39 = getelementptr inbounds i32, i32* %data_x, i64 5
  %arrayidx45 = getelementptr inbounds i32, i32* %data_x, i64 6
  %arrayidx51 = getelementptr inbounds i32, i32* %data_x, i64 7
  br label %1, !dbg !712

; <label>:1:                                      ; preds = %30, %0
  %indvars.iv118 = phi i64 [ 0, %0 ], [ %indvars.iv.next119, %30 ]
  call void @llvm.dbg.value(metadata i32 0, metadata !695, metadata !DIExpression()), !dbg !714
  call void @llvm.dbg.value(metadata i64 %indvars.iv118, metadata !692, metadata !DIExpression()), !dbg !711
  %2 = shl i64 %indvars.iv118, 3
  br label %3, !dbg !715

; <label>:3:                                      ; preds = %3, %1
  %indvars.iv = phi i64 [ 0, %1 ], [ %indvars.iv.next, %3 ]
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !695, metadata !DIExpression()), !dbg !714
  %4 = add nuw nsw i64 %indvars.iv, %2, !dbg !719
  %arrayidx = getelementptr inbounds i32, i32* %DATA_x, i64 %4, !dbg !722
  %5 = load i32, i32* %arrayidx, align 4, !dbg !722, !tbaa !118
  %arrayidx3 = getelementptr inbounds i32, i32* %data_x, i64 %indvars.iv, !dbg !723
  store i32 %5, i32* %arrayidx3, align 4, !dbg !724, !tbaa !118
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !725
  %exitcond = icmp eq i64 %indvars.iv.next, 8, !dbg !726
  br i1 %exitcond, label %6, label %3, !dbg !715, !llvm.loop !727

; <label>:6:                                      ; preds = %3
  %7 = trunc i64 %indvars.iv118 to i32, !dbg !729
  %8 = lshr i32 %7, 3, !dbg !729
  call void @llvm.dbg.value(metadata i32 %8, metadata !693, metadata !DIExpression()), !dbg !730
  %9 = trunc i64 %indvars.iv118 to i32, !dbg !731
  %and = and i32 %9, 7, !dbg !731
  call void @llvm.dbg.value(metadata i32 %and, metadata !694, metadata !DIExpression()), !dbg !732
  %mul4 = mul nsw i32 %8, 72, !dbg !733
  %add6 = or i32 %mul4, %and, !dbg !733
  %10 = zext i32 %add6 to i64, !dbg !733
  %arrayidx8 = getelementptr inbounds i32, i32* %smem, i64 %10, !dbg !733
  %11 = load i32, i32* %arrayidx8, align 4, !dbg !733, !tbaa !118
  store i32 %11, i32* %data_x, align 4, !dbg !733, !tbaa !118
  %add11 = add nuw nsw i32 %mul4, 8, !dbg !733
  %add12 = or i32 %add11, %and, !dbg !733
  %12 = zext i32 %add12 to i64, !dbg !733
  %arrayidx14 = getelementptr inbounds i32, i32* %smem, i64 %12, !dbg !733
  %13 = load i32, i32* %arrayidx14, align 4, !dbg !733, !tbaa !118
  store i32 %13, i32* %arrayidx15, align 4, !dbg !733, !tbaa !118
  %add17 = add nuw nsw i32 %mul4, 16, !dbg !733
  %add18 = or i32 %add17, %and, !dbg !733
  %14 = zext i32 %add18 to i64, !dbg !733
  %arrayidx20 = getelementptr inbounds i32, i32* %smem, i64 %14, !dbg !733
  %15 = load i32, i32* %arrayidx20, align 4, !dbg !733, !tbaa !118
  store i32 %15, i32* %arrayidx21, align 4, !dbg !733, !tbaa !118
  %add23 = add nuw nsw i32 %mul4, 24, !dbg !733
  %add24 = or i32 %add23, %and, !dbg !733
  %16 = zext i32 %add24 to i64, !dbg !733
  %arrayidx26 = getelementptr inbounds i32, i32* %smem, i64 %16, !dbg !733
  %17 = load i32, i32* %arrayidx26, align 4, !dbg !733, !tbaa !118
  store i32 %17, i32* %arrayidx27, align 4, !dbg !733, !tbaa !118
  %add29 = add nuw nsw i32 %mul4, 32, !dbg !733
  %add30 = or i32 %add29, %and, !dbg !733
  %18 = zext i32 %add30 to i64, !dbg !733
  %arrayidx32 = getelementptr inbounds i32, i32* %smem, i64 %18, !dbg !733
  %19 = load i32, i32* %arrayidx32, align 4, !dbg !733, !tbaa !118
  store i32 %19, i32* %arrayidx33, align 4, !dbg !733, !tbaa !118
  %add35 = add nuw nsw i32 %mul4, 40, !dbg !733
  %add36 = or i32 %add35, %and, !dbg !733
  %20 = zext i32 %add36 to i64, !dbg !733
  %arrayidx38 = getelementptr inbounds i32, i32* %smem, i64 %20, !dbg !733
  %21 = load i32, i32* %arrayidx38, align 4, !dbg !733, !tbaa !118
  store i32 %21, i32* %arrayidx39, align 4, !dbg !733, !tbaa !118
  %add41 = add nuw nsw i32 %mul4, 48, !dbg !733
  %add42 = or i32 %add41, %and, !dbg !733
  %22 = zext i32 %add42 to i64, !dbg !733
  %arrayidx44 = getelementptr inbounds i32, i32* %smem, i64 %22, !dbg !733
  %23 = load i32, i32* %arrayidx44, align 4, !dbg !733, !tbaa !118
  store i32 %23, i32* %arrayidx45, align 4, !dbg !733, !tbaa !118
  %add47 = add nuw nsw i32 %mul4, 56, !dbg !733
  %add48 = or i32 %add47, %and, !dbg !733
  %24 = zext i32 %add48 to i64, !dbg !733
  %arrayidx50 = getelementptr inbounds i32, i32* %smem, i64 %24, !dbg !733
  %25 = load i32, i32* %arrayidx50, align 4, !dbg !733, !tbaa !118
  store i32 %25, i32* %arrayidx51, align 4, !dbg !733, !tbaa !118
  call void @llvm.dbg.value(metadata i32 0, metadata !695, metadata !DIExpression()), !dbg !714
  %26 = shl i64 %indvars.iv118, 3
  br label %27, !dbg !735

; <label>:27:                                     ; preds = %27, %6
  %indvars.iv114 = phi i64 [ 0, %6 ], [ %indvars.iv.next115, %27 ]
  call void @llvm.dbg.value(metadata i64 %indvars.iv114, metadata !695, metadata !DIExpression()), !dbg !714
  %arrayidx54 = getelementptr inbounds i32, i32* %data_x, i64 %indvars.iv114, !dbg !737
  %28 = load i32, i32* %arrayidx54, align 4, !dbg !737, !tbaa !118
  %29 = add nuw nsw i64 %indvars.iv114, %26, !dbg !740
  %arrayidx58 = getelementptr inbounds i32, i32* %DATA_x, i64 %29, !dbg !741
  store i32 %28, i32* %arrayidx58, align 4, !dbg !742, !tbaa !118
  %indvars.iv.next115 = add nuw nsw i64 %indvars.iv114, 1, !dbg !743
  %exitcond117 = icmp eq i64 %indvars.iv.next115, 8, !dbg !744
  br i1 %exitcond117, label %30, label %27, !dbg !735, !llvm.loop !745

; <label>:30:                                     ; preds = %27
  %indvars.iv.next119 = add nuw nsw i64 %indvars.iv118, 1, !dbg !747
  %exitcond122 = icmp eq i64 %indvars.iv.next119, 64, !dbg !748
  br i1 %exitcond122, label %31, label %1, !dbg !712, !llvm.loop !749

; <label>:31:                                     ; preds = %30
  ret void, !dbg !751
}

; Function Attrs: noinline nounwind uwtable
define void @step9(i32* nocapture readnone %work_x, i32* nocapture readnone %work_y, i32* nocapture readnone %DATA_x, i32* nocapture readonly %DATA_y, i32* nocapture readnone %data_x, i32* nocapture %data_y, i32* nocapture %smem, i32* nocapture readonly %reversed, float* nocapture readnone %sin_64, float* nocapture readnone %cos_64, float* nocapture readnone %sin_512, float* nocapture readnone %cos_512) local_unnamed_addr #0 !dbg !752 {
  call void @llvm.dbg.value(metadata i32* %work_x, metadata !754, metadata !DIExpression()), !dbg !772
  call void @llvm.dbg.value(metadata i32* %work_y, metadata !755, metadata !DIExpression()), !dbg !773
  call void @llvm.dbg.value(metadata i32* %DATA_x, metadata !756, metadata !DIExpression()), !dbg !774
  call void @llvm.dbg.value(metadata i32* %DATA_y, metadata !757, metadata !DIExpression()), !dbg !775
  call void @llvm.dbg.value(metadata i32* %data_x, metadata !758, metadata !DIExpression()), !dbg !776
  call void @llvm.dbg.value(metadata i32* %data_y, metadata !759, metadata !DIExpression()), !dbg !777
  call void @llvm.dbg.value(metadata i32* %smem, metadata !760, metadata !DIExpression()), !dbg !778
  call void @llvm.dbg.value(metadata i32* %reversed, metadata !761, metadata !DIExpression()), !dbg !779
  call void @llvm.dbg.value(metadata float* %sin_64, metadata !762, metadata !DIExpression()), !dbg !780
  call void @llvm.dbg.value(metadata float* %cos_64, metadata !763, metadata !DIExpression()), !dbg !781
  call void @llvm.dbg.value(metadata float* %sin_512, metadata !764, metadata !DIExpression()), !dbg !782
  call void @llvm.dbg.value(metadata float* %cos_512, metadata !765, metadata !DIExpression()), !dbg !783
  call void @llvm.dbg.value(metadata i32 64, metadata !771, metadata !DIExpression()), !dbg !784
  call void @llvm.dbg.value(metadata i32 0, metadata !766, metadata !DIExpression()), !dbg !785
  %arrayidx12 = getelementptr inbounds i32, i32* %reversed, i64 1
  %arrayidx20 = getelementptr inbounds i32, i32* %reversed, i64 2
  %arrayidx28 = getelementptr inbounds i32, i32* %reversed, i64 3
  %arrayidx36 = getelementptr inbounds i32, i32* %reversed, i64 4
  %arrayidx44 = getelementptr inbounds i32, i32* %reversed, i64 5
  %arrayidx52 = getelementptr inbounds i32, i32* %reversed, i64 6
  %arrayidx60 = getelementptr inbounds i32, i32* %reversed, i64 7
  br label %1, !dbg !786

; <label>:1:                                      ; preds = %6, %0
  %indvars.iv121 = phi i64 [ 0, %0 ], [ %indvars.iv.next122, %6 ]
  call void @llvm.dbg.value(metadata i32 0, metadata !769, metadata !DIExpression()), !dbg !788
  call void @llvm.dbg.value(metadata i64 %indvars.iv121, metadata !766, metadata !DIExpression()), !dbg !785
  %2 = shl i64 %indvars.iv121, 3
  br label %3, !dbg !789

; <label>:3:                                      ; preds = %3, %1
  %indvars.iv = phi i64 [ 0, %1 ], [ %indvars.iv.next, %3 ]
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !769, metadata !DIExpression()), !dbg !788
  %4 = add nuw nsw i64 %indvars.iv, %2, !dbg !793
  %arrayidx = getelementptr inbounds i32, i32* %DATA_y, i64 %4, !dbg !796
  %5 = load i32, i32* %arrayidx, align 4, !dbg !796, !tbaa !118
  %arrayidx3 = getelementptr inbounds i32, i32* %data_y, i64 %indvars.iv, !dbg !797
  store i32 %5, i32* %arrayidx3, align 4, !dbg !798, !tbaa !118
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !799
  %exitcond = icmp eq i64 %indvars.iv.next, 8, !dbg !800
  br i1 %exitcond, label %6, label %3, !dbg !789, !llvm.loop !801

; <label>:6:                                      ; preds = %3
  %7 = trunc i64 %indvars.iv121 to i32, !dbg !803
  %8 = and i32 %7, 2147483640, !dbg !803
  %9 = trunc i64 %indvars.iv121 to i32, !dbg !805
  %and = and i32 %9, 7, !dbg !805
  call void @llvm.dbg.value(metadata i32 %and, metadata !768, metadata !DIExpression()), !dbg !806
  %10 = load i32, i32* %reversed, align 4, !dbg !803, !tbaa !118
  %idxprom5 = sext i32 %10 to i64, !dbg !803
  %arrayidx6 = getelementptr inbounds i32, i32* %data_y, i64 %idxprom5, !dbg !803
  %11 = load i32, i32* %arrayidx6, align 4, !dbg !803, !tbaa !118
  %arrayidx11 = getelementptr inbounds i32, i32* %smem, i64 %indvars.iv121, !dbg !803
  store i32 %11, i32* %arrayidx11, align 4, !dbg !803, !tbaa !118
  %12 = load i32, i32* %arrayidx12, align 4, !dbg !803, !tbaa !118
  %idxprom13 = sext i32 %12 to i64, !dbg !803
  %arrayidx14 = getelementptr inbounds i32, i32* %data_y, i64 %idxprom13, !dbg !803
  %13 = load i32, i32* %arrayidx14, align 4, !dbg !803, !tbaa !118
  %add16 = add nuw nsw i32 %8, 72, !dbg !803
  %add17 = or i32 %add16, %and, !dbg !803
  %14 = zext i32 %add17 to i64, !dbg !803
  %arrayidx19 = getelementptr inbounds i32, i32* %smem, i64 %14, !dbg !803
  store i32 %13, i32* %arrayidx19, align 4, !dbg !803, !tbaa !118
  %15 = load i32, i32* %arrayidx20, align 4, !dbg !803, !tbaa !118
  %idxprom21 = sext i32 %15 to i64, !dbg !803
  %arrayidx22 = getelementptr inbounds i32, i32* %data_y, i64 %idxprom21, !dbg !803
  %16 = load i32, i32* %arrayidx22, align 4, !dbg !803, !tbaa !118
  %add24 = add nuw nsw i32 %8, 144, !dbg !803
  %add25 = or i32 %add24, %and, !dbg !803
  %17 = zext i32 %add25 to i64, !dbg !803
  %arrayidx27 = getelementptr inbounds i32, i32* %smem, i64 %17, !dbg !803
  store i32 %16, i32* %arrayidx27, align 4, !dbg !803, !tbaa !118
  %18 = load i32, i32* %arrayidx28, align 4, !dbg !803, !tbaa !118
  %idxprom29 = sext i32 %18 to i64, !dbg !803
  %arrayidx30 = getelementptr inbounds i32, i32* %data_y, i64 %idxprom29, !dbg !803
  %19 = load i32, i32* %arrayidx30, align 4, !dbg !803, !tbaa !118
  %add32 = add nuw nsw i32 %8, 216, !dbg !803
  %add33 = or i32 %add32, %and, !dbg !803
  %20 = zext i32 %add33 to i64, !dbg !803
  %arrayidx35 = getelementptr inbounds i32, i32* %smem, i64 %20, !dbg !803
  store i32 %19, i32* %arrayidx35, align 4, !dbg !803, !tbaa !118
  %21 = load i32, i32* %arrayidx36, align 4, !dbg !803, !tbaa !118
  %idxprom37 = sext i32 %21 to i64, !dbg !803
  %arrayidx38 = getelementptr inbounds i32, i32* %data_y, i64 %idxprom37, !dbg !803
  %22 = load i32, i32* %arrayidx38, align 4, !dbg !803, !tbaa !118
  %add40 = add nuw nsw i32 %8, 288, !dbg !803
  %add41 = or i32 %add40, %and, !dbg !803
  %23 = zext i32 %add41 to i64, !dbg !803
  %arrayidx43 = getelementptr inbounds i32, i32* %smem, i64 %23, !dbg !803
  store i32 %22, i32* %arrayidx43, align 4, !dbg !803, !tbaa !118
  %24 = load i32, i32* %arrayidx44, align 4, !dbg !803, !tbaa !118
  %idxprom45 = sext i32 %24 to i64, !dbg !803
  %arrayidx46 = getelementptr inbounds i32, i32* %data_y, i64 %idxprom45, !dbg !803
  %25 = load i32, i32* %arrayidx46, align 4, !dbg !803, !tbaa !118
  %add48 = add nuw nsw i32 %8, 360, !dbg !803
  %add49 = or i32 %add48, %and, !dbg !803
  %26 = zext i32 %add49 to i64, !dbg !803
  %arrayidx51 = getelementptr inbounds i32, i32* %smem, i64 %26, !dbg !803
  store i32 %25, i32* %arrayidx51, align 4, !dbg !803, !tbaa !118
  %27 = load i32, i32* %arrayidx52, align 4, !dbg !803, !tbaa !118
  %idxprom53 = sext i32 %27 to i64, !dbg !803
  %arrayidx54 = getelementptr inbounds i32, i32* %data_y, i64 %idxprom53, !dbg !803
  %28 = load i32, i32* %arrayidx54, align 4, !dbg !803, !tbaa !118
  %add56 = add nuw nsw i32 %8, 432, !dbg !803
  %add57 = or i32 %add56, %and, !dbg !803
  %29 = zext i32 %add57 to i64, !dbg !803
  %arrayidx59 = getelementptr inbounds i32, i32* %smem, i64 %29, !dbg !803
  store i32 %28, i32* %arrayidx59, align 4, !dbg !803, !tbaa !118
  %30 = load i32, i32* %arrayidx60, align 4, !dbg !803, !tbaa !118
  %idxprom61 = sext i32 %30 to i64, !dbg !803
  %arrayidx62 = getelementptr inbounds i32, i32* %data_y, i64 %idxprom61, !dbg !803
  %31 = load i32, i32* %arrayidx62, align 4, !dbg !803, !tbaa !118
  %add64 = add nuw nsw i32 %8, 504, !dbg !803
  %add65 = or i32 %add64, %and, !dbg !803
  %32 = zext i32 %add65 to i64, !dbg !803
  %arrayidx67 = getelementptr inbounds i32, i32* %smem, i64 %32, !dbg !803
  store i32 %31, i32* %arrayidx67, align 4, !dbg !803, !tbaa !118
  %indvars.iv.next122 = add nuw nsw i64 %indvars.iv121, 1, !dbg !807
  %exitcond124 = icmp eq i64 %indvars.iv.next122, 64, !dbg !808
  br i1 %exitcond124, label %33, label %1, !dbg !786, !llvm.loop !809

; <label>:33:                                     ; preds = %6
  ret void, !dbg !811
}

; Function Attrs: noinline nounwind uwtable
define void @step10(i32* nocapture readnone %work_x, i32* nocapture readnone %work_y, i32* nocapture readnone %DATA_x, i32* nocapture %DATA_y, i32* nocapture readnone %data_x, i32* nocapture %data_y, i32* nocapture readonly %smem, i32* nocapture readnone %reversed, float* nocapture readnone %sin_64, float* nocapture readnone %cos_64, float* nocapture readnone %sin_512, float* nocapture readnone %cos_512) local_unnamed_addr #0 !dbg !812 {
  call void @llvm.dbg.value(metadata i32* %work_x, metadata !814, metadata !DIExpression()), !dbg !832
  call void @llvm.dbg.value(metadata i32* %work_y, metadata !815, metadata !DIExpression()), !dbg !833
  call void @llvm.dbg.value(metadata i32* %DATA_x, metadata !816, metadata !DIExpression()), !dbg !834
  call void @llvm.dbg.value(metadata i32* %DATA_y, metadata !817, metadata !DIExpression()), !dbg !835
  call void @llvm.dbg.value(metadata i32* %data_x, metadata !818, metadata !DIExpression()), !dbg !836
  call void @llvm.dbg.value(metadata i32* %data_y, metadata !819, metadata !DIExpression()), !dbg !837
  call void @llvm.dbg.value(metadata i32* %smem, metadata !820, metadata !DIExpression()), !dbg !838
  call void @llvm.dbg.value(metadata i32* %reversed, metadata !821, metadata !DIExpression()), !dbg !839
  call void @llvm.dbg.value(metadata float* %sin_64, metadata !822, metadata !DIExpression()), !dbg !840
  call void @llvm.dbg.value(metadata float* %cos_64, metadata !823, metadata !DIExpression()), !dbg !841
  call void @llvm.dbg.value(metadata float* %sin_512, metadata !824, metadata !DIExpression()), !dbg !842
  call void @llvm.dbg.value(metadata float* %cos_512, metadata !825, metadata !DIExpression()), !dbg !843
  call void @llvm.dbg.value(metadata i32 64, metadata !831, metadata !DIExpression()), !dbg !844
  call void @llvm.dbg.value(metadata i32 0, metadata !826, metadata !DIExpression()), !dbg !845
  %arrayidx15 = getelementptr inbounds i32, i32* %data_y, i64 1
  %arrayidx21 = getelementptr inbounds i32, i32* %data_y, i64 2
  %arrayidx27 = getelementptr inbounds i32, i32* %data_y, i64 3
  %arrayidx33 = getelementptr inbounds i32, i32* %data_y, i64 4
  %arrayidx39 = getelementptr inbounds i32, i32* %data_y, i64 5
  %arrayidx45 = getelementptr inbounds i32, i32* %data_y, i64 6
  %arrayidx51 = getelementptr inbounds i32, i32* %data_y, i64 7
  br label %1, !dbg !846

; <label>:1:                                      ; preds = %30, %0
  %indvars.iv118 = phi i64 [ 0, %0 ], [ %indvars.iv.next119, %30 ]
  call void @llvm.dbg.value(metadata i32 0, metadata !829, metadata !DIExpression()), !dbg !848
  call void @llvm.dbg.value(metadata i64 %indvars.iv118, metadata !826, metadata !DIExpression()), !dbg !845
  %2 = shl i64 %indvars.iv118, 3
  br label %3, !dbg !849

; <label>:3:                                      ; preds = %3, %1
  %indvars.iv = phi i64 [ 0, %1 ], [ %indvars.iv.next, %3 ]
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !829, metadata !DIExpression()), !dbg !848
  %4 = add nuw nsw i64 %indvars.iv, %2, !dbg !853
  %arrayidx = getelementptr inbounds i32, i32* %DATA_y, i64 %4, !dbg !856
  %5 = load i32, i32* %arrayidx, align 4, !dbg !856, !tbaa !118
  %arrayidx3 = getelementptr inbounds i32, i32* %data_y, i64 %indvars.iv, !dbg !857
  store i32 %5, i32* %arrayidx3, align 4, !dbg !858, !tbaa !118
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !859
  %exitcond = icmp eq i64 %indvars.iv.next, 8, !dbg !860
  br i1 %exitcond, label %6, label %3, !dbg !849, !llvm.loop !861

; <label>:6:                                      ; preds = %3
  %7 = trunc i64 %indvars.iv118 to i32, !dbg !863
  %8 = lshr i32 %7, 3, !dbg !863
  call void @llvm.dbg.value(metadata i32 %8, metadata !827, metadata !DIExpression()), !dbg !864
  %9 = trunc i64 %indvars.iv118 to i32, !dbg !865
  %and = and i32 %9, 7, !dbg !865
  call void @llvm.dbg.value(metadata i32 %and, metadata !828, metadata !DIExpression()), !dbg !866
  %mul4 = mul nsw i32 %8, 72, !dbg !867
  %add6 = or i32 %mul4, %and, !dbg !867
  %10 = zext i32 %add6 to i64, !dbg !867
  %arrayidx8 = getelementptr inbounds i32, i32* %smem, i64 %10, !dbg !867
  %11 = load i32, i32* %arrayidx8, align 4, !dbg !867, !tbaa !118
  store i32 %11, i32* %data_y, align 4, !dbg !867, !tbaa !118
  %add11 = add nuw nsw i32 %mul4, 8, !dbg !867
  %add12 = or i32 %add11, %and, !dbg !867
  %12 = zext i32 %add12 to i64, !dbg !867
  %arrayidx14 = getelementptr inbounds i32, i32* %smem, i64 %12, !dbg !867
  %13 = load i32, i32* %arrayidx14, align 4, !dbg !867, !tbaa !118
  store i32 %13, i32* %arrayidx15, align 4, !dbg !867, !tbaa !118
  %add17 = add nuw nsw i32 %mul4, 16, !dbg !867
  %add18 = or i32 %add17, %and, !dbg !867
  %14 = zext i32 %add18 to i64, !dbg !867
  %arrayidx20 = getelementptr inbounds i32, i32* %smem, i64 %14, !dbg !867
  %15 = load i32, i32* %arrayidx20, align 4, !dbg !867, !tbaa !118
  store i32 %15, i32* %arrayidx21, align 4, !dbg !867, !tbaa !118
  %add23 = add nuw nsw i32 %mul4, 24, !dbg !867
  %add24 = or i32 %add23, %and, !dbg !867
  %16 = zext i32 %add24 to i64, !dbg !867
  %arrayidx26 = getelementptr inbounds i32, i32* %smem, i64 %16, !dbg !867
  %17 = load i32, i32* %arrayidx26, align 4, !dbg !867, !tbaa !118
  store i32 %17, i32* %arrayidx27, align 4, !dbg !867, !tbaa !118
  %add29 = add nuw nsw i32 %mul4, 32, !dbg !867
  %add30 = or i32 %add29, %and, !dbg !867
  %18 = zext i32 %add30 to i64, !dbg !867
  %arrayidx32 = getelementptr inbounds i32, i32* %smem, i64 %18, !dbg !867
  %19 = load i32, i32* %arrayidx32, align 4, !dbg !867, !tbaa !118
  store i32 %19, i32* %arrayidx33, align 4, !dbg !867, !tbaa !118
  %add35 = add nuw nsw i32 %mul4, 40, !dbg !867
  %add36 = or i32 %add35, %and, !dbg !867
  %20 = zext i32 %add36 to i64, !dbg !867
  %arrayidx38 = getelementptr inbounds i32, i32* %smem, i64 %20, !dbg !867
  %21 = load i32, i32* %arrayidx38, align 4, !dbg !867, !tbaa !118
  store i32 %21, i32* %arrayidx39, align 4, !dbg !867, !tbaa !118
  %add41 = add nuw nsw i32 %mul4, 48, !dbg !867
  %add42 = or i32 %add41, %and, !dbg !867
  %22 = zext i32 %add42 to i64, !dbg !867
  %arrayidx44 = getelementptr inbounds i32, i32* %smem, i64 %22, !dbg !867
  %23 = load i32, i32* %arrayidx44, align 4, !dbg !867, !tbaa !118
  store i32 %23, i32* %arrayidx45, align 4, !dbg !867, !tbaa !118
  %add47 = add nuw nsw i32 %mul4, 56, !dbg !867
  %add48 = or i32 %add47, %and, !dbg !867
  %24 = zext i32 %add48 to i64, !dbg !867
  %arrayidx50 = getelementptr inbounds i32, i32* %smem, i64 %24, !dbg !867
  %25 = load i32, i32* %arrayidx50, align 4, !dbg !867, !tbaa !118
  store i32 %25, i32* %arrayidx51, align 4, !dbg !867, !tbaa !118
  call void @llvm.dbg.value(metadata i32 0, metadata !829, metadata !DIExpression()), !dbg !848
  %26 = shl i64 %indvars.iv118, 3
  br label %27, !dbg !869

; <label>:27:                                     ; preds = %27, %6
  %indvars.iv114 = phi i64 [ 0, %6 ], [ %indvars.iv.next115, %27 ]
  call void @llvm.dbg.value(metadata i64 %indvars.iv114, metadata !829, metadata !DIExpression()), !dbg !848
  %arrayidx54 = getelementptr inbounds i32, i32* %data_y, i64 %indvars.iv114, !dbg !871
  %28 = load i32, i32* %arrayidx54, align 4, !dbg !871, !tbaa !118
  %29 = add nuw nsw i64 %indvars.iv114, %26, !dbg !874
  %arrayidx58 = getelementptr inbounds i32, i32* %DATA_y, i64 %29, !dbg !875
  store i32 %28, i32* %arrayidx58, align 4, !dbg !876, !tbaa !118
  %indvars.iv.next115 = add nuw nsw i64 %indvars.iv114, 1, !dbg !877
  %exitcond117 = icmp eq i64 %indvars.iv.next115, 8, !dbg !878
  br i1 %exitcond117, label %30, label %27, !dbg !869, !llvm.loop !879

; <label>:30:                                     ; preds = %27
  %indvars.iv.next119 = add nuw nsw i64 %indvars.iv118, 1, !dbg !881
  %exitcond122 = icmp eq i64 %indvars.iv.next119, 64, !dbg !882
  br i1 %exitcond122, label %31, label %1, !dbg !846, !llvm.loop !883

; <label>:31:                                     ; preds = %30
  ret void, !dbg !885
}

; Function Attrs: noinline nounwind uwtable
define void @step11(i32* nocapture %work_x, i32* nocapture %work_y, i32* nocapture readonly %DATA_x, i32* nocapture readonly %DATA_y, i32* nocapture %data_x, i32* nocapture %data_y, i32* nocapture readnone %smem, i32* nocapture readonly %reversed, float* nocapture readnone %sin_64, float* nocapture readnone %cos_64, float* nocapture readnone %sin_512, float* nocapture readnone %cos_512) local_unnamed_addr #0 !dbg !886 {
  call void @llvm.dbg.value(metadata i32* %work_x, metadata !888, metadata !DIExpression()), !dbg !962
  call void @llvm.dbg.value(metadata i32* %work_y, metadata !889, metadata !DIExpression()), !dbg !963
  call void @llvm.dbg.value(metadata i32* %DATA_x, metadata !890, metadata !DIExpression()), !dbg !964
  call void @llvm.dbg.value(metadata i32* %DATA_y, metadata !891, metadata !DIExpression()), !dbg !965
  call void @llvm.dbg.value(metadata i32* %data_x, metadata !892, metadata !DIExpression()), !dbg !966
  call void @llvm.dbg.value(metadata i32* %data_y, metadata !893, metadata !DIExpression()), !dbg !967
  call void @llvm.dbg.value(metadata i32* %smem, metadata !894, metadata !DIExpression()), !dbg !968
  call void @llvm.dbg.value(metadata i32* %reversed, metadata !895, metadata !DIExpression()), !dbg !969
  call void @llvm.dbg.value(metadata float* %sin_64, metadata !896, metadata !DIExpression()), !dbg !970
  call void @llvm.dbg.value(metadata float* %cos_64, metadata !897, metadata !DIExpression()), !dbg !971
  call void @llvm.dbg.value(metadata float* %sin_512, metadata !898, metadata !DIExpression()), !dbg !972
  call void @llvm.dbg.value(metadata float* %cos_512, metadata !899, metadata !DIExpression()), !dbg !973
  call void @llvm.dbg.value(metadata i32 64, metadata !905, metadata !DIExpression()), !dbg !974
  call void @llvm.dbg.value(metadata i32 0, metadata !900, metadata !DIExpression()), !dbg !975
  %arrayidx12 = getelementptr inbounds i32, i32* %data_x, i64 4
  %arrayidx15 = getelementptr inbounds i32, i32* %data_y, i64 4
  %arrayidx24 = getelementptr inbounds i32, i32* %data_x, i64 1
  %arrayidx26 = getelementptr inbounds i32, i32* %data_y, i64 1
  %arrayidx27 = getelementptr inbounds i32, i32* %data_x, i64 5
  %arrayidx30 = getelementptr inbounds i32, i32* %data_y, i64 5
  %arrayidx40 = getelementptr inbounds i32, i32* %data_x, i64 2
  %arrayidx42 = getelementptr inbounds i32, i32* %data_y, i64 2
  %arrayidx43 = getelementptr inbounds i32, i32* %data_x, i64 6
  %arrayidx46 = getelementptr inbounds i32, i32* %data_y, i64 6
  %arrayidx56 = getelementptr inbounds i32, i32* %data_x, i64 3
  %arrayidx58 = getelementptr inbounds i32, i32* %data_y, i64 3
  %arrayidx59 = getelementptr inbounds i32, i32* %data_x, i64 7
  %arrayidx62 = getelementptr inbounds i32, i32* %data_y, i64 7
  br label %1, !dbg !976

; <label>:1:                                      ; preds = %98, %0
  %indvars.iv552 = phi i64 [ 0, %0 ], [ %indvars.iv.next553, %98 ]
  call void @llvm.dbg.value(metadata i32 0, metadata !903, metadata !DIExpression()), !dbg !977
  call void @llvm.dbg.value(metadata i64 %indvars.iv552, metadata !900, metadata !DIExpression()), !dbg !975
  %2 = shl i64 %indvars.iv552, 3
  br label %3, !dbg !978

; <label>:3:                                      ; preds = %3, %1
  %indvars.iv = phi i64 [ 0, %1 ], [ %indvars.iv.next, %3 ]
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !903, metadata !DIExpression()), !dbg !977
  %4 = add nuw nsw i64 %indvars.iv, %2, !dbg !980
  %arrayidx = getelementptr inbounds i32, i32* %DATA_x, i64 %4, !dbg !983
  %5 = load i32, i32* %arrayidx, align 4, !dbg !983, !tbaa !118
  %arrayidx3 = getelementptr inbounds i32, i32* %data_x, i64 %indvars.iv, !dbg !984
  store i32 %5, i32* %arrayidx3, align 4, !dbg !985, !tbaa !118
  %arrayidx7 = getelementptr inbounds i32, i32* %DATA_y, i64 %4, !dbg !986
  %6 = load i32, i32* %arrayidx7, align 4, !dbg !986, !tbaa !118
  %arrayidx9 = getelementptr inbounds i32, i32* %data_y, i64 %indvars.iv, !dbg !987
  store i32 %6, i32* %arrayidx9, align 4, !dbg !988, !tbaa !118
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !989
  %exitcond = icmp eq i64 %indvars.iv.next, 8, !dbg !990
  br i1 %exitcond, label %7, label %3, !dbg !978, !llvm.loop !991

; <label>:7:                                      ; preds = %3
  call void @llvm.dbg.value(metadata i32 1, metadata !906, metadata !DIExpression()), !dbg !993
  call void @llvm.dbg.value(metadata i32 -1, metadata !913, metadata !DIExpression()), !dbg !993
  call void @llvm.dbg.value(metadata i32 0, metadata !911, metadata !DIExpression()), !dbg !993
  call void @llvm.dbg.value(metadata i32 -1, metadata !914, metadata !DIExpression()), !dbg !993
  call void @llvm.dbg.value(metadata i32 -1, metadata !912, metadata !DIExpression()), !dbg !993
  call void @llvm.dbg.value(metadata i32 -1, metadata !915, metadata !DIExpression()), !dbg !993
  %8 = load i32, i32* %data_x, align 4, !dbg !994, !tbaa !118
  call void @llvm.dbg.value(metadata i32 %8, metadata !918, metadata !DIExpression()), !dbg !994
  %9 = load i32, i32* %data_y, align 4, !dbg !994, !tbaa !118
  call void @llvm.dbg.value(metadata i32 %9, metadata !920, metadata !DIExpression()), !dbg !994
  %10 = load i32, i32* %arrayidx12, align 4, !dbg !994, !tbaa !118
  %add13 = add nsw i32 %10, %8, !dbg !994
  store i32 %add13, i32* %data_x, align 4, !dbg !994, !tbaa !118
  %11 = load i32, i32* %arrayidx15, align 4, !dbg !994, !tbaa !118
  %add16 = add nsw i32 %11, %9, !dbg !994
  store i32 %add16, i32* %data_y, align 4, !dbg !994, !tbaa !118
  %12 = load i32, i32* %arrayidx12, align 4, !dbg !994, !tbaa !118
  %sub = sub nsw i32 %8, %12, !dbg !994
  store i32 %sub, i32* %arrayidx12, align 4, !dbg !994, !tbaa !118
  %13 = load i32, i32* %arrayidx15, align 4, !dbg !994, !tbaa !118
  %sub21 = sub nsw i32 %9, %13, !dbg !994
  store i32 %sub21, i32* %arrayidx15, align 4, !dbg !994, !tbaa !118
  %14 = load i32, i32* %arrayidx24, align 4, !dbg !995, !tbaa !118
  call void @llvm.dbg.value(metadata i32 %14, metadata !921, metadata !DIExpression()), !dbg !995
  %15 = load i32, i32* %arrayidx26, align 4, !dbg !995, !tbaa !118
  call void @llvm.dbg.value(metadata i32 %15, metadata !923, metadata !DIExpression()), !dbg !995
  %16 = load i32, i32* %arrayidx27, align 4, !dbg !995, !tbaa !118
  %add28 = add nsw i32 %16, %14, !dbg !995
  store i32 %add28, i32* %arrayidx24, align 4, !dbg !995, !tbaa !118
  %17 = load i32, i32* %arrayidx30, align 4, !dbg !995, !tbaa !118
  %add31 = add nsw i32 %17, %15, !dbg !995
  store i32 %add31, i32* %arrayidx26, align 4, !dbg !995, !tbaa !118
  %18 = load i32, i32* %arrayidx27, align 4, !dbg !995, !tbaa !118
  %sub34 = sub nsw i32 %14, %18, !dbg !995
  store i32 %sub34, i32* %arrayidx27, align 4, !dbg !995, !tbaa !118
  %19 = load i32, i32* %arrayidx30, align 4, !dbg !995, !tbaa !118
  %sub37 = sub nsw i32 %15, %19, !dbg !995
  store i32 %sub37, i32* %arrayidx30, align 4, !dbg !995, !tbaa !118
  %20 = load i32, i32* %arrayidx40, align 4, !dbg !996, !tbaa !118
  call void @llvm.dbg.value(metadata i32 %20, metadata !924, metadata !DIExpression()), !dbg !996
  %21 = load i32, i32* %arrayidx42, align 4, !dbg !996, !tbaa !118
  call void @llvm.dbg.value(metadata i32 %21, metadata !926, metadata !DIExpression()), !dbg !996
  %22 = load i32, i32* %arrayidx43, align 4, !dbg !996, !tbaa !118
  %add44 = add nsw i32 %22, %20, !dbg !996
  store i32 %add44, i32* %arrayidx40, align 4, !dbg !996, !tbaa !118
  %23 = load i32, i32* %arrayidx46, align 4, !dbg !996, !tbaa !118
  %add47 = add nsw i32 %23, %21, !dbg !996
  store i32 %add47, i32* %arrayidx42, align 4, !dbg !996, !tbaa !118
  %24 = load i32, i32* %arrayidx43, align 4, !dbg !996, !tbaa !118
  %sub50 = sub nsw i32 %20, %24, !dbg !996
  store i32 %sub50, i32* %arrayidx43, align 4, !dbg !996, !tbaa !118
  %25 = load i32, i32* %arrayidx46, align 4, !dbg !996, !tbaa !118
  %sub53 = sub nsw i32 %21, %25, !dbg !996
  store i32 %sub53, i32* %arrayidx46, align 4, !dbg !996, !tbaa !118
  %26 = load i32, i32* %arrayidx56, align 4, !dbg !997, !tbaa !118
  call void @llvm.dbg.value(metadata i32 %26, metadata !927, metadata !DIExpression()), !dbg !997
  %27 = load i32, i32* %arrayidx58, align 4, !dbg !997, !tbaa !118
  call void @llvm.dbg.value(metadata i32 %27, metadata !929, metadata !DIExpression()), !dbg !997
  %28 = load i32, i32* %arrayidx59, align 4, !dbg !997, !tbaa !118
  %add60 = add nsw i32 %28, %26, !dbg !997
  store i32 %add60, i32* %arrayidx56, align 4, !dbg !997, !tbaa !118
  %29 = load i32, i32* %arrayidx62, align 4, !dbg !997, !tbaa !118
  %add63 = add nsw i32 %29, %27, !dbg !997
  store i32 %add63, i32* %arrayidx58, align 4, !dbg !997, !tbaa !118
  %30 = load i32, i32* %arrayidx59, align 4, !dbg !997, !tbaa !118
  %sub66 = sub nsw i32 %26, %30, !dbg !997
  store i32 %sub66, i32* %arrayidx59, align 4, !dbg !997, !tbaa !118
  %31 = load i32, i32* %arrayidx62, align 4, !dbg !997, !tbaa !118
  %sub69 = sub nsw i32 %27, %31, !dbg !997
  store i32 %sub69, i32* %arrayidx62, align 4, !dbg !997, !tbaa !118
  %32 = load i32, i32* %arrayidx27, align 4, !dbg !993, !tbaa !118
  call void @llvm.dbg.value(metadata i32 %32, metadata !916, metadata !DIExpression()), !dbg !993
  %33 = load i32, i32* %arrayidx30, align 4, !dbg !993, !tbaa !118
  %sub76 = add nsw i32 %33, %32, !dbg !993
  %conv = sitofp i32 %sub76 to float, !dbg !993
  %mul77 = fmul float %conv, 0x3FE6A09E60000000, !dbg !993
  %conv78 = fptosi float %mul77 to i32, !dbg !993
  store i32 %conv78, i32* %arrayidx27, align 4, !dbg !993, !tbaa !118
  %34 = load i32, i32* %arrayidx30, align 4, !dbg !993, !tbaa !118
  %add83 = sub i32 %34, %32, !dbg !993
  %conv84 = sitofp i32 %add83 to float, !dbg !993
  %mul85 = fmul float %conv84, 0x3FE6A09E60000000, !dbg !993
  %conv86 = fptosi float %mul85 to i32, !dbg !993
  store i32 %conv86, i32* %arrayidx30, align 4, !dbg !993, !tbaa !118
  %35 = load i32, i32* %arrayidx43, align 4, !dbg !993, !tbaa !118
  call void @llvm.dbg.value(metadata i32 %35, metadata !916, metadata !DIExpression()), !dbg !993
  %36 = load i32, i32* %arrayidx46, align 4, !dbg !993, !tbaa !118
  store i32 %36, i32* %arrayidx43, align 4, !dbg !993, !tbaa !118
  %mul95 = sub nsw i32 0, %35, !dbg !993
  store i32 %mul95, i32* %arrayidx46, align 4, !dbg !993, !tbaa !118
  %37 = load i32, i32* %arrayidx59, align 4, !dbg !993, !tbaa !118
  call void @llvm.dbg.value(metadata i32 %37, metadata !916, metadata !DIExpression()), !dbg !993
  %38 = load i32, i32* %arrayidx62, align 4, !dbg !993, !tbaa !118
  %sub105 = sub i32 %38, %37, !dbg !993
  %conv106 = sitofp i32 %sub105 to float, !dbg !993
  %mul107 = fmul float %conv106, 0x3FE6A09E60000000, !dbg !993
  %conv108 = fptosi float %mul107 to i32, !dbg !993
  store i32 %conv108, i32* %arrayidx59, align 4, !dbg !993, !tbaa !118
  %39 = load i32, i32* %arrayidx62, align 4, !dbg !993, !tbaa !118
  %40 = add i32 %37, %39, !dbg !993
  %add113 = sub i32 0, %40, !dbg !993
  %conv114 = sitofp i32 %add113 to float, !dbg !993
  %mul115 = fmul float %conv114, 0x3FE6A09E60000000, !dbg !993
  %conv116 = fptosi float %mul115 to i32, !dbg !993
  store i32 %conv116, i32* %arrayidx62, align 4, !dbg !993, !tbaa !118
  call void @llvm.dbg.value(metadata i32 0, metadata !930, metadata !DIExpression()), !dbg !998
  call void @llvm.dbg.value(metadata i32 -1, metadata !932, metadata !DIExpression()), !dbg !998
  %41 = load i32, i32* %data_x, align 4, !dbg !999, !tbaa !118
  call void @llvm.dbg.value(metadata i32 %41, metadata !934, metadata !DIExpression()), !dbg !999
  %42 = load i32, i32* %data_y, align 4, !dbg !999, !tbaa !118
  call void @llvm.dbg.value(metadata i32 %42, metadata !936, metadata !DIExpression()), !dbg !999
  %43 = load i32, i32* %arrayidx40, align 4, !dbg !999, !tbaa !118
  %add123 = add nsw i32 %43, %41, !dbg !999
  store i32 %add123, i32* %data_x, align 4, !dbg !999, !tbaa !118
  %44 = load i32, i32* %arrayidx42, align 4, !dbg !999, !tbaa !118
  %add126 = add nsw i32 %44, %42, !dbg !999
  store i32 %add126, i32* %data_y, align 4, !dbg !999, !tbaa !118
  %45 = load i32, i32* %arrayidx40, align 4, !dbg !999, !tbaa !118
  %sub129 = sub nsw i32 %41, %45, !dbg !999
  store i32 %sub129, i32* %arrayidx40, align 4, !dbg !999, !tbaa !118
  %46 = load i32, i32* %arrayidx42, align 4, !dbg !999, !tbaa !118
  %sub132 = sub nsw i32 %42, %46, !dbg !999
  store i32 %sub132, i32* %arrayidx42, align 4, !dbg !999, !tbaa !118
  %47 = load i32, i32* %arrayidx24, align 4, !dbg !1000, !tbaa !118
  call void @llvm.dbg.value(metadata i32 %47, metadata !937, metadata !DIExpression()), !dbg !1000
  %48 = load i32, i32* %arrayidx26, align 4, !dbg !1000, !tbaa !118
  call void @llvm.dbg.value(metadata i32 %48, metadata !939, metadata !DIExpression()), !dbg !1000
  %49 = load i32, i32* %arrayidx56, align 4, !dbg !1000, !tbaa !118
  %add139 = add nsw i32 %49, %47, !dbg !1000
  store i32 %add139, i32* %arrayidx24, align 4, !dbg !1000, !tbaa !118
  %50 = load i32, i32* %arrayidx58, align 4, !dbg !1000, !tbaa !118
  %add142 = add nsw i32 %50, %48, !dbg !1000
  store i32 %add142, i32* %arrayidx26, align 4, !dbg !1000, !tbaa !118
  %51 = load i32, i32* %arrayidx56, align 4, !dbg !1000, !tbaa !118
  %sub145 = sub nsw i32 %47, %51, !dbg !1000
  store i32 %sub145, i32* %arrayidx56, align 4, !dbg !1000, !tbaa !118
  %52 = load i32, i32* %arrayidx58, align 4, !dbg !1000, !tbaa !118
  %sub148 = sub nsw i32 %48, %52, !dbg !1000
  store i32 %sub148, i32* %arrayidx58, align 4, !dbg !1000, !tbaa !118
  %53 = load i32, i32* %arrayidx56, align 4, !dbg !998, !tbaa !118
  call void @llvm.dbg.value(metadata i32 %53, metadata !933, metadata !DIExpression()), !dbg !998
  store i32 %sub148, i32* %arrayidx56, align 4, !dbg !998, !tbaa !118
  %mul157 = sub nsw i32 0, %53, !dbg !998
  store i32 %mul157, i32* %arrayidx58, align 4, !dbg !998, !tbaa !118
  %54 = load i32, i32* %data_x, align 4, !dbg !1001, !tbaa !118
  call void @llvm.dbg.value(metadata i32 %54, metadata !940, metadata !DIExpression()), !dbg !1001
  %55 = load i32, i32* %data_y, align 4, !dbg !1001, !tbaa !118
  call void @llvm.dbg.value(metadata i32 %55, metadata !942, metadata !DIExpression()), !dbg !1001
  %56 = load i32, i32* %arrayidx24, align 4, !dbg !1001, !tbaa !118
  %add167 = add nsw i32 %56, %54, !dbg !1001
  store i32 %add167, i32* %data_x, align 4, !dbg !1001, !tbaa !118
  %57 = load i32, i32* %arrayidx26, align 4, !dbg !1001, !tbaa !118
  %add170 = add nsw i32 %57, %55, !dbg !1001
  store i32 %add170, i32* %data_y, align 4, !dbg !1001, !tbaa !118
  %58 = load i32, i32* %arrayidx24, align 4, !dbg !1001, !tbaa !118
  %sub173 = sub nsw i32 %54, %58, !dbg !1001
  store i32 %sub173, i32* %arrayidx24, align 4, !dbg !1001, !tbaa !118
  %59 = load i32, i32* %arrayidx26, align 4, !dbg !1001, !tbaa !118
  %sub176 = sub nsw i32 %55, %59, !dbg !1001
  store i32 %sub176, i32* %arrayidx26, align 4, !dbg !1001, !tbaa !118
  %60 = load i32, i32* %arrayidx40, align 4, !dbg !1002, !tbaa !118
  call void @llvm.dbg.value(metadata i32 %60, metadata !943, metadata !DIExpression()), !dbg !1002
  %61 = load i32, i32* %arrayidx42, align 4, !dbg !1002, !tbaa !118
  call void @llvm.dbg.value(metadata i32 %61, metadata !945, metadata !DIExpression()), !dbg !1002
  %62 = load i32, i32* %arrayidx56, align 4, !dbg !1002, !tbaa !118
  %add183 = add nsw i32 %62, %60, !dbg !1002
  store i32 %add183, i32* %arrayidx40, align 4, !dbg !1002, !tbaa !118
  %63 = load i32, i32* %arrayidx58, align 4, !dbg !1002, !tbaa !118
  %add186 = add nsw i32 %63, %61, !dbg !1002
  store i32 %add186, i32* %arrayidx42, align 4, !dbg !1002, !tbaa !118
  %64 = load i32, i32* %arrayidx56, align 4, !dbg !1002, !tbaa !118
  %sub189 = sub nsw i32 %60, %64, !dbg !1002
  store i32 %sub189, i32* %arrayidx56, align 4, !dbg !1002, !tbaa !118
  %65 = load i32, i32* %arrayidx58, align 4, !dbg !1002, !tbaa !118
  %sub192 = sub nsw i32 %61, %65, !dbg !1002
  store i32 %sub192, i32* %arrayidx58, align 4, !dbg !1002, !tbaa !118
  call void @llvm.dbg.value(metadata i32 0, metadata !946, metadata !DIExpression()), !dbg !1003
  call void @llvm.dbg.value(metadata i32 -1, metadata !948, metadata !DIExpression()), !dbg !1003
  %66 = load i32, i32* %arrayidx12, align 4, !dbg !1004, !tbaa !118
  call void @llvm.dbg.value(metadata i32 %66, metadata !950, metadata !DIExpression()), !dbg !1004
  %67 = load i32, i32* %arrayidx15, align 4, !dbg !1004, !tbaa !118
  call void @llvm.dbg.value(metadata i32 %67, metadata !952, metadata !DIExpression()), !dbg !1004
  %68 = load i32, i32* %arrayidx43, align 4, !dbg !1004, !tbaa !118
  %add202 = add nsw i32 %68, %66, !dbg !1004
  store i32 %add202, i32* %arrayidx12, align 4, !dbg !1004, !tbaa !118
  %69 = load i32, i32* %arrayidx46, align 4, !dbg !1004, !tbaa !118
  %add205 = add nsw i32 %69, %67, !dbg !1004
  store i32 %add205, i32* %arrayidx15, align 4, !dbg !1004, !tbaa !118
  %70 = load i32, i32* %arrayidx43, align 4, !dbg !1004, !tbaa !118
  %sub208 = sub nsw i32 %66, %70, !dbg !1004
  store i32 %sub208, i32* %arrayidx43, align 4, !dbg !1004, !tbaa !118
  %71 = load i32, i32* %arrayidx46, align 4, !dbg !1004, !tbaa !118
  %sub211 = sub nsw i32 %67, %71, !dbg !1004
  store i32 %sub211, i32* %arrayidx46, align 4, !dbg !1004, !tbaa !118
  %72 = load i32, i32* %arrayidx27, align 4, !dbg !1005, !tbaa !118
  call void @llvm.dbg.value(metadata i32 %72, metadata !953, metadata !DIExpression()), !dbg !1005
  %73 = load i32, i32* %arrayidx30, align 4, !dbg !1005, !tbaa !118
  call void @llvm.dbg.value(metadata i32 %73, metadata !955, metadata !DIExpression()), !dbg !1005
  %74 = load i32, i32* %arrayidx59, align 4, !dbg !1005, !tbaa !118
  %add218 = add nsw i32 %74, %72, !dbg !1005
  store i32 %add218, i32* %arrayidx27, align 4, !dbg !1005, !tbaa !118
  %75 = load i32, i32* %arrayidx62, align 4, !dbg !1005, !tbaa !118
  %add221 = add nsw i32 %75, %73, !dbg !1005
  store i32 %add221, i32* %arrayidx30, align 4, !dbg !1005, !tbaa !118
  %76 = load i32, i32* %arrayidx59, align 4, !dbg !1005, !tbaa !118
  %sub224 = sub nsw i32 %72, %76, !dbg !1005
  store i32 %sub224, i32* %arrayidx59, align 4, !dbg !1005, !tbaa !118
  %77 = load i32, i32* %arrayidx62, align 4, !dbg !1005, !tbaa !118
  %sub227 = sub nsw i32 %73, %77, !dbg !1005
  store i32 %sub227, i32* %arrayidx62, align 4, !dbg !1005, !tbaa !118
  %78 = load i32, i32* %arrayidx59, align 4, !dbg !1003, !tbaa !118
  call void @llvm.dbg.value(metadata i32 %78, metadata !949, metadata !DIExpression()), !dbg !1003
  store i32 %sub227, i32* %arrayidx59, align 4, !dbg !1003, !tbaa !118
  %mul236 = sub nsw i32 0, %78, !dbg !1003
  store i32 %mul236, i32* %arrayidx62, align 4, !dbg !1003, !tbaa !118
  %79 = load i32, i32* %arrayidx12, align 4, !dbg !1006, !tbaa !118
  call void @llvm.dbg.value(metadata i32 %79, metadata !956, metadata !DIExpression()), !dbg !1006
  %80 = load i32, i32* %arrayidx15, align 4, !dbg !1006, !tbaa !118
  call void @llvm.dbg.value(metadata i32 %80, metadata !958, metadata !DIExpression()), !dbg !1006
  %81 = load i32, i32* %arrayidx27, align 4, !dbg !1006, !tbaa !118
  %add246 = add nsw i32 %81, %79, !dbg !1006
  store i32 %add246, i32* %arrayidx12, align 4, !dbg !1006, !tbaa !118
  %82 = load i32, i32* %arrayidx30, align 4, !dbg !1006, !tbaa !118
  %add249 = add nsw i32 %82, %80, !dbg !1006
  store i32 %add249, i32* %arrayidx15, align 4, !dbg !1006, !tbaa !118
  %83 = load i32, i32* %arrayidx27, align 4, !dbg !1006, !tbaa !118
  %sub252 = sub nsw i32 %79, %83, !dbg !1006
  store i32 %sub252, i32* %arrayidx27, align 4, !dbg !1006, !tbaa !118
  %84 = load i32, i32* %arrayidx30, align 4, !dbg !1006, !tbaa !118
  %sub255 = sub nsw i32 %80, %84, !dbg !1006
  store i32 %sub255, i32* %arrayidx30, align 4, !dbg !1006, !tbaa !118
  %85 = load i32, i32* %arrayidx43, align 4, !dbg !1007, !tbaa !118
  call void @llvm.dbg.value(metadata i32 %85, metadata !959, metadata !DIExpression()), !dbg !1007
  %86 = load i32, i32* %arrayidx46, align 4, !dbg !1007, !tbaa !118
  call void @llvm.dbg.value(metadata i32 %86, metadata !961, metadata !DIExpression()), !dbg !1007
  %87 = load i32, i32* %arrayidx59, align 4, !dbg !1007, !tbaa !118
  %add262 = add nsw i32 %87, %85, !dbg !1007
  store i32 %add262, i32* %arrayidx43, align 4, !dbg !1007, !tbaa !118
  %88 = load i32, i32* %arrayidx62, align 4, !dbg !1007, !tbaa !118
  %add265 = add nsw i32 %88, %86, !dbg !1007
  store i32 %add265, i32* %arrayidx46, align 4, !dbg !1007, !tbaa !118
  %89 = load i32, i32* %arrayidx59, align 4, !dbg !1007, !tbaa !118
  %sub268 = sub nsw i32 %85, %89, !dbg !1007
  store i32 %sub268, i32* %arrayidx59, align 4, !dbg !1007, !tbaa !118
  %90 = load i32, i32* %arrayidx62, align 4, !dbg !1007, !tbaa !118
  %sub271 = sub nsw i32 %86, %90, !dbg !1007
  store i32 %sub271, i32* %arrayidx62, align 4, !dbg !1007, !tbaa !118
  call void @llvm.dbg.value(metadata i32 0, metadata !903, metadata !DIExpression()), !dbg !977
  br label %91, !dbg !1008

; <label>:91:                                     ; preds = %91, %7
  %indvars.iv547 = phi i64 [ 0, %7 ], [ %indvars.iv.next548, %91 ]
  call void @llvm.dbg.value(metadata i64 %indvars.iv547, metadata !903, metadata !DIExpression()), !dbg !977
  %arrayidx276 = getelementptr inbounds i32, i32* %reversed, i64 %indvars.iv547, !dbg !1010
  %92 = load i32, i32* %arrayidx276, align 4, !dbg !1010, !tbaa !118
  %idxprom277 = sext i32 %92 to i64, !dbg !1013
  %arrayidx278 = getelementptr inbounds i32, i32* %data_x, i64 %idxprom277, !dbg !1013
  %93 = load i32, i32* %arrayidx278, align 4, !dbg !1013, !tbaa !118
  %94 = shl i64 %indvars.iv547, 6, !dbg !1014
  %95 = add nuw nsw i64 %94, %indvars.iv552, !dbg !1015
  %arrayidx282 = getelementptr inbounds i32, i32* %work_x, i64 %95, !dbg !1016
  store i32 %93, i32* %arrayidx282, align 4, !dbg !1017, !tbaa !118
  %96 = load i32, i32* %arrayidx276, align 4, !dbg !1018, !tbaa !118
  %idxprom285 = sext i32 %96 to i64, !dbg !1019
  %arrayidx286 = getelementptr inbounds i32, i32* %data_y, i64 %idxprom285, !dbg !1019
  %97 = load i32, i32* %arrayidx286, align 4, !dbg !1019, !tbaa !118
  %arrayidx290 = getelementptr inbounds i32, i32* %work_y, i64 %95, !dbg !1020
  store i32 %97, i32* %arrayidx290, align 4, !dbg !1021, !tbaa !118
  %indvars.iv.next548 = add nuw nsw i64 %indvars.iv547, 1, !dbg !1022
  %exitcond551 = icmp eq i64 %indvars.iv.next548, 8, !dbg !1023
  br i1 %exitcond551, label %98, label %91, !dbg !1008, !llvm.loop !1024

; <label>:98:                                     ; preds = %91
  %indvars.iv.next553 = add nuw nsw i64 %indvars.iv552, 1, !dbg !1026
  %exitcond555 = icmp eq i64 %indvars.iv.next553, 64, !dbg !1027
  br i1 %exitcond555, label %99, label %1, !dbg !976, !llvm.loop !1028

; <label>:99:                                     ; preds = %98
  ret void, !dbg !1030
}

; Function Attrs: noinline nounwind uwtable
define void @fft1D_512(i32* nocapture %work_x, i32* nocapture %work_y, i32* nocapture %DATA_x, i32* nocapture %DATA_y, i32* nocapture %data_x, i32* nocapture %data_y, i32* nocapture %smem, i32* nocapture readonly %reversed, float* nocapture readonly %sin_64, float* nocapture readonly %cos_64, float* nocapture readonly %sin_512, float* nocapture readonly %cos_512) local_unnamed_addr #0 !dbg !1031 {
  call void @llvm.dbg.value(metadata i32* %work_x, metadata !1033, metadata !DIExpression()), !dbg !1051
  call void @llvm.dbg.value(metadata i32* %work_y, metadata !1034, metadata !DIExpression()), !dbg !1052
  call void @llvm.dbg.value(metadata i32* %DATA_x, metadata !1035, metadata !DIExpression()), !dbg !1053
  call void @llvm.dbg.value(metadata i32* %DATA_y, metadata !1036, metadata !DIExpression()), !dbg !1054
  call void @llvm.dbg.value(metadata i32* %data_x, metadata !1037, metadata !DIExpression()), !dbg !1055
  call void @llvm.dbg.value(metadata i32* %data_y, metadata !1038, metadata !DIExpression()), !dbg !1056
  call void @llvm.dbg.value(metadata i32* %smem, metadata !1039, metadata !DIExpression()), !dbg !1057
  call void @llvm.dbg.value(metadata i32* %reversed, metadata !1040, metadata !DIExpression()), !dbg !1058
  call void @llvm.dbg.value(metadata float* %sin_64, metadata !1041, metadata !DIExpression()), !dbg !1059
  call void @llvm.dbg.value(metadata float* %cos_64, metadata !1042, metadata !DIExpression()), !dbg !1060
  call void @llvm.dbg.value(metadata float* %sin_512, metadata !1043, metadata !DIExpression()), !dbg !1061
  call void @llvm.dbg.value(metadata float* %cos_512, metadata !1044, metadata !DIExpression()), !dbg !1062
  call void @llvm.dbg.value(metadata i32 64, metadata !1050, metadata !DIExpression()), !dbg !1063
  tail call void @step1(i32* %work_x, i32* %work_y, i32* %DATA_x, i32* %DATA_y, i32* %data_x, i32* %data_y, i32* undef, i32* undef, float* undef, float* undef, float* %sin_512, float* %cos_512) #4, !dbg !1064
  tail call void @step2(i32* undef, i32* undef, i32* %DATA_x, i32* undef, i32* %data_x, i32* undef, i32* %smem, i32* %reversed, float* undef, float* undef, float* undef, float* undef) #4, !dbg !1065
  tail call void @step3(i32* undef, i32* undef, i32* %DATA_x, i32* undef, i32* %data_x, i32* undef, i32* %smem, i32* undef, float* undef, float* undef, float* undef, float* undef) #4, !dbg !1066
  tail call void @step4(i32* undef, i32* undef, i32* undef, i32* %DATA_y, i32* undef, i32* %data_y, i32* %smem, i32* %reversed, float* undef, float* undef, float* undef, float* undef) #4, !dbg !1067
  tail call void @step5(i32* undef, i32* undef, i32* undef, i32* %DATA_y, i32* undef, i32* %data_y, i32* %smem, i32* undef, float* undef, float* undef, float* undef, float* undef) #4, !dbg !1068
  tail call void @step6(i32* undef, i32* undef, i32* %DATA_x, i32* %DATA_y, i32* %data_x, i32* %data_y, i32* undef, i32* undef, float* %sin_64, float* %cos_64, float* undef, float* undef) #4, !dbg !1069
  tail call void @step7(i32* undef, i32* undef, i32* %DATA_x, i32* undef, i32* %data_x, i32* undef, i32* %smem, i32* %reversed, float* undef, float* undef, float* undef, float* undef) #4, !dbg !1070
  tail call void @step8(i32* undef, i32* undef, i32* %DATA_x, i32* undef, i32* %data_x, i32* undef, i32* %smem, i32* undef, float* undef, float* undef, float* undef, float* undef) #4, !dbg !1071
  tail call void @step9(i32* undef, i32* undef, i32* undef, i32* %DATA_y, i32* undef, i32* %data_y, i32* %smem, i32* %reversed, float* undef, float* undef, float* undef, float* undef) #4, !dbg !1072
  tail call void @step10(i32* undef, i32* undef, i32* undef, i32* %DATA_y, i32* undef, i32* %data_y, i32* %smem, i32* undef, float* undef, float* undef, float* undef, float* undef) #4, !dbg !1073
  tail call void @step11(i32* %work_x, i32* %work_y, i32* %DATA_x, i32* %DATA_y, i32* %data_x, i32* %data_y, i32* undef, i32* %reversed, float* undef, float* undef, float* undef, float* undef) #4, !dbg !1074
  ret void, !dbg !1075
}

; Function Attrs: noinline nounwind uwtable
define i32 @main() local_unnamed_addr #0 !dbg !1076 {
  %a_x = alloca [512 x i32], align 16
  %a_y = alloca [512 x i32], align 16
  %sin_64 = alloca [448 x float], align 16
  %sin_512 = alloca [448 x float], align 16
  %cos_64 = alloca [448 x float], align 16
  %cos_512 = alloca [448 x float], align 16
  %DATA_x = alloca [512 x i32], align 16
  %DATA_y = alloca [512 x i32], align 16
  %data_x = alloca [8 x i32], align 16
  %data_y = alloca [8 x i32], align 16
  %smem = alloca [576 x i32], align 16
  %reversed = alloca [8 x i32], align 16
  %1 = bitcast [512 x i32]* %a_x to i8*, !dbg !1105
  call void @llvm.lifetime.start.p0i8(i64 2048, i8* nonnull %1) #5, !dbg !1105
  call void @llvm.dbg.declare(metadata [512 x i32]* %a_x, metadata !1080, metadata !DIExpression()), !dbg !1106
  %2 = bitcast [512 x i32]* %a_y to i8*, !dbg !1107
  call void @llvm.lifetime.start.p0i8(i64 2048, i8* nonnull %2) #5, !dbg !1107
  call void @llvm.dbg.declare(metadata [512 x i32]* %a_y, metadata !1084, metadata !DIExpression()), !dbg !1108
  call void @llvm.dbg.value(metadata i32 0, metadata !1085, metadata !DIExpression()), !dbg !1109
  br label %3, !dbg !1110

; <label>:3:                                      ; preds = %3, %0
  %indvars.iv31 = phi i64 [ 0, %0 ], [ %indvars.iv.next32, %3 ]
  call void @llvm.dbg.value(metadata i64 %indvars.iv31, metadata !1085, metadata !DIExpression()), !dbg !1109
  %arrayidx = getelementptr inbounds [512 x i32], [512 x i32]* %a_x, i64 0, i64 %indvars.iv31, !dbg !1112
  %4 = trunc i64 %indvars.iv31 to i32, !dbg !1115
  store i32 %4, i32* %arrayidx, align 4, !dbg !1115, !tbaa !118
  %arrayidx2 = getelementptr inbounds [512 x i32], [512 x i32]* %a_y, i64 0, i64 %indvars.iv31, !dbg !1116
  store i32 0, i32* %arrayidx2, align 4, !dbg !1117, !tbaa !118
  %indvars.iv.next32 = add nuw nsw i64 %indvars.iv31, 1, !dbg !1118
  %exitcond33 = icmp eq i64 %indvars.iv.next32, 512, !dbg !1119
  br i1 %exitcond33, label %5, label %3, !dbg !1110, !llvm.loop !1120

; <label>:5:                                      ; preds = %3
  %6 = bitcast [448 x float]* %sin_64 to i8*, !dbg !1122
  call void @llvm.lifetime.start.p0i8(i64 1792, i8* nonnull %6) #5, !dbg !1122
  call void @llvm.dbg.declare(metadata [448 x float]* %sin_64, metadata !1086, metadata !DIExpression()), !dbg !1123
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull %6, i8* bitcast ([448 x float]* @main.sin_64 to i8*), i64 1792, i32 16, i1 false), !dbg !1123
  %7 = bitcast [448 x float]* %sin_512 to i8*, !dbg !1124
  call void @llvm.lifetime.start.p0i8(i64 1792, i8* nonnull %7) #5, !dbg !1124
  call void @llvm.dbg.declare(metadata [448 x float]* %sin_512, metadata !1090, metadata !DIExpression()), !dbg !1125
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull %7, i8* bitcast ([448 x float]* @main.sin_512 to i8*), i64 1792, i32 16, i1 false), !dbg !1125
  %8 = bitcast [448 x float]* %cos_64 to i8*, !dbg !1126
  call void @llvm.lifetime.start.p0i8(i64 1792, i8* nonnull %8) #5, !dbg !1126
  call void @llvm.dbg.declare(metadata [448 x float]* %cos_64, metadata !1091, metadata !DIExpression()), !dbg !1127
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull %8, i8* bitcast ([448 x float]* @main.cos_64 to i8*), i64 1792, i32 16, i1 false), !dbg !1127
  %9 = bitcast [448 x float]* %cos_512 to i8*, !dbg !1128
  call void @llvm.lifetime.start.p0i8(i64 1792, i8* nonnull %9) #5, !dbg !1128
  call void @llvm.dbg.declare(metadata [448 x float]* %cos_512, metadata !1092, metadata !DIExpression()), !dbg !1129
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull %9, i8* bitcast ([448 x float]* @main.cos_512 to i8*), i64 1792, i32 16, i1 false), !dbg !1129
  %10 = bitcast [512 x i32]* %DATA_x to i8*, !dbg !1130
  call void @llvm.lifetime.start.p0i8(i64 2048, i8* nonnull %10) #5, !dbg !1130
  call void @llvm.dbg.declare(metadata [512 x i32]* %DATA_x, metadata !1093, metadata !DIExpression()), !dbg !1131
  %11 = bitcast [512 x i32]* %DATA_y to i8*, !dbg !1132
  call void @llvm.lifetime.start.p0i8(i64 2048, i8* nonnull %11) #5, !dbg !1132
  call void @llvm.dbg.declare(metadata [512 x i32]* %DATA_y, metadata !1094, metadata !DIExpression()), !dbg !1133
  %12 = bitcast [8 x i32]* %data_x to i8*, !dbg !1134
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %12) #5, !dbg !1134
  call void @llvm.dbg.declare(metadata [8 x i32]* %data_x, metadata !1095, metadata !DIExpression()), !dbg !1135
  %13 = bitcast [8 x i32]* %data_y to i8*, !dbg !1136
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %13) #5, !dbg !1136
  call void @llvm.dbg.declare(metadata [8 x i32]* %data_y, metadata !1099, metadata !DIExpression()), !dbg !1137
  %14 = bitcast [576 x i32]* %smem to i8*, !dbg !1138
  call void @llvm.lifetime.start.p0i8(i64 2304, i8* nonnull %14) #5, !dbg !1138
  call void @llvm.dbg.declare(metadata [576 x i32]* %smem, metadata !1100, metadata !DIExpression()), !dbg !1139
  %15 = bitcast [8 x i32]* %reversed to i8*, !dbg !1140
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %15) #5, !dbg !1140
  call void @llvm.dbg.declare(metadata [8 x i32]* %reversed, metadata !1104, metadata !DIExpression()), !dbg !1141
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull %15, i8* bitcast ([8 x i32]* @main.reversed to i8*), i64 32, i32 16, i1 false), !dbg !1141
  %arraydecay = getelementptr inbounds [512 x i32], [512 x i32]* %a_x, i64 0, i64 0, !dbg !1142
  %arraydecay3 = getelementptr inbounds [512 x i32], [512 x i32]* %a_y, i64 0, i64 0, !dbg !1143
  %arraydecay4 = getelementptr inbounds [512 x i32], [512 x i32]* %DATA_x, i64 0, i64 0, !dbg !1144
  %arraydecay5 = getelementptr inbounds [512 x i32], [512 x i32]* %DATA_y, i64 0, i64 0, !dbg !1145
  %arraydecay6 = getelementptr inbounds [8 x i32], [8 x i32]* %data_x, i64 0, i64 0, !dbg !1146
  %arraydecay7 = getelementptr inbounds [8 x i32], [8 x i32]* %data_y, i64 0, i64 0, !dbg !1147
  %arraydecay8 = getelementptr inbounds [576 x i32], [576 x i32]* %smem, i64 0, i64 0, !dbg !1148
  %arraydecay9 = getelementptr inbounds [8 x i32], [8 x i32]* %reversed, i64 0, i64 0, !dbg !1149
  %arraydecay10 = getelementptr inbounds [448 x float], [448 x float]* %sin_64, i64 0, i64 0, !dbg !1150
  %arraydecay11 = getelementptr inbounds [448 x float], [448 x float]* %sin_512, i64 0, i64 0, !dbg !1151
  %arraydecay12 = getelementptr inbounds [448 x float], [448 x float]* %cos_64, i64 0, i64 0, !dbg !1152
  %arraydecay13 = getelementptr inbounds [448 x float], [448 x float]* %cos_512, i64 0, i64 0, !dbg !1153
  call void @fft1D_512(i32* nonnull %arraydecay, i32* nonnull %arraydecay3, i32* nonnull %arraydecay4, i32* nonnull %arraydecay5, i32* nonnull %arraydecay6, i32* nonnull %arraydecay7, i32* nonnull %arraydecay8, i32* nonnull %arraydecay9, float* nonnull %arraydecay10, float* nonnull %arraydecay11, float* nonnull %arraydecay12, float* nonnull %arraydecay13) #4, !dbg !1154
  call void @llvm.dbg.value(metadata i32 0, metadata !1085, metadata !DIExpression()), !dbg !1109
  br label %16, !dbg !1155

; <label>:16:                                     ; preds = %16, %5
  %indvars.iv = phi i64 [ 0, %5 ], [ %indvars.iv.next, %16 ]
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !1085, metadata !DIExpression()), !dbg !1109
  %arrayidx16 = getelementptr inbounds [512 x i32], [512 x i32]* %a_x, i64 0, i64 %indvars.iv, !dbg !1157
  %17 = load i32, i32* %arrayidx16, align 4, !dbg !1157, !tbaa !118
  %arrayidx18 = getelementptr inbounds [512 x i32], [512 x i32]* %a_y, i64 0, i64 %indvars.iv, !dbg !1160
  %18 = load i32, i32* %arrayidx18, align 4, !dbg !1160, !tbaa !118
  %call = tail call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str, i64 0, i64 0), i32 %17, i32 %18) #6, !dbg !1161
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !1162
  %exitcond = icmp eq i64 %indvars.iv.next, 2, !dbg !1163
  br i1 %exitcond, label %19, label %16, !dbg !1155, !llvm.loop !1164

; <label>:19:                                     ; preds = %16
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %15) #5, !dbg !1166
  call void @llvm.lifetime.end.p0i8(i64 2304, i8* nonnull %14) #5, !dbg !1166
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %13) #5, !dbg !1166
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %12) #5, !dbg !1166
  call void @llvm.lifetime.end.p0i8(i64 2048, i8* nonnull %11) #5, !dbg !1166
  call void @llvm.lifetime.end.p0i8(i64 2048, i8* nonnull %10) #5, !dbg !1166
  call void @llvm.lifetime.end.p0i8(i64 1792, i8* nonnull %9) #5, !dbg !1166
  call void @llvm.lifetime.end.p0i8(i64 1792, i8* nonnull %8) #5, !dbg !1166
  call void @llvm.lifetime.end.p0i8(i64 1792, i8* nonnull %7) #5, !dbg !1166
  call void @llvm.lifetime.end.p0i8(i64 1792, i8* nonnull %6) #5, !dbg !1166
  call void @llvm.lifetime.end.p0i8(i64 2048, i8* nonnull %2) #5, !dbg !1166
  call void @llvm.lifetime.end.p0i8(i64 2048, i8* nonnull %1) #5, !dbg !1166
  ret i32 0, !dbg !1167
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i32, i1) #2

declare i32 @printf(i8*, ...) local_unnamed_addr #3

; Function Attrs: nounwind readnone speculatable
declare void @llvm.dbg.value(metadata, metadata, metadata) #1

attributes #0 = { noinline nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone speculatable }
attributes #2 = { argmemonly nounwind }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin }
attributes #5 = { nounwind }
attributes #6 = { nobuiltin nounwind }

!llvm.dbg.cu = !{!0}
!llvm.module.flags = !{!3, !4, !5}
!llvm.ident = !{!6}

!0 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1, producer: "clang version 6.0.0 (tags/RELEASE_600/final)", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2)
!1 = !DIFile(filename: "fft.c", directory: "/workspace/gem5-aladdin/src/aladdin/SHOC/fft")
!2 = !{}
!3 = !{i32 2, !"Dwarf Version", i32 4}
!4 = !{i32 2, !"Debug Info Version", i32 3}
!5 = !{i32 1, !"wchar_size", i32 4}
!6 = !{!"clang version 6.0.0 (tags/RELEASE_600/final)"}
!7 = distinct !DISubprogram(name: "step1", scope: !1, file: !1, line: 8, type: !8, isLocal: false, isDefinition: true, scopeLine: 16, flags: DIFlagPrototyped, isOptimized: true, unit: !0, variables: !14)
!8 = !DISubroutineType(types: !9)
!9 = !{null, !10, !10, !10, !10, !10, !10, !10, !10, !12, !12, !12, !12}
!10 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11, size: 64)
!11 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!12 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13, size: 64)
!13 = !DIBasicType(name: "float", size: 32, encoding: DW_ATE_float)
!14 = !{!15, !16, !17, !18, !19, !20, !21, !22, !23, !24, !25, !26, !27, !28, !29, !30, !31, !32, !33, !38, !39, !40, !41, !42, !43, !44, !45, !47, !48, !50, !51, !53, !54, !56, !57, !59, !60, !61, !63, !64, !66, !67, !69, !70, !72, !73, !75, !76, !77, !79, !80, !82, !83, !85, !86, !88, !89, !93, !94}
!15 = !DILocalVariable(name: "work_x", arg: 1, scope: !7, file: !1, line: 8, type: !10)
!16 = !DILocalVariable(name: "work_y", arg: 2, scope: !7, file: !1, line: 8, type: !10)
!17 = !DILocalVariable(name: "DATA_x", arg: 3, scope: !7, file: !1, line: 8, type: !10)
!18 = !DILocalVariable(name: "DATA_y", arg: 4, scope: !7, file: !1, line: 9, type: !10)
!19 = !DILocalVariable(name: "data_x", arg: 5, scope: !7, file: !1, line: 9, type: !10)
!20 = !DILocalVariable(name: "data_y", arg: 6, scope: !7, file: !1, line: 9, type: !10)
!21 = !DILocalVariable(name: "smem", arg: 7, scope: !7, file: !1, line: 9, type: !10)
!22 = !DILocalVariable(name: "reversed", arg: 8, scope: !7, file: !1, line: 10, type: !10)
!23 = !DILocalVariable(name: "sin_64", arg: 9, scope: !7, file: !1, line: 11, type: !12)
!24 = !DILocalVariable(name: "cos_64", arg: 10, scope: !7, file: !1, line: 12, type: !12)
!25 = !DILocalVariable(name: "sin_512", arg: 11, scope: !7, file: !1, line: 13, type: !12)
!26 = !DILocalVariable(name: "cos_512", arg: 12, scope: !7, file: !1, line: 14, type: !12)
!27 = !DILocalVariable(name: "tid", scope: !7, file: !1, line: 17, type: !11)
!28 = !DILocalVariable(name: "hi", scope: !7, file: !1, line: 17, type: !11)
!29 = !DILocalVariable(name: "lo", scope: !7, file: !1, line: 17, type: !11)
!30 = !DILocalVariable(name: "i", scope: !7, file: !1, line: 17, type: !11)
!31 = !DILocalVariable(name: "j", scope: !7, file: !1, line: 17, type: !11)
!32 = !DILocalVariable(name: "stride", scope: !7, file: !1, line: 17, type: !11)
!33 = !DILocalVariable(name: "exp_1_8_x", scope: !34, file: !1, line: 26, type: !11)
!34 = distinct !DILexicalBlock(scope: !35, file: !1, line: 26, column: 3)
!35 = distinct !DILexicalBlock(scope: !36, file: !1, line: 20, column: 43)
!36 = distinct !DILexicalBlock(scope: !37, file: !1, line: 20, column: 9)
!37 = distinct !DILexicalBlock(scope: !7, file: !1, line: 20, column: 9)
!38 = !DILocalVariable(name: "exp_1_4_x", scope: !34, file: !1, line: 26, type: !11)
!39 = !DILocalVariable(name: "exp_3_8_x", scope: !34, file: !1, line: 26, type: !11)
!40 = !DILocalVariable(name: "exp_1_8_y", scope: !34, file: !1, line: 26, type: !11)
!41 = !DILocalVariable(name: "exp_1_4_y", scope: !34, file: !1, line: 26, type: !11)
!42 = !DILocalVariable(name: "exp_3_8_y", scope: !34, file: !1, line: 26, type: !11)
!43 = !DILocalVariable(name: "tmp_1", scope: !34, file: !1, line: 26, type: !11)
!44 = !DILocalVariable(name: "tmp_2", scope: !34, file: !1, line: 26, type: !11)
!45 = !DILocalVariable(name: "c0_x", scope: !46, file: !1, line: 26, type: !11)
!46 = distinct !DILexicalBlock(scope: !34, file: !1, line: 26, column: 3)
!47 = !DILocalVariable(name: "c0_y", scope: !46, file: !1, line: 26, type: !11)
!48 = !DILocalVariable(name: "c0_x", scope: !49, file: !1, line: 26, type: !11)
!49 = distinct !DILexicalBlock(scope: !34, file: !1, line: 26, column: 3)
!50 = !DILocalVariable(name: "c0_y", scope: !49, file: !1, line: 26, type: !11)
!51 = !DILocalVariable(name: "c0_x", scope: !52, file: !1, line: 26, type: !11)
!52 = distinct !DILexicalBlock(scope: !34, file: !1, line: 26, column: 3)
!53 = !DILocalVariable(name: "c0_y", scope: !52, file: !1, line: 26, type: !11)
!54 = !DILocalVariable(name: "c0_x", scope: !55, file: !1, line: 26, type: !11)
!55 = distinct !DILexicalBlock(scope: !34, file: !1, line: 26, column: 3)
!56 = !DILocalVariable(name: "c0_y", scope: !55, file: !1, line: 26, type: !11)
!57 = !DILocalVariable(name: "exp_1_44_x", scope: !58, file: !1, line: 26, type: !11)
!58 = distinct !DILexicalBlock(scope: !34, file: !1, line: 26, column: 3)
!59 = !DILocalVariable(name: "exp_1_44_y", scope: !58, file: !1, line: 26, type: !11)
!60 = !DILocalVariable(name: "tmp", scope: !58, file: !1, line: 26, type: !11)
!61 = !DILocalVariable(name: "c0_x", scope: !62, file: !1, line: 26, type: !11)
!62 = distinct !DILexicalBlock(scope: !58, file: !1, line: 26, column: 3)
!63 = !DILocalVariable(name: "c0_y", scope: !62, file: !1, line: 26, type: !11)
!64 = !DILocalVariable(name: "c0_x", scope: !65, file: !1, line: 26, type: !11)
!65 = distinct !DILexicalBlock(scope: !58, file: !1, line: 26, column: 3)
!66 = !DILocalVariable(name: "c0_y", scope: !65, file: !1, line: 26, type: !11)
!67 = !DILocalVariable(name: "c0_x", scope: !68, file: !1, line: 26, type: !11)
!68 = distinct !DILexicalBlock(scope: !58, file: !1, line: 26, column: 3)
!69 = !DILocalVariable(name: "c0_y", scope: !68, file: !1, line: 26, type: !11)
!70 = !DILocalVariable(name: "c0_x", scope: !71, file: !1, line: 26, type: !11)
!71 = distinct !DILexicalBlock(scope: !58, file: !1, line: 26, column: 3)
!72 = !DILocalVariable(name: "c0_y", scope: !71, file: !1, line: 26, type: !11)
!73 = !DILocalVariable(name: "exp_1_44_x", scope: !74, file: !1, line: 26, type: !11)
!74 = distinct !DILexicalBlock(scope: !34, file: !1, line: 26, column: 3)
!75 = !DILocalVariable(name: "exp_1_44_y", scope: !74, file: !1, line: 26, type: !11)
!76 = !DILocalVariable(name: "tmp", scope: !74, file: !1, line: 26, type: !11)
!77 = !DILocalVariable(name: "c0_x", scope: !78, file: !1, line: 26, type: !11)
!78 = distinct !DILexicalBlock(scope: !74, file: !1, line: 26, column: 3)
!79 = !DILocalVariable(name: "c0_y", scope: !78, file: !1, line: 26, type: !11)
!80 = !DILocalVariable(name: "c0_x", scope: !81, file: !1, line: 26, type: !11)
!81 = distinct !DILexicalBlock(scope: !74, file: !1, line: 26, column: 3)
!82 = !DILocalVariable(name: "c0_y", scope: !81, file: !1, line: 26, type: !11)
!83 = !DILocalVariable(name: "c0_x", scope: !84, file: !1, line: 26, type: !11)
!84 = distinct !DILexicalBlock(scope: !74, file: !1, line: 26, column: 3)
!85 = !DILocalVariable(name: "c0_y", scope: !84, file: !1, line: 26, type: !11)
!86 = !DILocalVariable(name: "c0_x", scope: !87, file: !1, line: 26, type: !11)
!87 = distinct !DILexicalBlock(scope: !74, file: !1, line: 26, column: 3)
!88 = !DILocalVariable(name: "c0_y", scope: !87, file: !1, line: 26, type: !11)
!89 = !DILocalVariable(name: "A_x", scope: !90, file: !1, line: 31, type: !11)
!90 = distinct !DILexicalBlock(scope: !91, file: !1, line: 30, column: 36)
!91 = distinct !DILexicalBlock(scope: !92, file: !1, line: 30, column: 14)
!92 = distinct !DILexicalBlock(scope: !35, file: !1, line: 30, column: 14)
!93 = !DILocalVariable(name: "A_y", scope: !90, file: !1, line: 31, type: !11)
!94 = !DILocalVariable(name: "tmp", scope: !90, file: !1, line: 31, type: !11)
!95 = !DILocation(line: 8, column: 17, scope: !7)
!96 = !DILocation(line: 8, column: 32, scope: !7)
!97 = !DILocation(line: 8, column: 47, scope: !7)
!98 = !DILocation(line: 9, column: 8, scope: !7)
!99 = !DILocation(line: 9, column: 23, scope: !7)
!100 = !DILocation(line: 9, column: 38, scope: !7)
!101 = !DILocation(line: 9, column: 54, scope: !7)
!102 = !DILocation(line: 10, column: 7, scope: !7)
!103 = !DILocation(line: 11, column: 9, scope: !7)
!104 = !DILocation(line: 12, column: 9, scope: !7)
!105 = !DILocation(line: 13, column: 9, scope: !7)
!106 = !DILocation(line: 14, column: 9, scope: !7)
!107 = !DILocation(line: 17, column: 25, scope: !7)
!108 = !DILocation(line: 17, column: 6, scope: !7)
!109 = !DILocation(line: 20, column: 9, scope: !37)
!110 = !DILocation(line: 17, column: 19, scope: !7)
!111 = !DILocation(line: 22, column: 10, scope: !112)
!112 = distinct !DILexicalBlock(scope: !35, file: !1, line: 22, column: 10)
!113 = !DILocation(line: 23, column: 24, scope: !114)
!114 = distinct !DILexicalBlock(scope: !115, file: !1, line: 22, column: 29)
!115 = distinct !DILexicalBlock(scope: !112, file: !1, line: 22, column: 10)
!116 = !DILocation(line: 23, column: 31, scope: !114)
!117 = !DILocation(line: 23, column: 16, scope: !114)
!118 = !{!119, !119, i64 0}
!119 = !{!"int", !120, i64 0}
!120 = !{!"omnipotent char", !121, i64 0}
!121 = !{!"Simple C/C++ TBAA"}
!122 = !DILocation(line: 23, column: 4, scope: !114)
!123 = !DILocation(line: 23, column: 14, scope: !114)
!124 = !DILocation(line: 24, column: 16, scope: !114)
!125 = !DILocation(line: 24, column: 4, scope: !114)
!126 = !DILocation(line: 24, column: 14, scope: !114)
!127 = !DILocation(line: 22, column: 26, scope: !115)
!128 = !DILocation(line: 22, column: 22, scope: !115)
!129 = distinct !{!129, !111, !130}
!130 = !DILocation(line: 25, column: 3, scope: !112)
!131 = !DILocation(line: 26, column: 3, scope: !34)
!132 = !DILocation(line: 26, column: 3, scope: !46)
!133 = !DILocation(line: 26, column: 3, scope: !49)
!134 = !DILocation(line: 26, column: 3, scope: !52)
!135 = !DILocation(line: 26, column: 3, scope: !55)
!136 = !DILocation(line: 26, column: 3, scope: !58)
!137 = !DILocation(line: 26, column: 3, scope: !62)
!138 = !DILocation(line: 26, column: 3, scope: !65)
!139 = !DILocation(line: 26, column: 3, scope: !68)
!140 = !DILocation(line: 26, column: 3, scope: !71)
!141 = !DILocation(line: 26, column: 3, scope: !74)
!142 = !DILocation(line: 26, column: 3, scope: !78)
!143 = !DILocation(line: 26, column: 3, scope: !81)
!144 = !DILocation(line: 26, column: 3, scope: !84)
!145 = !DILocation(line: 26, column: 3, scope: !87)
!146 = !DILocation(line: 17, column: 22, scope: !7)
!147 = !DILocation(line: 30, column: 14, scope: !92)
!148 = !DILocation(line: 32, column: 34, scope: !90)
!149 = !DILocation(line: 32, column: 19, scope: !90)
!150 = !{!151, !151, i64 0}
!151 = !{!"float", !120, i64 0}
!152 = !DILocation(line: 31, column: 18, scope: !90)
!153 = !DILocation(line: 33, column: 19, scope: !90)
!154 = !DILocation(line: 31, column: 23, scope: !90)
!155 = !DILocation(line: 34, column: 19, scope: !90)
!156 = !DILocation(line: 31, column: 28, scope: !90)
!157 = !DILocation(line: 35, column: 25, scope: !90)
!158 = !DILocation(line: 35, column: 23, scope: !90)
!159 = !DILocation(line: 36, column: 25, scope: !90)
!160 = !DILocation(line: 36, column: 23, scope: !90)
!161 = !DILocation(line: 30, column: 33, scope: !91)
!162 = !DILocation(line: 30, column: 27, scope: !91)
!163 = distinct !{!163, !147, !164}
!164 = !DILocation(line: 37, column: 5, scope: !92)
!165 = !DILocation(line: 40, column: 11, scope: !166)
!166 = distinct !DILexicalBlock(scope: !35, file: !1, line: 40, column: 11)
!167 = !DILocation(line: 41, column: 24, scope: !168)
!168 = distinct !DILexicalBlock(scope: !169, file: !1, line: 40, column: 34)
!169 = distinct !DILexicalBlock(scope: !166, file: !1, line: 40, column: 11)
!170 = !DILocation(line: 41, column: 17, scope: !168)
!171 = !DILocation(line: 41, column: 4, scope: !168)
!172 = !DILocation(line: 41, column: 22, scope: !168)
!173 = !DILocation(line: 42, column: 24, scope: !168)
!174 = !DILocation(line: 42, column: 4, scope: !168)
!175 = !DILocation(line: 42, column: 22, scope: !168)
!176 = !DILocation(line: 40, column: 31, scope: !169)
!177 = !DILocation(line: 40, column: 24, scope: !169)
!178 = distinct !{!178, !165, !179}
!179 = !DILocation(line: 43, column: 3, scope: !166)
!180 = !DILocation(line: 20, column: 40, scope: !36)
!181 = !DILocation(line: 20, column: 26, scope: !36)
!182 = distinct !{!182, !109, !183}
!183 = !DILocation(line: 44, column: 2, scope: !37)
!184 = !DILocation(line: 45, column: 1, scope: !7)
!185 = distinct !DISubprogram(name: "step2", scope: !1, file: !1, line: 46, type: !8, isLocal: false, isDefinition: true, scopeLine: 54, flags: DIFlagPrototyped, isOptimized: true, unit: !0, variables: !186)
!186 = !{!187, !188, !189, !190, !191, !192, !193, !194, !195, !196, !197, !198, !199, !200, !201, !202, !203, !204}
!187 = !DILocalVariable(name: "work_x", arg: 1, scope: !185, file: !1, line: 46, type: !10)
!188 = !DILocalVariable(name: "work_y", arg: 2, scope: !185, file: !1, line: 46, type: !10)
!189 = !DILocalVariable(name: "DATA_x", arg: 3, scope: !185, file: !1, line: 46, type: !10)
!190 = !DILocalVariable(name: "DATA_y", arg: 4, scope: !185, file: !1, line: 47, type: !10)
!191 = !DILocalVariable(name: "data_x", arg: 5, scope: !185, file: !1, line: 47, type: !10)
!192 = !DILocalVariable(name: "data_y", arg: 6, scope: !185, file: !1, line: 47, type: !10)
!193 = !DILocalVariable(name: "smem", arg: 7, scope: !185, file: !1, line: 47, type: !10)
!194 = !DILocalVariable(name: "reversed", arg: 8, scope: !185, file: !1, line: 48, type: !10)
!195 = !DILocalVariable(name: "sin_64", arg: 9, scope: !185, file: !1, line: 49, type: !12)
!196 = !DILocalVariable(name: "cos_64", arg: 10, scope: !185, file: !1, line: 50, type: !12)
!197 = !DILocalVariable(name: "sin_512", arg: 11, scope: !185, file: !1, line: 51, type: !12)
!198 = !DILocalVariable(name: "cos_512", arg: 12, scope: !185, file: !1, line: 52, type: !12)
!199 = !DILocalVariable(name: "tid", scope: !185, file: !1, line: 55, type: !11)
!200 = !DILocalVariable(name: "hi", scope: !185, file: !1, line: 55, type: !11)
!201 = !DILocalVariable(name: "lo", scope: !185, file: !1, line: 55, type: !11)
!202 = !DILocalVariable(name: "i", scope: !185, file: !1, line: 55, type: !11)
!203 = !DILocalVariable(name: "j", scope: !185, file: !1, line: 55, type: !11)
!204 = !DILocalVariable(name: "stride", scope: !185, file: !1, line: 55, type: !11)
!205 = !DILocation(line: 46, column: 17, scope: !185)
!206 = !DILocation(line: 46, column: 32, scope: !185)
!207 = !DILocation(line: 46, column: 47, scope: !185)
!208 = !DILocation(line: 47, column: 8, scope: !185)
!209 = !DILocation(line: 47, column: 23, scope: !185)
!210 = !DILocation(line: 47, column: 38, scope: !185)
!211 = !DILocation(line: 47, column: 54, scope: !185)
!212 = !DILocation(line: 48, column: 7, scope: !185)
!213 = !DILocation(line: 49, column: 9, scope: !185)
!214 = !DILocation(line: 50, column: 9, scope: !185)
!215 = !DILocation(line: 51, column: 9, scope: !185)
!216 = !DILocation(line: 52, column: 9, scope: !185)
!217 = !DILocation(line: 55, column: 25, scope: !185)
!218 = !DILocation(line: 55, column: 6, scope: !185)
!219 = !DILocation(line: 57, column: 9, scope: !220)
!220 = distinct !DILexicalBlock(scope: !185, file: !1, line: 57, column: 9)
!221 = !DILocation(line: 55, column: 19, scope: !185)
!222 = !DILocation(line: 58, column: 10, scope: !223)
!223 = distinct !DILexicalBlock(scope: !224, file: !1, line: 58, column: 10)
!224 = distinct !DILexicalBlock(scope: !225, file: !1, line: 57, column: 38)
!225 = distinct !DILexicalBlock(scope: !220, file: !1, line: 57, column: 9)
!226 = !DILocation(line: 59, column: 29, scope: !227)
!227 = distinct !DILexicalBlock(scope: !228, file: !1, line: 58, column: 33)
!228 = distinct !DILexicalBlock(scope: !223, file: !1, line: 58, column: 10)
!229 = !DILocation(line: 59, column: 16, scope: !227)
!230 = !DILocation(line: 59, column: 4, scope: !227)
!231 = !DILocation(line: 59, column: 14, scope: !227)
!232 = !DILocation(line: 58, column: 30, scope: !228)
!233 = !DILocation(line: 58, column: 23, scope: !228)
!234 = distinct !{!234, !222, !235}
!235 = !DILocation(line: 61, column: 3, scope: !223)
!236 = !DILocation(line: 64, column: 3, scope: !237)
!237 = distinct !DILexicalBlock(scope: !224, file: !1, line: 64, column: 3)
!238 = !DILocation(line: 63, column: 11, scope: !224)
!239 = !DILocation(line: 57, column: 35, scope: !225)
!240 = !DILocation(line: 57, column: 26, scope: !225)
!241 = distinct !{!241, !219, !242}
!242 = !DILocation(line: 65, column: 2, scope: !220)
!243 = !DILocation(line: 67, column: 1, scope: !185)
!244 = distinct !DISubprogram(name: "step3", scope: !1, file: !1, line: 68, type: !8, isLocal: false, isDefinition: true, scopeLine: 76, flags: DIFlagPrototyped, isOptimized: true, unit: !0, variables: !245)
!245 = !{!246, !247, !248, !249, !250, !251, !252, !253, !254, !255, !256, !257, !258, !259, !260, !261, !262, !263}
!246 = !DILocalVariable(name: "work_x", arg: 1, scope: !244, file: !1, line: 68, type: !10)
!247 = !DILocalVariable(name: "work_y", arg: 2, scope: !244, file: !1, line: 68, type: !10)
!248 = !DILocalVariable(name: "DATA_x", arg: 3, scope: !244, file: !1, line: 68, type: !10)
!249 = !DILocalVariable(name: "DATA_y", arg: 4, scope: !244, file: !1, line: 69, type: !10)
!250 = !DILocalVariable(name: "data_x", arg: 5, scope: !244, file: !1, line: 69, type: !10)
!251 = !DILocalVariable(name: "data_y", arg: 6, scope: !244, file: !1, line: 69, type: !10)
!252 = !DILocalVariable(name: "smem", arg: 7, scope: !244, file: !1, line: 69, type: !10)
!253 = !DILocalVariable(name: "reversed", arg: 8, scope: !244, file: !1, line: 70, type: !10)
!254 = !DILocalVariable(name: "sin_64", arg: 9, scope: !244, file: !1, line: 71, type: !12)
!255 = !DILocalVariable(name: "cos_64", arg: 10, scope: !244, file: !1, line: 72, type: !12)
!256 = !DILocalVariable(name: "sin_512", arg: 11, scope: !244, file: !1, line: 73, type: !12)
!257 = !DILocalVariable(name: "cos_512", arg: 12, scope: !244, file: !1, line: 74, type: !12)
!258 = !DILocalVariable(name: "tid", scope: !244, file: !1, line: 77, type: !11)
!259 = !DILocalVariable(name: "hi", scope: !244, file: !1, line: 77, type: !11)
!260 = !DILocalVariable(name: "lo", scope: !244, file: !1, line: 77, type: !11)
!261 = !DILocalVariable(name: "i", scope: !244, file: !1, line: 77, type: !11)
!262 = !DILocalVariable(name: "j", scope: !244, file: !1, line: 77, type: !11)
!263 = !DILocalVariable(name: "stride", scope: !244, file: !1, line: 77, type: !11)
!264 = !DILocation(line: 68, column: 17, scope: !244)
!265 = !DILocation(line: 68, column: 32, scope: !244)
!266 = !DILocation(line: 68, column: 47, scope: !244)
!267 = !DILocation(line: 69, column: 8, scope: !244)
!268 = !DILocation(line: 69, column: 23, scope: !244)
!269 = !DILocation(line: 69, column: 38, scope: !244)
!270 = !DILocation(line: 69, column: 54, scope: !244)
!271 = !DILocation(line: 70, column: 7, scope: !244)
!272 = !DILocation(line: 71, column: 9, scope: !244)
!273 = !DILocation(line: 72, column: 9, scope: !244)
!274 = !DILocation(line: 73, column: 9, scope: !244)
!275 = !DILocation(line: 74, column: 9, scope: !244)
!276 = !DILocation(line: 77, column: 25, scope: !244)
!277 = !DILocation(line: 77, column: 6, scope: !244)
!278 = !DILocation(line: 79, column: 9, scope: !279)
!279 = distinct !DILexicalBlock(scope: !244, file: !1, line: 79, column: 9)
!280 = !DILocation(line: 77, column: 19, scope: !244)
!281 = !DILocation(line: 80, column: 10, scope: !282)
!282 = distinct !DILexicalBlock(scope: !283, file: !1, line: 80, column: 10)
!283 = distinct !DILexicalBlock(scope: !284, file: !1, line: 79, column: 38)
!284 = distinct !DILexicalBlock(scope: !279, file: !1, line: 79, column: 9)
!285 = !DILocation(line: 81, column: 29, scope: !286)
!286 = distinct !DILexicalBlock(scope: !287, file: !1, line: 80, column: 33)
!287 = distinct !DILexicalBlock(scope: !282, file: !1, line: 80, column: 10)
!288 = !DILocation(line: 81, column: 16, scope: !286)
!289 = !DILocation(line: 81, column: 4, scope: !286)
!290 = !DILocation(line: 81, column: 14, scope: !286)
!291 = !DILocation(line: 80, column: 30, scope: !287)
!292 = !DILocation(line: 80, column: 23, scope: !287)
!293 = distinct !{!293, !281, !294}
!294 = !DILocation(line: 83, column: 3, scope: !282)
!295 = !DILocation(line: 84, column: 11, scope: !283)
!296 = !DILocation(line: 77, column: 11, scope: !244)
!297 = !DILocation(line: 85, column: 11, scope: !283)
!298 = !DILocation(line: 77, column: 15, scope: !244)
!299 = !DILocation(line: 86, column: 3, scope: !300)
!300 = distinct !DILexicalBlock(scope: !283, file: !1, line: 86, column: 3)
!301 = !DILocation(line: 87, column: 11, scope: !302)
!302 = distinct !DILexicalBlock(scope: !283, file: !1, line: 87, column: 11)
!303 = !DILocation(line: 88, column: 24, scope: !304)
!304 = distinct !DILexicalBlock(scope: !305, file: !1, line: 87, column: 34)
!305 = distinct !DILexicalBlock(scope: !302, file: !1, line: 87, column: 11)
!306 = !DILocation(line: 88, column: 17, scope: !304)
!307 = !DILocation(line: 88, column: 4, scope: !304)
!308 = !DILocation(line: 88, column: 22, scope: !304)
!309 = !DILocation(line: 87, column: 31, scope: !305)
!310 = !DILocation(line: 87, column: 24, scope: !305)
!311 = distinct !{!311, !301, !312}
!312 = !DILocation(line: 90, column: 3, scope: !302)
!313 = !DILocation(line: 79, column: 35, scope: !284)
!314 = !DILocation(line: 79, column: 26, scope: !284)
!315 = distinct !{!315, !278, !316}
!316 = !DILocation(line: 91, column: 2, scope: !279)
!317 = !DILocation(line: 92, column: 1, scope: !244)
!318 = distinct !DISubprogram(name: "step4", scope: !1, file: !1, line: 93, type: !8, isLocal: false, isDefinition: true, scopeLine: 101, flags: DIFlagPrototyped, isOptimized: true, unit: !0, variables: !319)
!319 = !{!320, !321, !322, !323, !324, !325, !326, !327, !328, !329, !330, !331, !332, !333, !334, !335, !336, !337}
!320 = !DILocalVariable(name: "work_x", arg: 1, scope: !318, file: !1, line: 93, type: !10)
!321 = !DILocalVariable(name: "work_y", arg: 2, scope: !318, file: !1, line: 93, type: !10)
!322 = !DILocalVariable(name: "DATA_x", arg: 3, scope: !318, file: !1, line: 93, type: !10)
!323 = !DILocalVariable(name: "DATA_y", arg: 4, scope: !318, file: !1, line: 94, type: !10)
!324 = !DILocalVariable(name: "data_x", arg: 5, scope: !318, file: !1, line: 94, type: !10)
!325 = !DILocalVariable(name: "data_y", arg: 6, scope: !318, file: !1, line: 94, type: !10)
!326 = !DILocalVariable(name: "smem", arg: 7, scope: !318, file: !1, line: 94, type: !10)
!327 = !DILocalVariable(name: "reversed", arg: 8, scope: !318, file: !1, line: 95, type: !10)
!328 = !DILocalVariable(name: "sin_64", arg: 9, scope: !318, file: !1, line: 96, type: !12)
!329 = !DILocalVariable(name: "cos_64", arg: 10, scope: !318, file: !1, line: 97, type: !12)
!330 = !DILocalVariable(name: "sin_512", arg: 11, scope: !318, file: !1, line: 98, type: !12)
!331 = !DILocalVariable(name: "cos_512", arg: 12, scope: !318, file: !1, line: 99, type: !12)
!332 = !DILocalVariable(name: "tid", scope: !318, file: !1, line: 102, type: !11)
!333 = !DILocalVariable(name: "hi", scope: !318, file: !1, line: 102, type: !11)
!334 = !DILocalVariable(name: "lo", scope: !318, file: !1, line: 102, type: !11)
!335 = !DILocalVariable(name: "i", scope: !318, file: !1, line: 102, type: !11)
!336 = !DILocalVariable(name: "j", scope: !318, file: !1, line: 102, type: !11)
!337 = !DILocalVariable(name: "stride", scope: !318, file: !1, line: 102, type: !11)
!338 = !DILocation(line: 93, column: 17, scope: !318)
!339 = !DILocation(line: 93, column: 32, scope: !318)
!340 = !DILocation(line: 93, column: 47, scope: !318)
!341 = !DILocation(line: 94, column: 8, scope: !318)
!342 = !DILocation(line: 94, column: 23, scope: !318)
!343 = !DILocation(line: 94, column: 38, scope: !318)
!344 = !DILocation(line: 94, column: 54, scope: !318)
!345 = !DILocation(line: 95, column: 7, scope: !318)
!346 = !DILocation(line: 96, column: 9, scope: !318)
!347 = !DILocation(line: 97, column: 9, scope: !318)
!348 = !DILocation(line: 98, column: 9, scope: !318)
!349 = !DILocation(line: 99, column: 9, scope: !318)
!350 = !DILocation(line: 102, column: 25, scope: !318)
!351 = !DILocation(line: 102, column: 6, scope: !318)
!352 = !DILocation(line: 104, column: 9, scope: !353)
!353 = distinct !DILexicalBlock(scope: !318, file: !1, line: 104, column: 9)
!354 = !DILocation(line: 102, column: 19, scope: !318)
!355 = !DILocation(line: 105, column: 10, scope: !356)
!356 = distinct !DILexicalBlock(scope: !357, file: !1, line: 105, column: 10)
!357 = distinct !DILexicalBlock(scope: !358, file: !1, line: 104, column: 38)
!358 = distinct !DILexicalBlock(scope: !353, file: !1, line: 104, column: 9)
!359 = !DILocation(line: 107, column: 29, scope: !360)
!360 = distinct !DILexicalBlock(scope: !361, file: !1, line: 105, column: 33)
!361 = distinct !DILexicalBlock(scope: !356, file: !1, line: 105, column: 10)
!362 = !DILocation(line: 107, column: 16, scope: !360)
!363 = !DILocation(line: 107, column: 4, scope: !360)
!364 = !DILocation(line: 107, column: 14, scope: !360)
!365 = !DILocation(line: 105, column: 30, scope: !361)
!366 = !DILocation(line: 105, column: 23, scope: !361)
!367 = distinct !{!367, !355, !368}
!368 = !DILocation(line: 108, column: 3, scope: !356)
!369 = !DILocation(line: 111, column: 3, scope: !370)
!370 = distinct !DILexicalBlock(scope: !357, file: !1, line: 111, column: 3)
!371 = !DILocation(line: 110, column: 11, scope: !357)
!372 = !DILocation(line: 104, column: 35, scope: !358)
!373 = !DILocation(line: 104, column: 26, scope: !358)
!374 = distinct !{!374, !352, !375}
!375 = !DILocation(line: 112, column: 2, scope: !353)
!376 = !DILocation(line: 113, column: 1, scope: !318)
!377 = distinct !DISubprogram(name: "step5", scope: !1, file: !1, line: 114, type: !8, isLocal: false, isDefinition: true, scopeLine: 122, flags: DIFlagPrototyped, isOptimized: true, unit: !0, variables: !378)
!378 = !{!379, !380, !381, !382, !383, !384, !385, !386, !387, !388, !389, !390, !391, !392, !393, !394, !395, !396}
!379 = !DILocalVariable(name: "work_x", arg: 1, scope: !377, file: !1, line: 114, type: !10)
!380 = !DILocalVariable(name: "work_y", arg: 2, scope: !377, file: !1, line: 114, type: !10)
!381 = !DILocalVariable(name: "DATA_x", arg: 3, scope: !377, file: !1, line: 114, type: !10)
!382 = !DILocalVariable(name: "DATA_y", arg: 4, scope: !377, file: !1, line: 115, type: !10)
!383 = !DILocalVariable(name: "data_x", arg: 5, scope: !377, file: !1, line: 115, type: !10)
!384 = !DILocalVariable(name: "data_y", arg: 6, scope: !377, file: !1, line: 115, type: !10)
!385 = !DILocalVariable(name: "smem", arg: 7, scope: !377, file: !1, line: 115, type: !10)
!386 = !DILocalVariable(name: "reversed", arg: 8, scope: !377, file: !1, line: 116, type: !10)
!387 = !DILocalVariable(name: "sin_64", arg: 9, scope: !377, file: !1, line: 117, type: !12)
!388 = !DILocalVariable(name: "cos_64", arg: 10, scope: !377, file: !1, line: 118, type: !12)
!389 = !DILocalVariable(name: "sin_512", arg: 11, scope: !377, file: !1, line: 119, type: !12)
!390 = !DILocalVariable(name: "cos_512", arg: 12, scope: !377, file: !1, line: 120, type: !12)
!391 = !DILocalVariable(name: "tid", scope: !377, file: !1, line: 124, type: !11)
!392 = !DILocalVariable(name: "hi", scope: !377, file: !1, line: 124, type: !11)
!393 = !DILocalVariable(name: "lo", scope: !377, file: !1, line: 124, type: !11)
!394 = !DILocalVariable(name: "i", scope: !377, file: !1, line: 124, type: !11)
!395 = !DILocalVariable(name: "j", scope: !377, file: !1, line: 124, type: !11)
!396 = !DILocalVariable(name: "stride", scope: !377, file: !1, line: 124, type: !11)
!397 = !DILocation(line: 114, column: 17, scope: !377)
!398 = !DILocation(line: 114, column: 32, scope: !377)
!399 = !DILocation(line: 114, column: 47, scope: !377)
!400 = !DILocation(line: 115, column: 8, scope: !377)
!401 = !DILocation(line: 115, column: 23, scope: !377)
!402 = !DILocation(line: 115, column: 38, scope: !377)
!403 = !DILocation(line: 115, column: 54, scope: !377)
!404 = !DILocation(line: 116, column: 7, scope: !377)
!405 = !DILocation(line: 117, column: 9, scope: !377)
!406 = !DILocation(line: 118, column: 9, scope: !377)
!407 = !DILocation(line: 119, column: 9, scope: !377)
!408 = !DILocation(line: 120, column: 9, scope: !377)
!409 = !DILocation(line: 124, column: 25, scope: !377)
!410 = !DILocation(line: 124, column: 6, scope: !377)
!411 = !DILocation(line: 126, column: 9, scope: !412)
!412 = distinct !DILexicalBlock(scope: !377, file: !1, line: 126, column: 9)
!413 = !DILocation(line: 124, column: 19, scope: !377)
!414 = !DILocation(line: 127, column: 10, scope: !415)
!415 = distinct !DILexicalBlock(scope: !416, file: !1, line: 127, column: 10)
!416 = distinct !DILexicalBlock(scope: !417, file: !1, line: 126, column: 38)
!417 = distinct !DILexicalBlock(scope: !412, file: !1, line: 126, column: 9)
!418 = !DILocation(line: 129, column: 29, scope: !419)
!419 = distinct !DILexicalBlock(scope: !420, file: !1, line: 127, column: 33)
!420 = distinct !DILexicalBlock(scope: !415, file: !1, line: 127, column: 10)
!421 = !DILocation(line: 129, column: 16, scope: !419)
!422 = !DILocation(line: 129, column: 4, scope: !419)
!423 = !DILocation(line: 129, column: 14, scope: !419)
!424 = !DILocation(line: 127, column: 30, scope: !420)
!425 = !DILocation(line: 127, column: 23, scope: !420)
!426 = distinct !{!426, !414, !427}
!427 = !DILocation(line: 130, column: 3, scope: !415)
!428 = !DILocation(line: 131, column: 11, scope: !416)
!429 = !DILocation(line: 124, column: 11, scope: !377)
!430 = !DILocation(line: 132, column: 11, scope: !416)
!431 = !DILocation(line: 124, column: 15, scope: !377)
!432 = !DILocation(line: 133, column: 3, scope: !433)
!433 = distinct !DILexicalBlock(scope: !416, file: !1, line: 133, column: 3)
!434 = !DILocation(line: 134, column: 11, scope: !435)
!435 = distinct !DILexicalBlock(scope: !416, file: !1, line: 134, column: 11)
!436 = !DILocation(line: 136, column: 24, scope: !437)
!437 = distinct !DILexicalBlock(scope: !438, file: !1, line: 134, column: 34)
!438 = distinct !DILexicalBlock(scope: !435, file: !1, line: 134, column: 11)
!439 = !DILocation(line: 136, column: 17, scope: !437)
!440 = !DILocation(line: 136, column: 4, scope: !437)
!441 = !DILocation(line: 136, column: 22, scope: !437)
!442 = !DILocation(line: 134, column: 31, scope: !438)
!443 = !DILocation(line: 134, column: 24, scope: !438)
!444 = distinct !{!444, !434, !445}
!445 = !DILocation(line: 137, column: 3, scope: !435)
!446 = !DILocation(line: 126, column: 35, scope: !417)
!447 = !DILocation(line: 126, column: 26, scope: !417)
!448 = distinct !{!448, !411, !449}
!449 = !DILocation(line: 138, column: 2, scope: !412)
!450 = !DILocation(line: 140, column: 1, scope: !377)
!451 = distinct !DISubprogram(name: "step6", scope: !1, file: !1, line: 141, type: !8, isLocal: false, isDefinition: true, scopeLine: 149, flags: DIFlagPrototyped, isOptimized: true, unit: !0, variables: !452)
!452 = !{!453, !454, !455, !456, !457, !458, !459, !460, !461, !462, !463, !464, !465, !466, !467, !468, !469, !470, !471, !476, !477, !478, !479, !480, !481, !482, !483, !485, !486, !488, !489, !491, !492, !494, !495, !497, !498, !499, !501, !502, !504, !505, !507, !508, !510, !511, !513, !514, !515, !517, !518, !520, !521, !523, !524, !526, !527, !531, !532}
!453 = !DILocalVariable(name: "work_x", arg: 1, scope: !451, file: !1, line: 141, type: !10)
!454 = !DILocalVariable(name: "work_y", arg: 2, scope: !451, file: !1, line: 141, type: !10)
!455 = !DILocalVariable(name: "DATA_x", arg: 3, scope: !451, file: !1, line: 141, type: !10)
!456 = !DILocalVariable(name: "DATA_y", arg: 4, scope: !451, file: !1, line: 142, type: !10)
!457 = !DILocalVariable(name: "data_x", arg: 5, scope: !451, file: !1, line: 142, type: !10)
!458 = !DILocalVariable(name: "data_y", arg: 6, scope: !451, file: !1, line: 142, type: !10)
!459 = !DILocalVariable(name: "smem", arg: 7, scope: !451, file: !1, line: 142, type: !10)
!460 = !DILocalVariable(name: "reversed", arg: 8, scope: !451, file: !1, line: 143, type: !10)
!461 = !DILocalVariable(name: "sin_64", arg: 9, scope: !451, file: !1, line: 144, type: !12)
!462 = !DILocalVariable(name: "cos_64", arg: 10, scope: !451, file: !1, line: 145, type: !12)
!463 = !DILocalVariable(name: "sin_512", arg: 11, scope: !451, file: !1, line: 146, type: !12)
!464 = !DILocalVariable(name: "cos_512", arg: 12, scope: !451, file: !1, line: 147, type: !12)
!465 = !DILocalVariable(name: "tid", scope: !451, file: !1, line: 150, type: !11)
!466 = !DILocalVariable(name: "hi", scope: !451, file: !1, line: 150, type: !11)
!467 = !DILocalVariable(name: "lo", scope: !451, file: !1, line: 150, type: !11)
!468 = !DILocalVariable(name: "i", scope: !451, file: !1, line: 150, type: !11)
!469 = !DILocalVariable(name: "j", scope: !451, file: !1, line: 150, type: !11)
!470 = !DILocalVariable(name: "stride", scope: !451, file: !1, line: 150, type: !11)
!471 = !DILocalVariable(name: "exp_1_8_x", scope: !472, file: !1, line: 161, type: !11)
!472 = distinct !DILexicalBlock(scope: !473, file: !1, line: 161, column: 3)
!473 = distinct !DILexicalBlock(scope: !474, file: !1, line: 153, column: 38)
!474 = distinct !DILexicalBlock(scope: !475, file: !1, line: 153, column: 9)
!475 = distinct !DILexicalBlock(scope: !451, file: !1, line: 153, column: 9)
!476 = !DILocalVariable(name: "exp_1_4_x", scope: !472, file: !1, line: 161, type: !11)
!477 = !DILocalVariable(name: "exp_3_8_x", scope: !472, file: !1, line: 161, type: !11)
!478 = !DILocalVariable(name: "exp_1_8_y", scope: !472, file: !1, line: 161, type: !11)
!479 = !DILocalVariable(name: "exp_1_4_y", scope: !472, file: !1, line: 161, type: !11)
!480 = !DILocalVariable(name: "exp_3_8_y", scope: !472, file: !1, line: 161, type: !11)
!481 = !DILocalVariable(name: "tmp_1", scope: !472, file: !1, line: 161, type: !11)
!482 = !DILocalVariable(name: "tmp_2", scope: !472, file: !1, line: 161, type: !11)
!483 = !DILocalVariable(name: "c0_x", scope: !484, file: !1, line: 161, type: !11)
!484 = distinct !DILexicalBlock(scope: !472, file: !1, line: 161, column: 3)
!485 = !DILocalVariable(name: "c0_y", scope: !484, file: !1, line: 161, type: !11)
!486 = !DILocalVariable(name: "c0_x", scope: !487, file: !1, line: 161, type: !11)
!487 = distinct !DILexicalBlock(scope: !472, file: !1, line: 161, column: 3)
!488 = !DILocalVariable(name: "c0_y", scope: !487, file: !1, line: 161, type: !11)
!489 = !DILocalVariable(name: "c0_x", scope: !490, file: !1, line: 161, type: !11)
!490 = distinct !DILexicalBlock(scope: !472, file: !1, line: 161, column: 3)
!491 = !DILocalVariable(name: "c0_y", scope: !490, file: !1, line: 161, type: !11)
!492 = !DILocalVariable(name: "c0_x", scope: !493, file: !1, line: 161, type: !11)
!493 = distinct !DILexicalBlock(scope: !472, file: !1, line: 161, column: 3)
!494 = !DILocalVariable(name: "c0_y", scope: !493, file: !1, line: 161, type: !11)
!495 = !DILocalVariable(name: "exp_1_44_x", scope: !496, file: !1, line: 161, type: !11)
!496 = distinct !DILexicalBlock(scope: !472, file: !1, line: 161, column: 3)
!497 = !DILocalVariable(name: "exp_1_44_y", scope: !496, file: !1, line: 161, type: !11)
!498 = !DILocalVariable(name: "tmp", scope: !496, file: !1, line: 161, type: !11)
!499 = !DILocalVariable(name: "c0_x", scope: !500, file: !1, line: 161, type: !11)
!500 = distinct !DILexicalBlock(scope: !496, file: !1, line: 161, column: 3)
!501 = !DILocalVariable(name: "c0_y", scope: !500, file: !1, line: 161, type: !11)
!502 = !DILocalVariable(name: "c0_x", scope: !503, file: !1, line: 161, type: !11)
!503 = distinct !DILexicalBlock(scope: !496, file: !1, line: 161, column: 3)
!504 = !DILocalVariable(name: "c0_y", scope: !503, file: !1, line: 161, type: !11)
!505 = !DILocalVariable(name: "c0_x", scope: !506, file: !1, line: 161, type: !11)
!506 = distinct !DILexicalBlock(scope: !496, file: !1, line: 161, column: 3)
!507 = !DILocalVariable(name: "c0_y", scope: !506, file: !1, line: 161, type: !11)
!508 = !DILocalVariable(name: "c0_x", scope: !509, file: !1, line: 161, type: !11)
!509 = distinct !DILexicalBlock(scope: !496, file: !1, line: 161, column: 3)
!510 = !DILocalVariable(name: "c0_y", scope: !509, file: !1, line: 161, type: !11)
!511 = !DILocalVariable(name: "exp_1_44_x", scope: !512, file: !1, line: 161, type: !11)
!512 = distinct !DILexicalBlock(scope: !472, file: !1, line: 161, column: 3)
!513 = !DILocalVariable(name: "exp_1_44_y", scope: !512, file: !1, line: 161, type: !11)
!514 = !DILocalVariable(name: "tmp", scope: !512, file: !1, line: 161, type: !11)
!515 = !DILocalVariable(name: "c0_x", scope: !516, file: !1, line: 161, type: !11)
!516 = distinct !DILexicalBlock(scope: !512, file: !1, line: 161, column: 3)
!517 = !DILocalVariable(name: "c0_y", scope: !516, file: !1, line: 161, type: !11)
!518 = !DILocalVariable(name: "c0_x", scope: !519, file: !1, line: 161, type: !11)
!519 = distinct !DILexicalBlock(scope: !512, file: !1, line: 161, column: 3)
!520 = !DILocalVariable(name: "c0_y", scope: !519, file: !1, line: 161, type: !11)
!521 = !DILocalVariable(name: "c0_x", scope: !522, file: !1, line: 161, type: !11)
!522 = distinct !DILexicalBlock(scope: !512, file: !1, line: 161, column: 3)
!523 = !DILocalVariable(name: "c0_y", scope: !522, file: !1, line: 161, type: !11)
!524 = !DILocalVariable(name: "c0_x", scope: !525, file: !1, line: 161, type: !11)
!525 = distinct !DILexicalBlock(scope: !512, file: !1, line: 161, column: 3)
!526 = !DILocalVariable(name: "c0_y", scope: !525, file: !1, line: 161, type: !11)
!527 = !DILocalVariable(name: "A_x", scope: !528, file: !1, line: 169, type: !11)
!528 = distinct !DILexicalBlock(scope: !529, file: !1, line: 168, column: 37)
!529 = distinct !DILexicalBlock(scope: !530, file: !1, line: 168, column: 15)
!530 = distinct !DILexicalBlock(scope: !473, file: !1, line: 168, column: 15)
!531 = !DILocalVariable(name: "A_y", scope: !528, file: !1, line: 169, type: !11)
!532 = !DILocalVariable(name: "tmp", scope: !528, file: !1, line: 169, type: !11)
!533 = !DILocation(line: 141, column: 17, scope: !451)
!534 = !DILocation(line: 141, column: 32, scope: !451)
!535 = !DILocation(line: 141, column: 47, scope: !451)
!536 = !DILocation(line: 142, column: 8, scope: !451)
!537 = !DILocation(line: 142, column: 23, scope: !451)
!538 = !DILocation(line: 142, column: 38, scope: !451)
!539 = !DILocation(line: 142, column: 54, scope: !451)
!540 = !DILocation(line: 143, column: 7, scope: !451)
!541 = !DILocation(line: 144, column: 9, scope: !451)
!542 = !DILocation(line: 145, column: 9, scope: !451)
!543 = !DILocation(line: 146, column: 9, scope: !451)
!544 = !DILocation(line: 147, column: 9, scope: !451)
!545 = !DILocation(line: 150, column: 25, scope: !451)
!546 = !DILocation(line: 150, column: 6, scope: !451)
!547 = !DILocation(line: 153, column: 9, scope: !475)
!548 = !DILocation(line: 150, column: 19, scope: !451)
!549 = !DILocation(line: 155, column: 10, scope: !550)
!550 = distinct !DILexicalBlock(scope: !473, file: !1, line: 155, column: 10)
!551 = !DILocation(line: 156, column: 29, scope: !552)
!552 = distinct !DILexicalBlock(scope: !553, file: !1, line: 155, column: 33)
!553 = distinct !DILexicalBlock(scope: !550, file: !1, line: 155, column: 10)
!554 = !DILocation(line: 156, column: 16, scope: !552)
!555 = !DILocation(line: 156, column: 4, scope: !552)
!556 = !DILocation(line: 156, column: 14, scope: !552)
!557 = !DILocation(line: 157, column: 16, scope: !552)
!558 = !DILocation(line: 157, column: 4, scope: !552)
!559 = !DILocation(line: 157, column: 14, scope: !552)
!560 = !DILocation(line: 155, column: 30, scope: !553)
!561 = !DILocation(line: 155, column: 23, scope: !553)
!562 = distinct !{!562, !549, !563}
!563 = !DILocation(line: 158, column: 3, scope: !550)
!564 = !DILocation(line: 161, column: 3, scope: !472)
!565 = !DILocation(line: 161, column: 3, scope: !484)
!566 = !DILocation(line: 161, column: 3, scope: !487)
!567 = !DILocation(line: 161, column: 3, scope: !490)
!568 = !DILocation(line: 161, column: 3, scope: !493)
!569 = !DILocation(line: 161, column: 3, scope: !496)
!570 = !DILocation(line: 161, column: 3, scope: !500)
!571 = !DILocation(line: 161, column: 3, scope: !503)
!572 = !DILocation(line: 161, column: 3, scope: !506)
!573 = !DILocation(line: 161, column: 3, scope: !509)
!574 = !DILocation(line: 161, column: 3, scope: !512)
!575 = !DILocation(line: 161, column: 3, scope: !516)
!576 = !DILocation(line: 161, column: 3, scope: !519)
!577 = !DILocation(line: 161, column: 3, scope: !522)
!578 = !DILocation(line: 161, column: 3, scope: !525)
!579 = !DILocation(line: 164, column: 11, scope: !473)
!580 = !DILocation(line: 150, column: 11, scope: !451)
!581 = !DILocation(line: 150, column: 22, scope: !451)
!582 = !DILocation(line: 168, column: 15, scope: !530)
!583 = !DILocation(line: 170, column: 32, scope: !528)
!584 = !DILocation(line: 170, column: 19, scope: !528)
!585 = !DILocation(line: 169, column: 18, scope: !528)
!586 = !DILocation(line: 171, column: 19, scope: !528)
!587 = !DILocation(line: 169, column: 23, scope: !528)
!588 = !DILocation(line: 172, column: 19, scope: !528)
!589 = !DILocation(line: 169, column: 28, scope: !528)
!590 = !DILocation(line: 173, column: 25, scope: !528)
!591 = !DILocation(line: 173, column: 23, scope: !528)
!592 = !DILocation(line: 174, column: 25, scope: !528)
!593 = !DILocation(line: 174, column: 23, scope: !528)
!594 = !DILocation(line: 168, column: 34, scope: !529)
!595 = !DILocation(line: 168, column: 28, scope: !529)
!596 = distinct !{!596, !582, !597}
!597 = !DILocation(line: 175, column: 5, scope: !530)
!598 = !DILocation(line: 178, column: 10, scope: !599)
!599 = distinct !DILexicalBlock(scope: !473, file: !1, line: 178, column: 10)
!600 = !DILocation(line: 179, column: 24, scope: !601)
!601 = distinct !DILexicalBlock(scope: !602, file: !1, line: 178, column: 33)
!602 = distinct !DILexicalBlock(scope: !599, file: !1, line: 178, column: 10)
!603 = !DILocation(line: 179, column: 17, scope: !601)
!604 = !DILocation(line: 179, column: 4, scope: !601)
!605 = !DILocation(line: 179, column: 22, scope: !601)
!606 = !DILocation(line: 180, column: 24, scope: !601)
!607 = !DILocation(line: 180, column: 4, scope: !601)
!608 = !DILocation(line: 180, column: 22, scope: !601)
!609 = !DILocation(line: 178, column: 30, scope: !602)
!610 = !DILocation(line: 178, column: 23, scope: !602)
!611 = distinct !{!611, !598, !612}
!612 = !DILocation(line: 181, column: 3, scope: !599)
!613 = !DILocation(line: 153, column: 35, scope: !474)
!614 = !DILocation(line: 153, column: 26, scope: !474)
!615 = distinct !{!615, !547, !616}
!616 = !DILocation(line: 182, column: 2, scope: !475)
!617 = !DILocation(line: 184, column: 1, scope: !451)
!618 = distinct !DISubprogram(name: "step7", scope: !1, file: !1, line: 185, type: !8, isLocal: false, isDefinition: true, scopeLine: 193, flags: DIFlagPrototyped, isOptimized: true, unit: !0, variables: !619)
!619 = !{!620, !621, !622, !623, !624, !625, !626, !627, !628, !629, !630, !631, !632, !633, !634, !635, !636, !637}
!620 = !DILocalVariable(name: "work_x", arg: 1, scope: !618, file: !1, line: 185, type: !10)
!621 = !DILocalVariable(name: "work_y", arg: 2, scope: !618, file: !1, line: 185, type: !10)
!622 = !DILocalVariable(name: "DATA_x", arg: 3, scope: !618, file: !1, line: 185, type: !10)
!623 = !DILocalVariable(name: "DATA_y", arg: 4, scope: !618, file: !1, line: 186, type: !10)
!624 = !DILocalVariable(name: "data_x", arg: 5, scope: !618, file: !1, line: 186, type: !10)
!625 = !DILocalVariable(name: "data_y", arg: 6, scope: !618, file: !1, line: 186, type: !10)
!626 = !DILocalVariable(name: "smem", arg: 7, scope: !618, file: !1, line: 186, type: !10)
!627 = !DILocalVariable(name: "reversed", arg: 8, scope: !618, file: !1, line: 187, type: !10)
!628 = !DILocalVariable(name: "sin_64", arg: 9, scope: !618, file: !1, line: 188, type: !12)
!629 = !DILocalVariable(name: "cos_64", arg: 10, scope: !618, file: !1, line: 189, type: !12)
!630 = !DILocalVariable(name: "sin_512", arg: 11, scope: !618, file: !1, line: 190, type: !12)
!631 = !DILocalVariable(name: "cos_512", arg: 12, scope: !618, file: !1, line: 191, type: !12)
!632 = !DILocalVariable(name: "tid", scope: !618, file: !1, line: 194, type: !11)
!633 = !DILocalVariable(name: "hi", scope: !618, file: !1, line: 194, type: !11)
!634 = !DILocalVariable(name: "lo", scope: !618, file: !1, line: 194, type: !11)
!635 = !DILocalVariable(name: "i", scope: !618, file: !1, line: 194, type: !11)
!636 = !DILocalVariable(name: "j", scope: !618, file: !1, line: 194, type: !11)
!637 = !DILocalVariable(name: "stride", scope: !618, file: !1, line: 194, type: !11)
!638 = !DILocation(line: 185, column: 17, scope: !618)
!639 = !DILocation(line: 185, column: 32, scope: !618)
!640 = !DILocation(line: 185, column: 47, scope: !618)
!641 = !DILocation(line: 186, column: 8, scope: !618)
!642 = !DILocation(line: 186, column: 23, scope: !618)
!643 = !DILocation(line: 186, column: 38, scope: !618)
!644 = !DILocation(line: 186, column: 54, scope: !618)
!645 = !DILocation(line: 187, column: 7, scope: !618)
!646 = !DILocation(line: 188, column: 9, scope: !618)
!647 = !DILocation(line: 189, column: 9, scope: !618)
!648 = !DILocation(line: 190, column: 9, scope: !618)
!649 = !DILocation(line: 191, column: 9, scope: !618)
!650 = !DILocation(line: 194, column: 25, scope: !618)
!651 = !DILocation(line: 194, column: 6, scope: !618)
!652 = !DILocation(line: 197, column: 9, scope: !653)
!653 = distinct !DILexicalBlock(scope: !618, file: !1, line: 197, column: 9)
!654 = !DILocation(line: 194, column: 19, scope: !618)
!655 = !DILocation(line: 198, column: 10, scope: !656)
!656 = distinct !DILexicalBlock(scope: !657, file: !1, line: 198, column: 10)
!657 = distinct !DILexicalBlock(scope: !658, file: !1, line: 197, column: 38)
!658 = distinct !DILexicalBlock(scope: !653, file: !1, line: 197, column: 9)
!659 = !DILocation(line: 199, column: 29, scope: !660)
!660 = distinct !DILexicalBlock(scope: !661, file: !1, line: 198, column: 33)
!661 = distinct !DILexicalBlock(scope: !656, file: !1, line: 198, column: 10)
!662 = !DILocation(line: 199, column: 16, scope: !660)
!663 = !DILocation(line: 199, column: 4, scope: !660)
!664 = !DILocation(line: 199, column: 14, scope: !660)
!665 = !DILocation(line: 198, column: 30, scope: !661)
!666 = !DILocation(line: 198, column: 23, scope: !661)
!667 = distinct !{!667, !655, !668}
!668 = !DILocation(line: 201, column: 3, scope: !656)
!669 = !DILocation(line: 204, column: 3, scope: !670)
!670 = distinct !DILexicalBlock(scope: !657, file: !1, line: 204, column: 3)
!671 = !DILocation(line: 203, column: 11, scope: !657)
!672 = !DILocation(line: 194, column: 15, scope: !618)
!673 = !DILocation(line: 197, column: 35, scope: !658)
!674 = !DILocation(line: 197, column: 26, scope: !658)
!675 = distinct !{!675, !652, !676}
!676 = !DILocation(line: 205, column: 2, scope: !653)
!677 = !DILocation(line: 207, column: 1, scope: !618)
!678 = distinct !DISubprogram(name: "step8", scope: !1, file: !1, line: 208, type: !8, isLocal: false, isDefinition: true, scopeLine: 216, flags: DIFlagPrototyped, isOptimized: true, unit: !0, variables: !679)
!679 = !{!680, !681, !682, !683, !684, !685, !686, !687, !688, !689, !690, !691, !692, !693, !694, !695, !696, !697}
!680 = !DILocalVariable(name: "work_x", arg: 1, scope: !678, file: !1, line: 208, type: !10)
!681 = !DILocalVariable(name: "work_y", arg: 2, scope: !678, file: !1, line: 208, type: !10)
!682 = !DILocalVariable(name: "DATA_x", arg: 3, scope: !678, file: !1, line: 208, type: !10)
!683 = !DILocalVariable(name: "DATA_y", arg: 4, scope: !678, file: !1, line: 209, type: !10)
!684 = !DILocalVariable(name: "data_x", arg: 5, scope: !678, file: !1, line: 209, type: !10)
!685 = !DILocalVariable(name: "data_y", arg: 6, scope: !678, file: !1, line: 209, type: !10)
!686 = !DILocalVariable(name: "smem", arg: 7, scope: !678, file: !1, line: 209, type: !10)
!687 = !DILocalVariable(name: "reversed", arg: 8, scope: !678, file: !1, line: 210, type: !10)
!688 = !DILocalVariable(name: "sin_64", arg: 9, scope: !678, file: !1, line: 211, type: !12)
!689 = !DILocalVariable(name: "cos_64", arg: 10, scope: !678, file: !1, line: 212, type: !12)
!690 = !DILocalVariable(name: "sin_512", arg: 11, scope: !678, file: !1, line: 213, type: !12)
!691 = !DILocalVariable(name: "cos_512", arg: 12, scope: !678, file: !1, line: 214, type: !12)
!692 = !DILocalVariable(name: "tid", scope: !678, file: !1, line: 217, type: !11)
!693 = !DILocalVariable(name: "hi", scope: !678, file: !1, line: 217, type: !11)
!694 = !DILocalVariable(name: "lo", scope: !678, file: !1, line: 217, type: !11)
!695 = !DILocalVariable(name: "i", scope: !678, file: !1, line: 217, type: !11)
!696 = !DILocalVariable(name: "j", scope: !678, file: !1, line: 217, type: !11)
!697 = !DILocalVariable(name: "stride", scope: !678, file: !1, line: 217, type: !11)
!698 = !DILocation(line: 208, column: 17, scope: !678)
!699 = !DILocation(line: 208, column: 32, scope: !678)
!700 = !DILocation(line: 208, column: 47, scope: !678)
!701 = !DILocation(line: 209, column: 8, scope: !678)
!702 = !DILocation(line: 209, column: 23, scope: !678)
!703 = !DILocation(line: 209, column: 38, scope: !678)
!704 = !DILocation(line: 209, column: 54, scope: !678)
!705 = !DILocation(line: 210, column: 7, scope: !678)
!706 = !DILocation(line: 211, column: 9, scope: !678)
!707 = !DILocation(line: 212, column: 9, scope: !678)
!708 = !DILocation(line: 213, column: 9, scope: !678)
!709 = !DILocation(line: 214, column: 9, scope: !678)
!710 = !DILocation(line: 217, column: 25, scope: !678)
!711 = !DILocation(line: 217, column: 6, scope: !678)
!712 = !DILocation(line: 220, column: 9, scope: !713)
!713 = distinct !DILexicalBlock(scope: !678, file: !1, line: 220, column: 9)
!714 = !DILocation(line: 217, column: 19, scope: !678)
!715 = !DILocation(line: 221, column: 10, scope: !716)
!716 = distinct !DILexicalBlock(scope: !717, file: !1, line: 221, column: 10)
!717 = distinct !DILexicalBlock(scope: !718, file: !1, line: 220, column: 38)
!718 = distinct !DILexicalBlock(scope: !713, file: !1, line: 220, column: 9)
!719 = !DILocation(line: 222, column: 29, scope: !720)
!720 = distinct !DILexicalBlock(scope: !721, file: !1, line: 221, column: 33)
!721 = distinct !DILexicalBlock(scope: !716, file: !1, line: 221, column: 10)
!722 = !DILocation(line: 222, column: 16, scope: !720)
!723 = !DILocation(line: 222, column: 4, scope: !720)
!724 = !DILocation(line: 222, column: 14, scope: !720)
!725 = !DILocation(line: 221, column: 30, scope: !721)
!726 = !DILocation(line: 221, column: 23, scope: !721)
!727 = distinct !{!727, !715, !728}
!728 = !DILocation(line: 224, column: 3, scope: !716)
!729 = !DILocation(line: 225, column: 11, scope: !717)
!730 = !DILocation(line: 217, column: 11, scope: !678)
!731 = !DILocation(line: 226, column: 11, scope: !717)
!732 = !DILocation(line: 217, column: 15, scope: !678)
!733 = !DILocation(line: 227, column: 3, scope: !734)
!734 = distinct !DILexicalBlock(scope: !717, file: !1, line: 227, column: 3)
!735 = !DILocation(line: 228, column: 11, scope: !736)
!736 = distinct !DILexicalBlock(scope: !717, file: !1, line: 228, column: 11)
!737 = !DILocation(line: 229, column: 24, scope: !738)
!738 = distinct !DILexicalBlock(scope: !739, file: !1, line: 228, column: 34)
!739 = distinct !DILexicalBlock(scope: !736, file: !1, line: 228, column: 11)
!740 = !DILocation(line: 229, column: 17, scope: !738)
!741 = !DILocation(line: 229, column: 4, scope: !738)
!742 = !DILocation(line: 229, column: 22, scope: !738)
!743 = !DILocation(line: 228, column: 31, scope: !739)
!744 = !DILocation(line: 228, column: 24, scope: !739)
!745 = distinct !{!745, !735, !746}
!746 = !DILocation(line: 231, column: 3, scope: !736)
!747 = !DILocation(line: 220, column: 35, scope: !718)
!748 = !DILocation(line: 220, column: 26, scope: !718)
!749 = distinct !{!749, !712, !750}
!750 = !DILocation(line: 232, column: 2, scope: !713)
!751 = !DILocation(line: 234, column: 1, scope: !678)
!752 = distinct !DISubprogram(name: "step9", scope: !1, file: !1, line: 235, type: !8, isLocal: false, isDefinition: true, scopeLine: 243, flags: DIFlagPrototyped, isOptimized: true, unit: !0, variables: !753)
!753 = !{!754, !755, !756, !757, !758, !759, !760, !761, !762, !763, !764, !765, !766, !767, !768, !769, !770, !771}
!754 = !DILocalVariable(name: "work_x", arg: 1, scope: !752, file: !1, line: 235, type: !10)
!755 = !DILocalVariable(name: "work_y", arg: 2, scope: !752, file: !1, line: 235, type: !10)
!756 = !DILocalVariable(name: "DATA_x", arg: 3, scope: !752, file: !1, line: 235, type: !10)
!757 = !DILocalVariable(name: "DATA_y", arg: 4, scope: !752, file: !1, line: 236, type: !10)
!758 = !DILocalVariable(name: "data_x", arg: 5, scope: !752, file: !1, line: 236, type: !10)
!759 = !DILocalVariable(name: "data_y", arg: 6, scope: !752, file: !1, line: 236, type: !10)
!760 = !DILocalVariable(name: "smem", arg: 7, scope: !752, file: !1, line: 236, type: !10)
!761 = !DILocalVariable(name: "reversed", arg: 8, scope: !752, file: !1, line: 237, type: !10)
!762 = !DILocalVariable(name: "sin_64", arg: 9, scope: !752, file: !1, line: 238, type: !12)
!763 = !DILocalVariable(name: "cos_64", arg: 10, scope: !752, file: !1, line: 239, type: !12)
!764 = !DILocalVariable(name: "sin_512", arg: 11, scope: !752, file: !1, line: 240, type: !12)
!765 = !DILocalVariable(name: "cos_512", arg: 12, scope: !752, file: !1, line: 241, type: !12)
!766 = !DILocalVariable(name: "tid", scope: !752, file: !1, line: 245, type: !11)
!767 = !DILocalVariable(name: "hi", scope: !752, file: !1, line: 245, type: !11)
!768 = !DILocalVariable(name: "lo", scope: !752, file: !1, line: 245, type: !11)
!769 = !DILocalVariable(name: "i", scope: !752, file: !1, line: 245, type: !11)
!770 = !DILocalVariable(name: "j", scope: !752, file: !1, line: 245, type: !11)
!771 = !DILocalVariable(name: "stride", scope: !752, file: !1, line: 245, type: !11)
!772 = !DILocation(line: 235, column: 17, scope: !752)
!773 = !DILocation(line: 235, column: 32, scope: !752)
!774 = !DILocation(line: 235, column: 47, scope: !752)
!775 = !DILocation(line: 236, column: 8, scope: !752)
!776 = !DILocation(line: 236, column: 23, scope: !752)
!777 = !DILocation(line: 236, column: 38, scope: !752)
!778 = !DILocation(line: 236, column: 54, scope: !752)
!779 = !DILocation(line: 237, column: 7, scope: !752)
!780 = !DILocation(line: 238, column: 9, scope: !752)
!781 = !DILocation(line: 239, column: 9, scope: !752)
!782 = !DILocation(line: 240, column: 9, scope: !752)
!783 = !DILocation(line: 241, column: 9, scope: !752)
!784 = !DILocation(line: 245, column: 25, scope: !752)
!785 = !DILocation(line: 245, column: 6, scope: !752)
!786 = !DILocation(line: 247, column: 9, scope: !787)
!787 = distinct !DILexicalBlock(scope: !752, file: !1, line: 247, column: 9)
!788 = !DILocation(line: 245, column: 19, scope: !752)
!789 = !DILocation(line: 248, column: 10, scope: !790)
!790 = distinct !DILexicalBlock(scope: !791, file: !1, line: 248, column: 10)
!791 = distinct !DILexicalBlock(scope: !792, file: !1, line: 247, column: 38)
!792 = distinct !DILexicalBlock(scope: !787, file: !1, line: 247, column: 9)
!793 = !DILocation(line: 250, column: 29, scope: !794)
!794 = distinct !DILexicalBlock(scope: !795, file: !1, line: 248, column: 33)
!795 = distinct !DILexicalBlock(scope: !790, file: !1, line: 248, column: 10)
!796 = !DILocation(line: 250, column: 16, scope: !794)
!797 = !DILocation(line: 250, column: 4, scope: !794)
!798 = !DILocation(line: 250, column: 14, scope: !794)
!799 = !DILocation(line: 248, column: 30, scope: !795)
!800 = !DILocation(line: 248, column: 23, scope: !795)
!801 = distinct !{!801, !789, !802}
!802 = !DILocation(line: 251, column: 3, scope: !790)
!803 = !DILocation(line: 254, column: 3, scope: !804)
!804 = distinct !DILexicalBlock(scope: !791, file: !1, line: 254, column: 3)
!805 = !DILocation(line: 253, column: 11, scope: !791)
!806 = !DILocation(line: 245, column: 15, scope: !752)
!807 = !DILocation(line: 247, column: 35, scope: !792)
!808 = !DILocation(line: 247, column: 26, scope: !792)
!809 = distinct !{!809, !786, !810}
!810 = !DILocation(line: 255, column: 2, scope: !787)
!811 = !DILocation(line: 257, column: 1, scope: !752)
!812 = distinct !DISubprogram(name: "step10", scope: !1, file: !1, line: 258, type: !8, isLocal: false, isDefinition: true, scopeLine: 266, flags: DIFlagPrototyped, isOptimized: true, unit: !0, variables: !813)
!813 = !{!814, !815, !816, !817, !818, !819, !820, !821, !822, !823, !824, !825, !826, !827, !828, !829, !830, !831}
!814 = !DILocalVariable(name: "work_x", arg: 1, scope: !812, file: !1, line: 258, type: !10)
!815 = !DILocalVariable(name: "work_y", arg: 2, scope: !812, file: !1, line: 258, type: !10)
!816 = !DILocalVariable(name: "DATA_x", arg: 3, scope: !812, file: !1, line: 258, type: !10)
!817 = !DILocalVariable(name: "DATA_y", arg: 4, scope: !812, file: !1, line: 259, type: !10)
!818 = !DILocalVariable(name: "data_x", arg: 5, scope: !812, file: !1, line: 259, type: !10)
!819 = !DILocalVariable(name: "data_y", arg: 6, scope: !812, file: !1, line: 259, type: !10)
!820 = !DILocalVariable(name: "smem", arg: 7, scope: !812, file: !1, line: 259, type: !10)
!821 = !DILocalVariable(name: "reversed", arg: 8, scope: !812, file: !1, line: 260, type: !10)
!822 = !DILocalVariable(name: "sin_64", arg: 9, scope: !812, file: !1, line: 261, type: !12)
!823 = !DILocalVariable(name: "cos_64", arg: 10, scope: !812, file: !1, line: 262, type: !12)
!824 = !DILocalVariable(name: "sin_512", arg: 11, scope: !812, file: !1, line: 263, type: !12)
!825 = !DILocalVariable(name: "cos_512", arg: 12, scope: !812, file: !1, line: 264, type: !12)
!826 = !DILocalVariable(name: "tid", scope: !812, file: !1, line: 268, type: !11)
!827 = !DILocalVariable(name: "hi", scope: !812, file: !1, line: 268, type: !11)
!828 = !DILocalVariable(name: "lo", scope: !812, file: !1, line: 268, type: !11)
!829 = !DILocalVariable(name: "i", scope: !812, file: !1, line: 268, type: !11)
!830 = !DILocalVariable(name: "j", scope: !812, file: !1, line: 268, type: !11)
!831 = !DILocalVariable(name: "stride", scope: !812, file: !1, line: 268, type: !11)
!832 = !DILocation(line: 258, column: 18, scope: !812)
!833 = !DILocation(line: 258, column: 33, scope: !812)
!834 = !DILocation(line: 258, column: 48, scope: !812)
!835 = !DILocation(line: 259, column: 8, scope: !812)
!836 = !DILocation(line: 259, column: 23, scope: !812)
!837 = !DILocation(line: 259, column: 38, scope: !812)
!838 = !DILocation(line: 259, column: 54, scope: !812)
!839 = !DILocation(line: 260, column: 7, scope: !812)
!840 = !DILocation(line: 261, column: 9, scope: !812)
!841 = !DILocation(line: 262, column: 9, scope: !812)
!842 = !DILocation(line: 263, column: 9, scope: !812)
!843 = !DILocation(line: 264, column: 9, scope: !812)
!844 = !DILocation(line: 268, column: 25, scope: !812)
!845 = !DILocation(line: 268, column: 6, scope: !812)
!846 = !DILocation(line: 270, column: 9, scope: !847)
!847 = distinct !DILexicalBlock(scope: !812, file: !1, line: 270, column: 9)
!848 = !DILocation(line: 268, column: 19, scope: !812)
!849 = !DILocation(line: 271, column: 10, scope: !850)
!850 = distinct !DILexicalBlock(scope: !851, file: !1, line: 271, column: 10)
!851 = distinct !DILexicalBlock(scope: !852, file: !1, line: 270, column: 38)
!852 = distinct !DILexicalBlock(scope: !847, file: !1, line: 270, column: 9)
!853 = !DILocation(line: 273, column: 29, scope: !854)
!854 = distinct !DILexicalBlock(scope: !855, file: !1, line: 271, column: 33)
!855 = distinct !DILexicalBlock(scope: !850, file: !1, line: 271, column: 10)
!856 = !DILocation(line: 273, column: 16, scope: !854)
!857 = !DILocation(line: 273, column: 4, scope: !854)
!858 = !DILocation(line: 273, column: 14, scope: !854)
!859 = !DILocation(line: 271, column: 30, scope: !855)
!860 = !DILocation(line: 271, column: 23, scope: !855)
!861 = distinct !{!861, !849, !862}
!862 = !DILocation(line: 274, column: 3, scope: !850)
!863 = !DILocation(line: 275, column: 11, scope: !851)
!864 = !DILocation(line: 268, column: 11, scope: !812)
!865 = !DILocation(line: 276, column: 11, scope: !851)
!866 = !DILocation(line: 268, column: 15, scope: !812)
!867 = !DILocation(line: 277, column: 3, scope: !868)
!868 = distinct !DILexicalBlock(scope: !851, file: !1, line: 277, column: 3)
!869 = !DILocation(line: 278, column: 11, scope: !870)
!870 = distinct !DILexicalBlock(scope: !851, file: !1, line: 278, column: 11)
!871 = !DILocation(line: 280, column: 24, scope: !872)
!872 = distinct !DILexicalBlock(scope: !873, file: !1, line: 278, column: 34)
!873 = distinct !DILexicalBlock(scope: !870, file: !1, line: 278, column: 11)
!874 = !DILocation(line: 280, column: 17, scope: !872)
!875 = !DILocation(line: 280, column: 4, scope: !872)
!876 = !DILocation(line: 280, column: 22, scope: !872)
!877 = !DILocation(line: 278, column: 31, scope: !873)
!878 = !DILocation(line: 278, column: 24, scope: !873)
!879 = distinct !{!879, !869, !880}
!880 = !DILocation(line: 281, column: 3, scope: !870)
!881 = !DILocation(line: 270, column: 35, scope: !852)
!882 = !DILocation(line: 270, column: 26, scope: !852)
!883 = distinct !{!883, !846, !884}
!884 = !DILocation(line: 282, column: 2, scope: !847)
!885 = !DILocation(line: 284, column: 1, scope: !812)
!886 = distinct !DISubprogram(name: "step11", scope: !1, file: !1, line: 285, type: !8, isLocal: false, isDefinition: true, scopeLine: 293, flags: DIFlagPrototyped, isOptimized: true, unit: !0, variables: !887)
!887 = !{!888, !889, !890, !891, !892, !893, !894, !895, !896, !897, !898, !899, !900, !901, !902, !903, !904, !905, !906, !911, !912, !913, !914, !915, !916, !917, !918, !920, !921, !923, !924, !926, !927, !929, !930, !932, !933, !934, !936, !937, !939, !940, !942, !943, !945, !946, !948, !949, !950, !952, !953, !955, !956, !958, !959, !961}
!888 = !DILocalVariable(name: "work_x", arg: 1, scope: !886, file: !1, line: 285, type: !10)
!889 = !DILocalVariable(name: "work_y", arg: 2, scope: !886, file: !1, line: 285, type: !10)
!890 = !DILocalVariable(name: "DATA_x", arg: 3, scope: !886, file: !1, line: 285, type: !10)
!891 = !DILocalVariable(name: "DATA_y", arg: 4, scope: !886, file: !1, line: 286, type: !10)
!892 = !DILocalVariable(name: "data_x", arg: 5, scope: !886, file: !1, line: 286, type: !10)
!893 = !DILocalVariable(name: "data_y", arg: 6, scope: !886, file: !1, line: 286, type: !10)
!894 = !DILocalVariable(name: "smem", arg: 7, scope: !886, file: !1, line: 286, type: !10)
!895 = !DILocalVariable(name: "reversed", arg: 8, scope: !886, file: !1, line: 287, type: !10)
!896 = !DILocalVariable(name: "sin_64", arg: 9, scope: !886, file: !1, line: 288, type: !12)
!897 = !DILocalVariable(name: "cos_64", arg: 10, scope: !886, file: !1, line: 289, type: !12)
!898 = !DILocalVariable(name: "sin_512", arg: 11, scope: !886, file: !1, line: 290, type: !12)
!899 = !DILocalVariable(name: "cos_512", arg: 12, scope: !886, file: !1, line: 291, type: !12)
!900 = !DILocalVariable(name: "tid", scope: !886, file: !1, line: 295, type: !11)
!901 = !DILocalVariable(name: "hi", scope: !886, file: !1, line: 295, type: !11)
!902 = !DILocalVariable(name: "lo", scope: !886, file: !1, line: 295, type: !11)
!903 = !DILocalVariable(name: "i", scope: !886, file: !1, line: 295, type: !11)
!904 = !DILocalVariable(name: "j", scope: !886, file: !1, line: 295, type: !11)
!905 = !DILocalVariable(name: "stride", scope: !886, file: !1, line: 295, type: !11)
!906 = !DILocalVariable(name: "exp_1_8_x", scope: !907, file: !1, line: 305, type: !11)
!907 = distinct !DILexicalBlock(scope: !908, file: !1, line: 305, column: 3)
!908 = distinct !DILexicalBlock(scope: !909, file: !1, line: 297, column: 38)
!909 = distinct !DILexicalBlock(scope: !910, file: !1, line: 297, column: 9)
!910 = distinct !DILexicalBlock(scope: !886, file: !1, line: 297, column: 9)
!911 = !DILocalVariable(name: "exp_1_4_x", scope: !907, file: !1, line: 305, type: !11)
!912 = !DILocalVariable(name: "exp_3_8_x", scope: !907, file: !1, line: 305, type: !11)
!913 = !DILocalVariable(name: "exp_1_8_y", scope: !907, file: !1, line: 305, type: !11)
!914 = !DILocalVariable(name: "exp_1_4_y", scope: !907, file: !1, line: 305, type: !11)
!915 = !DILocalVariable(name: "exp_3_8_y", scope: !907, file: !1, line: 305, type: !11)
!916 = !DILocalVariable(name: "tmp_1", scope: !907, file: !1, line: 305, type: !11)
!917 = !DILocalVariable(name: "tmp_2", scope: !907, file: !1, line: 305, type: !11)
!918 = !DILocalVariable(name: "c0_x", scope: !919, file: !1, line: 305, type: !11)
!919 = distinct !DILexicalBlock(scope: !907, file: !1, line: 305, column: 3)
!920 = !DILocalVariable(name: "c0_y", scope: !919, file: !1, line: 305, type: !11)
!921 = !DILocalVariable(name: "c0_x", scope: !922, file: !1, line: 305, type: !11)
!922 = distinct !DILexicalBlock(scope: !907, file: !1, line: 305, column: 3)
!923 = !DILocalVariable(name: "c0_y", scope: !922, file: !1, line: 305, type: !11)
!924 = !DILocalVariable(name: "c0_x", scope: !925, file: !1, line: 305, type: !11)
!925 = distinct !DILexicalBlock(scope: !907, file: !1, line: 305, column: 3)
!926 = !DILocalVariable(name: "c0_y", scope: !925, file: !1, line: 305, type: !11)
!927 = !DILocalVariable(name: "c0_x", scope: !928, file: !1, line: 305, type: !11)
!928 = distinct !DILexicalBlock(scope: !907, file: !1, line: 305, column: 3)
!929 = !DILocalVariable(name: "c0_y", scope: !928, file: !1, line: 305, type: !11)
!930 = !DILocalVariable(name: "exp_1_44_x", scope: !931, file: !1, line: 305, type: !11)
!931 = distinct !DILexicalBlock(scope: !907, file: !1, line: 305, column: 3)
!932 = !DILocalVariable(name: "exp_1_44_y", scope: !931, file: !1, line: 305, type: !11)
!933 = !DILocalVariable(name: "tmp", scope: !931, file: !1, line: 305, type: !11)
!934 = !DILocalVariable(name: "c0_x", scope: !935, file: !1, line: 305, type: !11)
!935 = distinct !DILexicalBlock(scope: !931, file: !1, line: 305, column: 3)
!936 = !DILocalVariable(name: "c0_y", scope: !935, file: !1, line: 305, type: !11)
!937 = !DILocalVariable(name: "c0_x", scope: !938, file: !1, line: 305, type: !11)
!938 = distinct !DILexicalBlock(scope: !931, file: !1, line: 305, column: 3)
!939 = !DILocalVariable(name: "c0_y", scope: !938, file: !1, line: 305, type: !11)
!940 = !DILocalVariable(name: "c0_x", scope: !941, file: !1, line: 305, type: !11)
!941 = distinct !DILexicalBlock(scope: !931, file: !1, line: 305, column: 3)
!942 = !DILocalVariable(name: "c0_y", scope: !941, file: !1, line: 305, type: !11)
!943 = !DILocalVariable(name: "c0_x", scope: !944, file: !1, line: 305, type: !11)
!944 = distinct !DILexicalBlock(scope: !931, file: !1, line: 305, column: 3)
!945 = !DILocalVariable(name: "c0_y", scope: !944, file: !1, line: 305, type: !11)
!946 = !DILocalVariable(name: "exp_1_44_x", scope: !947, file: !1, line: 305, type: !11)
!947 = distinct !DILexicalBlock(scope: !907, file: !1, line: 305, column: 3)
!948 = !DILocalVariable(name: "exp_1_44_y", scope: !947, file: !1, line: 305, type: !11)
!949 = !DILocalVariable(name: "tmp", scope: !947, file: !1, line: 305, type: !11)
!950 = !DILocalVariable(name: "c0_x", scope: !951, file: !1, line: 305, type: !11)
!951 = distinct !DILexicalBlock(scope: !947, file: !1, line: 305, column: 3)
!952 = !DILocalVariable(name: "c0_y", scope: !951, file: !1, line: 305, type: !11)
!953 = !DILocalVariable(name: "c0_x", scope: !954, file: !1, line: 305, type: !11)
!954 = distinct !DILexicalBlock(scope: !947, file: !1, line: 305, column: 3)
!955 = !DILocalVariable(name: "c0_y", scope: !954, file: !1, line: 305, type: !11)
!956 = !DILocalVariable(name: "c0_x", scope: !957, file: !1, line: 305, type: !11)
!957 = distinct !DILexicalBlock(scope: !947, file: !1, line: 305, column: 3)
!958 = !DILocalVariable(name: "c0_y", scope: !957, file: !1, line: 305, type: !11)
!959 = !DILocalVariable(name: "c0_x", scope: !960, file: !1, line: 305, type: !11)
!960 = distinct !DILexicalBlock(scope: !947, file: !1, line: 305, column: 3)
!961 = !DILocalVariable(name: "c0_y", scope: !960, file: !1, line: 305, type: !11)
!962 = !DILocation(line: 285, column: 18, scope: !886)
!963 = !DILocation(line: 285, column: 33, scope: !886)
!964 = !DILocation(line: 285, column: 48, scope: !886)
!965 = !DILocation(line: 286, column: 8, scope: !886)
!966 = !DILocation(line: 286, column: 23, scope: !886)
!967 = !DILocation(line: 286, column: 38, scope: !886)
!968 = !DILocation(line: 286, column: 54, scope: !886)
!969 = !DILocation(line: 287, column: 7, scope: !886)
!970 = !DILocation(line: 288, column: 9, scope: !886)
!971 = !DILocation(line: 289, column: 9, scope: !886)
!972 = !DILocation(line: 290, column: 9, scope: !886)
!973 = !DILocation(line: 291, column: 9, scope: !886)
!974 = !DILocation(line: 295, column: 25, scope: !886)
!975 = !DILocation(line: 295, column: 6, scope: !886)
!976 = !DILocation(line: 297, column: 9, scope: !910)
!977 = !DILocation(line: 295, column: 19, scope: !886)
!978 = !DILocation(line: 299, column: 10, scope: !979)
!979 = distinct !DILexicalBlock(scope: !908, file: !1, line: 299, column: 10)
!980 = !DILocation(line: 300, column: 29, scope: !981)
!981 = distinct !DILexicalBlock(scope: !982, file: !1, line: 299, column: 33)
!982 = distinct !DILexicalBlock(scope: !979, file: !1, line: 299, column: 10)
!983 = !DILocation(line: 300, column: 16, scope: !981)
!984 = !DILocation(line: 300, column: 4, scope: !981)
!985 = !DILocation(line: 300, column: 14, scope: !981)
!986 = !DILocation(line: 301, column: 16, scope: !981)
!987 = !DILocation(line: 301, column: 4, scope: !981)
!988 = !DILocation(line: 301, column: 14, scope: !981)
!989 = !DILocation(line: 299, column: 30, scope: !982)
!990 = !DILocation(line: 299, column: 23, scope: !982)
!991 = distinct !{!991, !978, !992}
!992 = !DILocation(line: 302, column: 3, scope: !979)
!993 = !DILocation(line: 305, column: 3, scope: !907)
!994 = !DILocation(line: 305, column: 3, scope: !919)
!995 = !DILocation(line: 305, column: 3, scope: !922)
!996 = !DILocation(line: 305, column: 3, scope: !925)
!997 = !DILocation(line: 305, column: 3, scope: !928)
!998 = !DILocation(line: 305, column: 3, scope: !931)
!999 = !DILocation(line: 305, column: 3, scope: !935)
!1000 = !DILocation(line: 305, column: 3, scope: !938)
!1001 = !DILocation(line: 305, column: 3, scope: !941)
!1002 = !DILocation(line: 305, column: 3, scope: !944)
!1003 = !DILocation(line: 305, column: 3, scope: !947)
!1004 = !DILocation(line: 305, column: 3, scope: !951)
!1005 = !DILocation(line: 305, column: 3, scope: !954)
!1006 = !DILocation(line: 305, column: 3, scope: !957)
!1007 = !DILocation(line: 305, column: 3, scope: !960)
!1008 = !DILocation(line: 308, column: 11, scope: !1009)
!1009 = distinct !DILexicalBlock(scope: !908, file: !1, line: 308, column: 11)
!1010 = !DILocation(line: 310, column: 34, scope: !1011)
!1011 = distinct !DILexicalBlock(scope: !1012, file: !1, line: 308, column: 28)
!1012 = distinct !DILexicalBlock(scope: !1009, file: !1, line: 308, column: 11)
!1013 = !DILocation(line: 310, column: 27, scope: !1011)
!1014 = !DILocation(line: 310, column: 12, scope: !1011)
!1015 = !DILocation(line: 310, column: 19, scope: !1011)
!1016 = !DILocation(line: 310, column: 4, scope: !1011)
!1017 = !DILocation(line: 310, column: 25, scope: !1011)
!1018 = !DILocation(line: 311, column: 34, scope: !1011)
!1019 = !DILocation(line: 311, column: 27, scope: !1011)
!1020 = !DILocation(line: 311, column: 4, scope: !1011)
!1021 = !DILocation(line: 311, column: 25, scope: !1011)
!1022 = !DILocation(line: 308, column: 25, scope: !1012)
!1023 = !DILocation(line: 308, column: 21, scope: !1012)
!1024 = distinct !{!1024, !1008, !1025}
!1025 = !DILocation(line: 312, column: 3, scope: !1009)
!1026 = !DILocation(line: 297, column: 35, scope: !909)
!1027 = !DILocation(line: 297, column: 26, scope: !909)
!1028 = distinct !{!1028, !976, !1029}
!1029 = !DILocation(line: 313, column: 2, scope: !910)
!1030 = !DILocation(line: 314, column: 1, scope: !886)
!1031 = distinct !DISubprogram(name: "fft1D_512", scope: !1, file: !1, line: 315, type: !8, isLocal: false, isDefinition: true, scopeLine: 327, flags: DIFlagPrototyped, isOptimized: true, unit: !0, variables: !1032)
!1032 = !{!1033, !1034, !1035, !1036, !1037, !1038, !1039, !1040, !1041, !1042, !1043, !1044, !1045, !1046, !1047, !1048, !1049, !1050}
!1033 = !DILocalVariable(name: "work_x", arg: 1, scope: !1031, file: !1, line: 315, type: !10)
!1034 = !DILocalVariable(name: "work_y", arg: 2, scope: !1031, file: !1, line: 315, type: !10)
!1035 = !DILocalVariable(name: "DATA_x", arg: 3, scope: !1031, file: !1, line: 316, type: !10)
!1036 = !DILocalVariable(name: "DATA_y", arg: 4, scope: !1031, file: !1, line: 317, type: !10)
!1037 = !DILocalVariable(name: "data_x", arg: 5, scope: !1031, file: !1, line: 318, type: !10)
!1038 = !DILocalVariable(name: "data_y", arg: 6, scope: !1031, file: !1, line: 319, type: !10)
!1039 = !DILocalVariable(name: "smem", arg: 7, scope: !1031, file: !1, line: 320, type: !10)
!1040 = !DILocalVariable(name: "reversed", arg: 8, scope: !1031, file: !1, line: 321, type: !10)
!1041 = !DILocalVariable(name: "sin_64", arg: 9, scope: !1031, file: !1, line: 322, type: !12)
!1042 = !DILocalVariable(name: "cos_64", arg: 10, scope: !1031, file: !1, line: 323, type: !12)
!1043 = !DILocalVariable(name: "sin_512", arg: 11, scope: !1031, file: !1, line: 324, type: !12)
!1044 = !DILocalVariable(name: "cos_512", arg: 12, scope: !1031, file: !1, line: 325, type: !12)
!1045 = !DILocalVariable(name: "tid", scope: !1031, file: !1, line: 332, type: !11)
!1046 = !DILocalVariable(name: "hi", scope: !1031, file: !1, line: 332, type: !11)
!1047 = !DILocalVariable(name: "lo", scope: !1031, file: !1, line: 332, type: !11)
!1048 = !DILocalVariable(name: "i", scope: !1031, file: !1, line: 332, type: !11)
!1049 = !DILocalVariable(name: "j", scope: !1031, file: !1, line: 332, type: !11)
!1050 = !DILocalVariable(name: "stride", scope: !1031, file: !1, line: 332, type: !11)
!1051 = !DILocation(line: 315, column: 21, scope: !1031)
!1052 = !DILocation(line: 315, column: 39, scope: !1031)
!1053 = !DILocation(line: 316, column: 7, scope: !1031)
!1054 = !DILocation(line: 317, column: 7, scope: !1031)
!1055 = !DILocation(line: 318, column: 7, scope: !1031)
!1056 = !DILocation(line: 319, column: 7, scope: !1031)
!1057 = !DILocation(line: 320, column: 7, scope: !1031)
!1058 = !DILocation(line: 321, column: 7, scope: !1031)
!1059 = !DILocation(line: 322, column: 9, scope: !1031)
!1060 = !DILocation(line: 323, column: 9, scope: !1031)
!1061 = !DILocation(line: 324, column: 9, scope: !1031)
!1062 = !DILocation(line: 325, column: 9, scope: !1031)
!1063 = !DILocation(line: 332, column: 26, scope: !1031)
!1064 = !DILocation(line: 335, column: 3, scope: !1031)
!1065 = !DILocation(line: 336, column: 3, scope: !1031)
!1066 = !DILocation(line: 337, column: 3, scope: !1031)
!1067 = !DILocation(line: 338, column: 3, scope: !1031)
!1068 = !DILocation(line: 339, column: 3, scope: !1031)
!1069 = !DILocation(line: 340, column: 3, scope: !1031)
!1070 = !DILocation(line: 341, column: 3, scope: !1031)
!1071 = !DILocation(line: 342, column: 3, scope: !1031)
!1072 = !DILocation(line: 343, column: 3, scope: !1031)
!1073 = !DILocation(line: 344, column: 3, scope: !1031)
!1074 = !DILocation(line: 345, column: 3, scope: !1031)
!1075 = !DILocation(line: 351, column: 1, scope: !1031)
!1076 = distinct !DISubprogram(name: "main", scope: !1, file: !1, line: 352, type: !1077, isLocal: false, isDefinition: true, scopeLine: 352, isOptimized: true, unit: !0, variables: !1079)
!1077 = !DISubroutineType(types: !1078)
!1078 = !{!11}
!1079 = !{!1080, !1084, !1085, !1086, !1090, !1091, !1092, !1093, !1094, !1095, !1099, !1100, !1104}
!1080 = !DILocalVariable(name: "a_x", scope: !1076, file: !1, line: 353, type: !1081)
!1081 = !DICompositeType(tag: DW_TAG_array_type, baseType: !11, size: 16384, elements: !1082)
!1082 = !{!1083}
!1083 = !DISubrange(count: 512)
!1084 = !DILocalVariable(name: "a_y", scope: !1076, file: !1, line: 354, type: !1081)
!1085 = !DILocalVariable(name: "i", scope: !1076, file: !1, line: 355, type: !11)
!1086 = !DILocalVariable(name: "sin_64", scope: !1076, file: !1, line: 361, type: !1087)
!1087 = !DICompositeType(tag: DW_TAG_array_type, baseType: !13, size: 14336, elements: !1088)
!1088 = !{!1089}
!1089 = !DISubrange(count: 448)
!1090 = !DILocalVariable(name: "sin_512", scope: !1076, file: !1, line: 426, type: !1087)
!1091 = !DILocalVariable(name: "cos_64", scope: !1076, file: !1, line: 491, type: !1087)
!1092 = !DILocalVariable(name: "cos_512", scope: !1076, file: !1, line: 556, type: !1087)
!1093 = !DILocalVariable(name: "DATA_x", scope: !1076, file: !1, line: 622, type: !1081)
!1094 = !DILocalVariable(name: "DATA_y", scope: !1076, file: !1, line: 623, type: !1081)
!1095 = !DILocalVariable(name: "data_x", scope: !1076, file: !1, line: 624, type: !1096)
!1096 = !DICompositeType(tag: DW_TAG_array_type, baseType: !11, size: 256, elements: !1097)
!1097 = !{!1098}
!1098 = !DISubrange(count: 8)
!1099 = !DILocalVariable(name: "data_y", scope: !1076, file: !1, line: 625, type: !1096)
!1100 = !DILocalVariable(name: "smem", scope: !1076, file: !1, line: 626, type: !1101)
!1101 = !DICompositeType(tag: DW_TAG_array_type, baseType: !11, size: 18432, elements: !1102)
!1102 = !{!1103}
!1103 = !DISubrange(count: 576)
!1104 = !DILocalVariable(name: "reversed", scope: !1076, file: !1, line: 627, type: !1096)
!1105 = !DILocation(line: 353, column: 3, scope: !1076)
!1106 = !DILocation(line: 353, column: 8, scope: !1076)
!1107 = !DILocation(line: 354, column: 3, scope: !1076)
!1108 = !DILocation(line: 354, column: 8, scope: !1076)
!1109 = !DILocation(line: 355, column: 7, scope: !1076)
!1110 = !DILocation(line: 357, column: 3, scope: !1111)
!1111 = distinct !DILexicalBlock(scope: !1076, file: !1, line: 357, column: 3)
!1112 = !DILocation(line: 358, column: 5, scope: !1113)
!1113 = distinct !DILexicalBlock(scope: !1114, file: !1, line: 357, column: 28)
!1114 = distinct !DILexicalBlock(scope: !1111, file: !1, line: 357, column: 3)
!1115 = !DILocation(line: 358, column: 12, scope: !1113)
!1116 = !DILocation(line: 359, column: 5, scope: !1113)
!1117 = !DILocation(line: 359, column: 12, scope: !1113)
!1118 = !DILocation(line: 357, column: 25, scope: !1114)
!1119 = !DILocation(line: 357, column: 17, scope: !1114)
!1120 = distinct !{!1120, !1110, !1121}
!1121 = !DILocation(line: 360, column: 3, scope: !1111)
!1122 = !DILocation(line: 361, column: 3, scope: !1076)
!1123 = !DILocation(line: 361, column: 9, scope: !1076)
!1124 = !DILocation(line: 426, column: 3, scope: !1076)
!1125 = !DILocation(line: 426, column: 9, scope: !1076)
!1126 = !DILocation(line: 491, column: 3, scope: !1076)
!1127 = !DILocation(line: 491, column: 9, scope: !1076)
!1128 = !DILocation(line: 556, column: 3, scope: !1076)
!1129 = !DILocation(line: 556, column: 9, scope: !1076)
!1130 = !DILocation(line: 622, column: 3, scope: !1076)
!1131 = !DILocation(line: 622, column: 8, scope: !1076)
!1132 = !DILocation(line: 623, column: 3, scope: !1076)
!1133 = !DILocation(line: 623, column: 8, scope: !1076)
!1134 = !DILocation(line: 624, column: 3, scope: !1076)
!1135 = !DILocation(line: 624, column: 8, scope: !1076)
!1136 = !DILocation(line: 625, column: 3, scope: !1076)
!1137 = !DILocation(line: 625, column: 8, scope: !1076)
!1138 = !DILocation(line: 626, column: 3, scope: !1076)
!1139 = !DILocation(line: 626, column: 8, scope: !1076)
!1140 = !DILocation(line: 627, column: 3, scope: !1076)
!1141 = !DILocation(line: 627, column: 7, scope: !1076)
!1142 = !DILocation(line: 631, column: 13, scope: !1076)
!1143 = !DILocation(line: 631, column: 18, scope: !1076)
!1144 = !DILocation(line: 631, column: 23, scope: !1076)
!1145 = !DILocation(line: 631, column: 31, scope: !1076)
!1146 = !DILocation(line: 631, column: 39, scope: !1076)
!1147 = !DILocation(line: 631, column: 47, scope: !1076)
!1148 = !DILocation(line: 631, column: 55, scope: !1076)
!1149 = !DILocation(line: 631, column: 61, scope: !1076)
!1150 = !DILocation(line: 631, column: 71, scope: !1076)
!1151 = !DILocation(line: 631, column: 79, scope: !1076)
!1152 = !DILocation(line: 631, column: 88, scope: !1076)
!1153 = !DILocation(line: 631, column: 96, scope: !1076)
!1154 = !DILocation(line: 631, column: 3, scope: !1076)
!1155 = !DILocation(line: 636, column: 3, scope: !1156)
!1156 = distinct !DILexicalBlock(scope: !1076, file: !1, line: 636, column: 3)
!1157 = !DILocation(line: 637, column: 32, scope: !1158)
!1158 = distinct !DILexicalBlock(scope: !1159, file: !1, line: 636, column: 26)
!1159 = distinct !DILexicalBlock(scope: !1156, file: !1, line: 636, column: 3)
!1160 = !DILocation(line: 637, column: 40, scope: !1158)
!1161 = !DILocation(line: 637, column: 5, scope: !1158)
!1162 = !DILocation(line: 636, column: 23, scope: !1159)
!1163 = !DILocation(line: 636, column: 17, scope: !1159)
!1164 = distinct !{!1164, !1155, !1165}
!1165 = !DILocation(line: 638, column: 3, scope: !1156)
!1166 = !DILocation(line: 641, column: 1, scope: !1076)
!1167 = !DILocation(line: 640, column: 3, scope: !1076)
