; ModuleID = 'md.c'
source_filename = "md.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@.str = private unnamed_addr constant [19 x i8] c"total pairs - %i \0A\00", align 1
@.str.1 = private unnamed_addr constant [23 x i8] c"after, X:%i Y:%i Z%i \0A\00", align 1

; Function Attrs: noinline nounwind uwtable
define void @md(i32* nocapture %d_force_x, i32* nocapture %d_force_y, i32* nocapture %d_force_z, i32* nocapture readonly %position_x, i32* nocapture readonly %position_y, i32* nocapture readonly %position_z, i32* nocapture readonly %NL) local_unnamed_addr #0 !dbg !7 {
  call void @llvm.dbg.value(metadata i32* %d_force_x, metadata !13, metadata !DIExpression()), !dbg !50
  call void @llvm.dbg.value(metadata i32* %d_force_y, metadata !14, metadata !DIExpression()), !dbg !51
  call void @llvm.dbg.value(metadata i32* %d_force_z, metadata !15, metadata !DIExpression()), !dbg !52
  call void @llvm.dbg.value(metadata i32* %position_x, metadata !16, metadata !DIExpression()), !dbg !53
  call void @llvm.dbg.value(metadata i32* %position_y, metadata !17, metadata !DIExpression()), !dbg !54
  call void @llvm.dbg.value(metadata i32* %position_z, metadata !18, metadata !DIExpression()), !dbg !55
  call void @llvm.dbg.value(metadata i32* %NL, metadata !19, metadata !DIExpression()), !dbg !56
  call void @llvm.dbg.value(metadata i32 0, metadata !20, metadata !DIExpression()), !dbg !57
  br label %1, !dbg !58

; <label>:1:                                      ; preds = %12, %0
  %indvars.iv100 = phi i64 [ 0, %0 ], [ %indvars.iv.next101, %12 ]
  call void @llvm.dbg.value(metadata i64 %indvars.iv100, metadata !20, metadata !DIExpression()), !dbg !57
  %arrayidx = getelementptr inbounds i32, i32* %position_x, i64 %indvars.iv100, !dbg !59
  %2 = load i32, i32* %arrayidx, align 4, !dbg !59, !tbaa !60
  call void @llvm.dbg.value(metadata i32 %2, metadata !33, metadata !DIExpression()), !dbg !64
  %arrayidx2 = getelementptr inbounds i32, i32* %position_y, i64 %indvars.iv100, !dbg !65
  %3 = load i32, i32* %arrayidx2, align 4, !dbg !65, !tbaa !60
  call void @llvm.dbg.value(metadata i32 %3, metadata !37, metadata !DIExpression()), !dbg !66
  %arrayidx4 = getelementptr inbounds i32, i32* %position_z, i64 %indvars.iv100, !dbg !67
  %4 = load i32, i32* %arrayidx4, align 4, !dbg !67, !tbaa !60
  call void @llvm.dbg.value(metadata i32 %4, metadata !38, metadata !DIExpression()), !dbg !68
  call void @llvm.dbg.value(metadata i32 0, metadata !39, metadata !DIExpression()), !dbg !69
  call void @llvm.dbg.value(metadata i32 0, metadata !40, metadata !DIExpression()), !dbg !70
  call void @llvm.dbg.value(metadata i32 0, metadata !41, metadata !DIExpression()), !dbg !71
  call void @llvm.dbg.value(metadata i32 0, metadata !21, metadata !DIExpression()), !dbg !72
  %5 = shl i64 %indvars.iv100, 5
  br label %6, !dbg !73

; <label>:6:                                      ; preds = %6, %1
  %indvars.iv = phi i64 [ 0, %1 ], [ %indvars.iv.next, %6 ]
  %fx.096 = phi i32 [ 0, %1 ], [ %add28, %6 ]
  %fy.095 = phi i32 [ 0, %1 ], [ %add30, %6 ]
  %fz.094 = phi i32 [ 0, %1 ], [ %add32, %6 ]
  call void @llvm.dbg.value(metadata i32 %fz.094, metadata !41, metadata !DIExpression()), !dbg !71
  call void @llvm.dbg.value(metadata i32 %fy.095, metadata !40, metadata !DIExpression()), !dbg !70
  call void @llvm.dbg.value(metadata i32 %fx.096, metadata !39, metadata !DIExpression()), !dbg !69
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !21, metadata !DIExpression()), !dbg !72
  %7 = add nuw nsw i64 %indvars.iv, %5, !dbg !74
  %arrayidx7 = getelementptr inbounds i32, i32* %NL, i64 %7, !dbg !75
  %8 = load i32, i32* %arrayidx7, align 4, !dbg !75, !tbaa !60
  call void @llvm.dbg.value(metadata i32 %8, metadata !22, metadata !DIExpression()), !dbg !76
  %idxprom8 = sext i32 %8 to i64, !dbg !77
  %arrayidx9 = getelementptr inbounds i32, i32* %position_x, i64 %idxprom8, !dbg !77
  %9 = load i32, i32* %arrayidx9, align 4, !dbg !77, !tbaa !60
  call void @llvm.dbg.value(metadata i32 %9, metadata !42, metadata !DIExpression()), !dbg !78
  %arrayidx11 = getelementptr inbounds i32, i32* %position_y, i64 %idxprom8, !dbg !79
  %10 = load i32, i32* %arrayidx11, align 4, !dbg !79, !tbaa !60
  call void @llvm.dbg.value(metadata i32 %10, metadata !46, metadata !DIExpression()), !dbg !80
  %arrayidx13 = getelementptr inbounds i32, i32* %position_z, i64 %idxprom8, !dbg !81
  %11 = load i32, i32* %arrayidx13, align 4, !dbg !81, !tbaa !60
  call void @llvm.dbg.value(metadata i32 %11, metadata !47, metadata !DIExpression()), !dbg !82
  %sub = sub nsw i32 %2, %9, !dbg !83
  call void @llvm.dbg.value(metadata i32 %sub, metadata !23, metadata !DIExpression()), !dbg !84
  %sub14 = sub nsw i32 %3, %10, !dbg !85
  call void @llvm.dbg.value(metadata i32 %sub14, metadata !24, metadata !DIExpression()), !dbg !86
  %sub15 = sub nsw i32 %4, %11, !dbg !87
  call void @llvm.dbg.value(metadata i32 %sub15, metadata !25, metadata !DIExpression()), !dbg !88
  %mul16 = mul nsw i32 %sub, %sub, !dbg !89
  call void @llvm.dbg.value(metadata i32 %mul16, metadata !27, metadata !DIExpression()), !dbg !90
  %mul17 = mul nsw i32 %sub14, %sub14, !dbg !91
  call void @llvm.dbg.value(metadata i32 %mul17, metadata !28, metadata !DIExpression()), !dbg !92
  %mul18 = mul nsw i32 %sub15, %sub15, !dbg !93
  call void @llvm.dbg.value(metadata i32 %mul18, metadata !29, metadata !DIExpression()), !dbg !94
  %add19 = add nuw nsw i32 %mul17, %mul16, !dbg !95
  call void @llvm.dbg.value(metadata i32 %add19, metadata !30, metadata !DIExpression()), !dbg !96
  %add20 = add nuw nsw i32 %add19, %mul18, !dbg !97
  call void @llvm.dbg.value(metadata i32 %add20, metadata !31, metadata !DIExpression()), !dbg !98
  call void @llvm.dbg.value(metadata i32 %add20, metadata !26, metadata !DIExpression()), !dbg !99
  %mul21 = mul nsw i32 %add20, %add20, !dbg !100
  %mul22 = mul nsw i32 %mul21, %add20, !dbg !101
  call void @llvm.dbg.value(metadata i32 %mul22, metadata !48, metadata !DIExpression()), !dbg !102
  %mul23 = mul nsw i32 %mul22, %add20, !dbg !103
  %mul24 = mul nsw i32 %mul22, 15, !dbg !104
  %sub25 = add nsw i32 %mul24, -20, !dbg !105
  %mul26 = mul nsw i32 %mul23, %sub25, !dbg !106
  call void @llvm.dbg.value(metadata i32 %mul26, metadata !49, metadata !DIExpression()), !dbg !107
  %mul27 = mul nsw i32 %mul26, %sub, !dbg !108
  %add28 = add nsw i32 %mul27, %fx.096, !dbg !109
  %mul29 = mul nsw i32 %mul26, %sub14, !dbg !110
  %add30 = add nsw i32 %mul29, %fy.095, !dbg !111
  %mul31 = mul nsw i32 %mul26, %sub15, !dbg !112
  %add32 = add nsw i32 %mul31, %fz.094, !dbg !113
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !114
  call void @llvm.dbg.value(metadata i32 %add28, metadata !39, metadata !DIExpression()), !dbg !69
  call void @llvm.dbg.value(metadata i32 %add30, metadata !40, metadata !DIExpression()), !dbg !70
  call void @llvm.dbg.value(metadata i32 %add32, metadata !41, metadata !DIExpression()), !dbg !71
  %exitcond = icmp eq i64 %indvars.iv.next, 32, !dbg !115
  br i1 %exitcond, label %12, label %6, !dbg !73, !llvm.loop !116

; <label>:12:                                     ; preds = %6
  %arrayidx34 = getelementptr inbounds i32, i32* %d_force_x, i64 %indvars.iv100, !dbg !118
  store i32 %add28, i32* %arrayidx34, align 4, !dbg !119, !tbaa !60
  %arrayidx36 = getelementptr inbounds i32, i32* %d_force_y, i64 %indvars.iv100, !dbg !120
  store i32 %add30, i32* %arrayidx36, align 4, !dbg !121, !tbaa !60
  %arrayidx38 = getelementptr inbounds i32, i32* %d_force_z, i64 %indvars.iv100, !dbg !122
  store i32 %add32, i32* %arrayidx38, align 4, !dbg !123, !tbaa !60
  %indvars.iv.next101 = add nuw nsw i64 %indvars.iv100, 1, !dbg !124
  %exitcond103 = icmp eq i64 %indvars.iv.next101, 32, !dbg !125
  br i1 %exitcond103, label %13, label %1, !dbg !58, !llvm.loop !126

; <label>:13:                                     ; preds = %12
  ret void, !dbg !128
}

; Function Attrs: nounwind readnone speculatable
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64, i8* nocapture) #2

; Function Attrs: noinline nounwind readonly uwtable
define i32 @distance(i32* nocapture readonly %position_x, i32* nocapture readonly %position_y, i32* nocapture readonly %position_z, i32 %i, i32 %j) local_unnamed_addr #3 !dbg !129 {
  call void @llvm.dbg.value(metadata i32* %position_x, metadata !133, metadata !DIExpression()), !dbg !142
  call void @llvm.dbg.value(metadata i32* %position_y, metadata !134, metadata !DIExpression()), !dbg !143
  call void @llvm.dbg.value(metadata i32* %position_z, metadata !135, metadata !DIExpression()), !dbg !144
  call void @llvm.dbg.value(metadata i32 %i, metadata !136, metadata !DIExpression()), !dbg !145
  call void @llvm.dbg.value(metadata i32 %j, metadata !137, metadata !DIExpression()), !dbg !146
  %idxprom = sext i32 %i to i64, !dbg !147
  %arrayidx = getelementptr inbounds i32, i32* %position_x, i64 %idxprom, !dbg !147
  %1 = load i32, i32* %arrayidx, align 4, !dbg !147, !tbaa !60
  %idxprom1 = sext i32 %j to i64, !dbg !148
  %arrayidx2 = getelementptr inbounds i32, i32* %position_x, i64 %idxprom1, !dbg !148
  %2 = load i32, i32* %arrayidx2, align 4, !dbg !148, !tbaa !60
  %sub = sub nsw i32 %1, %2, !dbg !149
  call void @llvm.dbg.value(metadata i32 %sub, metadata !138, metadata !DIExpression()), !dbg !150
  %arrayidx4 = getelementptr inbounds i32, i32* %position_y, i64 %idxprom, !dbg !151
  %3 = load i32, i32* %arrayidx4, align 4, !dbg !151, !tbaa !60
  %arrayidx6 = getelementptr inbounds i32, i32* %position_y, i64 %idxprom1, !dbg !152
  %4 = load i32, i32* %arrayidx6, align 4, !dbg !152, !tbaa !60
  %sub7 = sub nsw i32 %3, %4, !dbg !153
  call void @llvm.dbg.value(metadata i32 %sub7, metadata !139, metadata !DIExpression()), !dbg !154
  %arrayidx9 = getelementptr inbounds i32, i32* %position_z, i64 %idxprom, !dbg !155
  %5 = load i32, i32* %arrayidx9, align 4, !dbg !155, !tbaa !60
  %arrayidx11 = getelementptr inbounds i32, i32* %position_z, i64 %idxprom1, !dbg !156
  %6 = load i32, i32* %arrayidx11, align 4, !dbg !156, !tbaa !60
  %sub12 = sub nsw i32 %5, %6, !dbg !157
  call void @llvm.dbg.value(metadata i32 %sub12, metadata !140, metadata !DIExpression()), !dbg !158
  %mul = mul nsw i32 %sub, %sub, !dbg !159
  %mul13 = mul nsw i32 %sub7, %sub7, !dbg !160
  %add = add nuw nsw i32 %mul13, %mul, !dbg !161
  %mul14 = mul nsw i32 %sub12, %sub12, !dbg !162
  %add15 = add nuw nsw i32 %add, %mul14, !dbg !163
  call void @llvm.dbg.value(metadata i32 %add15, metadata !141, metadata !DIExpression()), !dbg !164
  ret i32 %add15, !dbg !165
}

; Function Attrs: noinline nounwind uwtable
define i32 @buildNeighborList(i32* nocapture readonly %position_x, i32* nocapture readonly %position_y, i32* nocapture readonly %position_z, [32 x i32]* nocapture %NL) local_unnamed_addr #0 !dbg !166 {
  %currList = alloca [32 x i32], align 16
  call void @llvm.dbg.value(metadata i32* %position_x, metadata !174, metadata !DIExpression()), !dbg !188
  call void @llvm.dbg.value(metadata i32* %position_y, metadata !175, metadata !DIExpression()), !dbg !189
  call void @llvm.dbg.value(metadata i32* %position_z, metadata !176, metadata !DIExpression()), !dbg !190
  call void @llvm.dbg.value(metadata [32 x i32]* %NL, metadata !177, metadata !DIExpression()), !dbg !191
  call void @llvm.dbg.value(metadata i32 0, metadata !178, metadata !DIExpression()), !dbg !192
  call void @llvm.dbg.value(metadata i32 0, metadata !179, metadata !DIExpression()), !dbg !193
  %1 = bitcast [32 x i32]* %currList to i8*
  %arraydecay11 = getelementptr inbounds [32 x i32], [32 x i32]* %currList, i64 0, i64 0
  br label %2, !dbg !194

; <label>:2:                                      ; preds = %8, %0
  %indvars.iv42 = phi i64 [ 0, %0 ], [ %indvars.iv.next43, %8 ]
  %totalPairs.038 = phi i32 [ 0, %0 ], [ %add, %8 ]
  call void @llvm.dbg.value(metadata i64 %indvars.iv42, metadata !179, metadata !DIExpression()), !dbg !193
  call void @llvm.dbg.value(metadata i32 %totalPairs.038, metadata !178, metadata !DIExpression()), !dbg !192
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %1) #6, !dbg !195
  call void @llvm.dbg.declare(metadata [32 x i32]* %currList, metadata !183, metadata !DIExpression()), !dbg !196
  call void @llvm.dbg.value(metadata i32 0, metadata !181, metadata !DIExpression()), !dbg !197
  br label %3, !dbg !198

; <label>:3:                                      ; preds = %3, %2
  %indvars.iv = phi i64 [ 0, %2 ], [ %indvars.iv.next, %3 ]
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !181, metadata !DIExpression()), !dbg !197
  %arrayidx = getelementptr inbounds [32 x i32], [32 x i32]* %currList, i64 0, i64 %indvars.iv, !dbg !200
  store i32 0, i32* %arrayidx, align 4, !dbg !203, !tbaa !60
  call void @llvm.dbg.value(metadata i32 999999999, metadata !187, metadata !DIExpression()), !dbg !204
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !205
  %exitcond = icmp eq i64 %indvars.iv.next, 32, !dbg !206
  br i1 %exitcond, label %.preheader, label %3, !dbg !198, !llvm.loop !207

.preheader:                                       ; preds = %3
  br label %4, !dbg !209

; <label>:4:                                      ; preds = %.preheader, %7
  %indvars.iv39 = phi i64 [ %indvars.iv.next40, %7 ], [ 0, %.preheader ]
  call void @llvm.dbg.value(metadata i64 %indvars.iv39, metadata !180, metadata !DIExpression()), !dbg !214
  %cmp5 = icmp eq i64 %indvars.iv42, %indvars.iv39, !dbg !209
  br i1 %cmp5, label %7, label %5, !dbg !215

; <label>:5:                                      ; preds = %4
  %arrayidx7 = getelementptr inbounds [32 x i32], [32 x i32]* %currList, i64 0, i64 %indvars.iv39, !dbg !216
  %6 = trunc i64 %indvars.iv39 to i32, !dbg !217
  store i32 %6, i32* %arrayidx7, align 4, !dbg !217, !tbaa !60
  br label %7, !dbg !218

; <label>:7:                                      ; preds = %4, %5
  %indvars.iv.next40 = add nuw nsw i64 %indvars.iv39, 1, !dbg !219
  %exitcond41 = icmp eq i64 %indvars.iv.next40, 32, !dbg !220
  br i1 %exitcond41, label %8, label %4, !dbg !221, !llvm.loop !222

; <label>:8:                                      ; preds = %7
  %9 = trunc i64 %indvars.iv42 to i32, !dbg !224
  %call12 = call i32 @populateNeighborList(i32* undef, i32* nonnull %arraydecay11, i32 %9, [32 x i32]* %NL) #7, !dbg !224
  %add = add nsw i32 %call12, %totalPairs.038, !dbg !225
  call void @llvm.lifetime.end.p0i8(i64 128, i8* nonnull %1) #6, !dbg !226
  %indvars.iv.next43 = add nuw nsw i64 %indvars.iv42, 1, !dbg !227
  call void @llvm.dbg.value(metadata i32 %add, metadata !178, metadata !DIExpression()), !dbg !192
  %exitcond44 = icmp eq i64 %indvars.iv.next43, 32, !dbg !228
  br i1 %exitcond44, label %10, label %2, !dbg !194, !llvm.loop !229

; <label>:10:                                     ; preds = %8
  %call14 = tail call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str, i64 0, i64 0), i32 %add) #8, !dbg !231
  ret i32 %add, !dbg !232
}

declare i32 @printf(i8*, ...) local_unnamed_addr #4

; Function Attrs: noinline nounwind uwtable
define i32 @populateNeighborList(i32* nocapture readnone %currDist, i32* nocapture readonly %currList, i32 %i, [32 x i32]* nocapture %NL) local_unnamed_addr #0 !dbg !233 {
  call void @llvm.dbg.value(metadata i32* %currDist, metadata !238, metadata !DIExpression()), !dbg !246
  call void @llvm.dbg.value(metadata i32* %currList, metadata !239, metadata !DIExpression()), !dbg !247
  call void @llvm.dbg.value(metadata i32 %i, metadata !240, metadata !DIExpression()), !dbg !248
  call void @llvm.dbg.value(metadata [32 x i32]* %NL, metadata !241, metadata !DIExpression()), !dbg !249
  call void @llvm.dbg.value(metadata i32 0, metadata !242, metadata !DIExpression()), !dbg !250
  call void @llvm.dbg.value(metadata i32 0, metadata !243, metadata !DIExpression()), !dbg !251
  call void @llvm.dbg.value(metadata i32 0, metadata !245, metadata !DIExpression()), !dbg !252
  %idxprom1 = sext i32 %i to i64
  br label %1, !dbg !253

; <label>:1:                                      ; preds = %1, %0
  %indvars.iv = phi i64 [ 0, %0 ], [ %indvars.iv.next, %1 ]
  call void @llvm.dbg.value(metadata i32 undef, metadata !243, metadata !DIExpression()), !dbg !251
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !245, metadata !DIExpression()), !dbg !252
  %arrayidx = getelementptr inbounds i32, i32* %currList, i64 %indvars.iv, !dbg !255
  %2 = load i32, i32* %arrayidx, align 4, !dbg !255, !tbaa !60
  %arrayidx4 = getelementptr inbounds [32 x i32], [32 x i32]* %NL, i64 %idxprom1, i64 %indvars.iv, !dbg !258
  store i32 %2, i32* %arrayidx4, align 4, !dbg !259, !tbaa !60
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !260
  %exitcond = icmp eq i64 %indvars.iv.next, 32, !dbg !261
  br i1 %exitcond, label %3, label %1, !dbg !253, !llvm.loop !262

; <label>:3:                                      ; preds = %1
  ret i32 32, !dbg !264
}

; Function Attrs: noinline nounwind uwtable
define i32 @main() local_unnamed_addr #0 !dbg !265 {
  %position_x = alloca [32 x i32], align 16
  %position_y = alloca [32 x i32], align 16
  %position_z = alloca [32 x i32], align 16
  %force_x = alloca [32 x i32], align 16
  %force_y = alloca [32 x i32], align 16
  %force_z = alloca [32 x i32], align 16
  %NL = alloca [32 x [32 x i32]], align 16
  %neighborList = alloca [1024 x i32], align 16
  call void @llvm.dbg.value(metadata i32 1, metadata !269, metadata !DIExpression()), !dbg !296
  call void @llvm.dbg.value(metadata i32 1, metadata !270, metadata !DIExpression()), !dbg !297
  call void @llvm.dbg.value(metadata i32 1, metadata !271, metadata !DIExpression()), !dbg !298
  call void @llvm.dbg.value(metadata i32 0, metadata !273, metadata !DIExpression()), !dbg !299
  call void @llvm.dbg.value(metadata i32 128, metadata !274, metadata !DIExpression()), !dbg !300
  call void @llvm.dbg.value(metadata i32 32, metadata !275, metadata !DIExpression()), !dbg !301
  tail call void @srand(i32 8650341) #8, !dbg !302
  %1 = bitcast [32 x i32]* %position_x to i8*, !dbg !303
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %1) #6, !dbg !303
  call void @llvm.dbg.declare(metadata [32 x i32]* %position_x, metadata !283, metadata !DIExpression()), !dbg !304
  %2 = bitcast [32 x i32]* %position_y to i8*, !dbg !305
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %2) #6, !dbg !305
  call void @llvm.dbg.declare(metadata [32 x i32]* %position_y, metadata !284, metadata !DIExpression()), !dbg !306
  %3 = bitcast [32 x i32]* %position_z to i8*, !dbg !307
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %3) #6, !dbg !307
  call void @llvm.dbg.declare(metadata [32 x i32]* %position_z, metadata !285, metadata !DIExpression()), !dbg !308
  %4 = bitcast [32 x i32]* %force_x to i8*, !dbg !309
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %4) #6, !dbg !309
  call void @llvm.dbg.declare(metadata [32 x i32]* %force_x, metadata !286, metadata !DIExpression()), !dbg !310
  %5 = bitcast [32 x i32]* %force_y to i8*, !dbg !311
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %5) #6, !dbg !311
  call void @llvm.dbg.declare(metadata [32 x i32]* %force_y, metadata !287, metadata !DIExpression()), !dbg !312
  %6 = bitcast [32 x i32]* %force_z to i8*, !dbg !313
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %6) #6, !dbg !313
  call void @llvm.dbg.declare(metadata [32 x i32]* %force_z, metadata !288, metadata !DIExpression()), !dbg !314
  %7 = bitcast [32 x [32 x i32]]* %NL to i8*, !dbg !315
  call void @llvm.lifetime.start.p0i8(i64 4096, i8* nonnull %7) #6, !dbg !315
  call void @llvm.dbg.declare(metadata [32 x [32 x i32]]* %NL, metadata !289, metadata !DIExpression()), !dbg !316
  %8 = bitcast [1024 x i32]* %neighborList to i8*, !dbg !317
  call void @llvm.lifetime.start.p0i8(i64 4096, i8* nonnull %8) #6, !dbg !317
  call void @llvm.dbg.declare(metadata [1024 x i32]* %neighborList, metadata !292, metadata !DIExpression()), !dbg !318
  call void @llvm.dbg.value(metadata i32 0, metadata !276, metadata !DIExpression()), !dbg !319
  br label %9, !dbg !320

; <label>:9:                                      ; preds = %9, %0
  %indvars.iv96 = phi i64 [ 0, %0 ], [ %indvars.iv.next97, %9 ]
  call void @llvm.dbg.value(metadata i64 %indvars.iv96, metadata !276, metadata !DIExpression()), !dbg !319
  %call = tail call i32 @rand() #8, !dbg !322
  %arrayidx = getelementptr inbounds [32 x i32], [32 x i32]* %position_x, i64 0, i64 %indvars.iv96, !dbg !325
  store i32 %call, i32* %arrayidx, align 4, !dbg !326, !tbaa !60
  %call1 = tail call i32 @rand() #8, !dbg !327
  %arrayidx3 = getelementptr inbounds [32 x i32], [32 x i32]* %position_y, i64 0, i64 %indvars.iv96, !dbg !328
  store i32 %call1, i32* %arrayidx3, align 4, !dbg !329, !tbaa !60
  %call4 = tail call i32 @rand() #8, !dbg !330
  %arrayidx6 = getelementptr inbounds [32 x i32], [32 x i32]* %position_z, i64 0, i64 %indvars.iv96, !dbg !331
  store i32 %call4, i32* %arrayidx6, align 4, !dbg !332, !tbaa !60
  %indvars.iv.next97 = add nuw nsw i64 %indvars.iv96, 1, !dbg !333
  %exitcond98 = icmp eq i64 %indvars.iv.next97, 32, !dbg !334
  br i1 %exitcond98, label %.preheader, label %9, !dbg !320, !llvm.loop !335

.preheader:                                       ; preds = %9
  br label %10, !dbg !337

; <label>:10:                                     ; preds = %.preheader, %12
  %indvars.iv93 = phi i64 [ %indvars.iv.next94, %12 ], [ 0, %.preheader ]
  call void @llvm.dbg.value(metadata i32 0, metadata !277, metadata !DIExpression()), !dbg !342
  call void @llvm.dbg.value(metadata i64 %indvars.iv93, metadata !276, metadata !DIExpression()), !dbg !319
  br label %11, !dbg !337

; <label>:11:                                     ; preds = %11, %10
  %indvars.iv90 = phi i64 [ 0, %10 ], [ %indvars.iv.next91, %11 ]
  call void @llvm.dbg.value(metadata i64 %indvars.iv90, metadata !277, metadata !DIExpression()), !dbg !342
  %arrayidx12 = getelementptr inbounds [32 x [32 x i32]], [32 x [32 x i32]]* %NL, i64 0, i64 %indvars.iv93, i64 %indvars.iv90, !dbg !343
  store i32 0, i32* %arrayidx12, align 4, !dbg !346, !tbaa !60
  %indvars.iv.next91 = add nuw nsw i64 %indvars.iv90, 1, !dbg !347
  %exitcond92 = icmp eq i64 %indvars.iv.next91, 32, !dbg !348
  br i1 %exitcond92, label %12, label %11, !dbg !337, !llvm.loop !349

; <label>:12:                                     ; preds = %11
  %indvars.iv.next94 = add nuw nsw i64 %indvars.iv93, 1, !dbg !351
  %exitcond95 = icmp eq i64 %indvars.iv.next94, 32, !dbg !352
  br i1 %exitcond95, label %13, label %10, !dbg !353, !llvm.loop !354

; <label>:13:                                     ; preds = %12
  %arraydecay = getelementptr inbounds [32 x i32], [32 x i32]* %position_x, i64 0, i64 0, !dbg !356
  %arraydecay15 = getelementptr inbounds [32 x i32], [32 x i32]* %position_y, i64 0, i64 0, !dbg !357
  %arraydecay16 = getelementptr inbounds [32 x i32], [32 x i32]* %position_z, i64 0, i64 0, !dbg !358
  %arraydecay17 = getelementptr inbounds [32 x [32 x i32]], [32 x [32 x i32]]* %NL, i64 0, i64 0, !dbg !359
  %call18 = call i32 @buildNeighborList(i32* nonnull %arraydecay, i32* nonnull %arraydecay15, i32* nonnull %arraydecay16, [32 x i32]* nonnull %arraydecay17) #7, !dbg !360
  call void @llvm.dbg.value(metadata i32 %call18, metadata !278, metadata !DIExpression()), !dbg !361
  call void @llvm.dbg.value(metadata i32 0, metadata !276, metadata !DIExpression()), !dbg !319
  br label %14, !dbg !362

; <label>:14:                                     ; preds = %19, %13
  %indvars.iv86 = phi i64 [ 0, %13 ], [ %indvars.iv.next87, %19 ]
  call void @llvm.dbg.value(metadata i32 0, metadata !277, metadata !DIExpression()), !dbg !342
  call void @llvm.dbg.value(metadata i64 %indvars.iv86, metadata !276, metadata !DIExpression()), !dbg !319
  %15 = shl i64 %indvars.iv86, 5
  br label %16, !dbg !364

; <label>:16:                                     ; preds = %16, %14
  %indvars.iv82 = phi i64 [ 0, %14 ], [ %indvars.iv.next83, %16 ]
  call void @llvm.dbg.value(metadata i64 %indvars.iv82, metadata !277, metadata !DIExpression()), !dbg !342
  %arrayidx24 = getelementptr inbounds [32 x [32 x i32]], [32 x [32 x i32]]* %NL, i64 0, i64 %indvars.iv86, i64 %indvars.iv82, !dbg !368
  %17 = load i32, i32* %arrayidx24, align 4, !dbg !368, !tbaa !60
  %18 = add nuw nsw i64 %indvars.iv82, %15, !dbg !370
  %arrayidx26 = getelementptr inbounds [1024 x i32], [1024 x i32]* %neighborList, i64 0, i64 %18, !dbg !371
  store i32 %17, i32* %arrayidx26, align 4, !dbg !372, !tbaa !60
  %indvars.iv.next83 = add nuw nsw i64 %indvars.iv82, 1, !dbg !373
  %exitcond85 = icmp eq i64 %indvars.iv.next83, 32, !dbg !374
  br i1 %exitcond85, label %19, label %16, !dbg !364, !llvm.loop !375

; <label>:19:                                     ; preds = %16
  %indvars.iv.next87 = add nuw nsw i64 %indvars.iv86, 1, !dbg !377
  %exitcond89 = icmp eq i64 %indvars.iv.next87, 32, !dbg !378
  br i1 %exitcond89, label %20, label %14, !dbg !362, !llvm.loop !379

; <label>:20:                                     ; preds = %19
  %arraydecay29 = getelementptr inbounds [32 x i32], [32 x i32]* %force_x, i64 0, i64 0, !dbg !381
  %arraydecay30 = getelementptr inbounds [32 x i32], [32 x i32]* %force_y, i64 0, i64 0, !dbg !382
  %arraydecay31 = getelementptr inbounds [32 x i32], [32 x i32]* %force_z, i64 0, i64 0, !dbg !383
  %arraydecay35 = getelementptr inbounds [1024 x i32], [1024 x i32]* %neighborList, i64 0, i64 0, !dbg !384
  call void @md(i32* nonnull %arraydecay29, i32* nonnull %arraydecay30, i32* nonnull %arraydecay31, i32* nonnull %arraydecay, i32* nonnull %arraydecay15, i32* nonnull %arraydecay16, i32* nonnull %arraydecay35) #7, !dbg !385
  call void @llvm.dbg.value(metadata i32 0, metadata !276, metadata !DIExpression()), !dbg !319
  br label %21, !dbg !386

; <label>:21:                                     ; preds = %21, %20
  %indvars.iv = phi i64 [ 0, %20 ], [ %indvars.iv.next, %21 ]
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !276, metadata !DIExpression()), !dbg !319
  %arrayidx38 = getelementptr inbounds [32 x i32], [32 x i32]* %force_x, i64 0, i64 %indvars.iv, !dbg !388
  %22 = load i32, i32* %arrayidx38, align 4, !dbg !388, !tbaa !60
  %arrayidx40 = getelementptr inbounds [32 x i32], [32 x i32]* %force_y, i64 0, i64 %indvars.iv, !dbg !391
  %23 = load i32, i32* %arrayidx40, align 4, !dbg !391, !tbaa !60
  %arrayidx42 = getelementptr inbounds [32 x i32], [32 x i32]* %force_z, i64 0, i64 %indvars.iv, !dbg !392
  %24 = load i32, i32* %arrayidx42, align 4, !dbg !392, !tbaa !60
  %call43 = tail call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.1, i64 0, i64 0), i32 %22, i32 %23, i32 %24) #8, !dbg !393
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !394
  %exitcond = icmp eq i64 %indvars.iv.next, 32, !dbg !395
  br i1 %exitcond, label %25, label %21, !dbg !386, !llvm.loop !396

; <label>:25:                                     ; preds = %21
  call void @llvm.lifetime.end.p0i8(i64 4096, i8* nonnull %8) #6, !dbg !398
  call void @llvm.lifetime.end.p0i8(i64 4096, i8* nonnull %7) #6, !dbg !398
  call void @llvm.lifetime.end.p0i8(i64 128, i8* nonnull %6) #6, !dbg !398
  call void @llvm.lifetime.end.p0i8(i64 128, i8* nonnull %5) #6, !dbg !398
  call void @llvm.lifetime.end.p0i8(i64 128, i8* nonnull %4) #6, !dbg !398
  call void @llvm.lifetime.end.p0i8(i64 128, i8* nonnull %3) #6, !dbg !398
  call void @llvm.lifetime.end.p0i8(i64 128, i8* nonnull %2) #6, !dbg !398
  call void @llvm.lifetime.end.p0i8(i64 128, i8* nonnull %1) #6, !dbg !398
  ret i32 0, !dbg !399
}

; Function Attrs: nounwind
declare void @srand(i32) local_unnamed_addr #5

; Function Attrs: nounwind
declare i32 @rand() local_unnamed_addr #5

; Function Attrs: nounwind readnone speculatable
declare void @llvm.dbg.value(metadata, metadata, metadata) #1

attributes #0 = { noinline nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone speculatable }
attributes #2 = { argmemonly nounwind }
attributes #3 = { noinline nounwind readonly uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind }
attributes #7 = { nobuiltin }
attributes #8 = { nobuiltin nounwind }

!llvm.dbg.cu = !{!0}
!llvm.module.flags = !{!3, !4, !5}
!llvm.ident = !{!6}

!0 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1, producer: "clang version 6.0.0 (tags/RELEASE_600/final)", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2)
!1 = !DIFile(filename: "md.c", directory: "/workspace/gem5-aladdin/src/aladdin/SHOC/md")
!2 = !{}
!3 = !{i32 2, !"Dwarf Version", i32 4}
!4 = !{i32 2, !"Debug Info Version", i32 3}
!5 = !{i32 1, !"wchar_size", i32 4}
!6 = !{!"clang version 6.0.0 (tags/RELEASE_600/final)"}
!7 = distinct !DISubprogram(name: "md", scope: !1, file: !1, line: 7, type: !8, isLocal: false, isDefinition: true, scopeLine: 9, flags: DIFlagPrototyped, isOptimized: true, unit: !0, variables: !12)
!8 = !DISubroutineType(types: !9)
!9 = !{null, !10, !10, !10, !10, !10, !10, !10}
!10 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11, size: 64)
!11 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!12 = !{!13, !14, !15, !16, !17, !18, !19, !20, !21, !22, !23, !24, !25, !26, !27, !28, !29, !30, !31, !32, !33, !37, !38, !39, !40, !41, !42, !46, !47, !48, !49}
!13 = !DILocalVariable(name: "d_force_x", arg: 1, scope: !7, file: !1, line: 7, type: !10)
!14 = !DILocalVariable(name: "d_force_y", arg: 2, scope: !7, file: !1, line: 7, type: !10)
!15 = !DILocalVariable(name: "d_force_z", arg: 3, scope: !7, file: !1, line: 7, type: !10)
!16 = !DILocalVariable(name: "position_x", arg: 4, scope: !7, file: !1, line: 8, type: !10)
!17 = !DILocalVariable(name: "position_y", arg: 5, scope: !7, file: !1, line: 8, type: !10)
!18 = !DILocalVariable(name: "position_z", arg: 6, scope: !7, file: !1, line: 8, type: !10)
!19 = !DILocalVariable(name: "NL", arg: 7, scope: !7, file: !1, line: 9, type: !10)
!20 = !DILocalVariable(name: "i", scope: !7, file: !1, line: 19, type: !11)
!21 = !DILocalVariable(name: "j", scope: !7, file: !1, line: 19, type: !11)
!22 = !DILocalVariable(name: "jidx", scope: !7, file: !1, line: 19, type: !11)
!23 = !DILocalVariable(name: "delx", scope: !7, file: !1, line: 20, type: !11)
!24 = !DILocalVariable(name: "dely", scope: !7, file: !1, line: 20, type: !11)
!25 = !DILocalVariable(name: "delz", scope: !7, file: !1, line: 20, type: !11)
!26 = !DILocalVariable(name: "r2inv", scope: !7, file: !1, line: 20, type: !11)
!27 = !DILocalVariable(name: "r2invTEMP", scope: !7, file: !1, line: 20, type: !11)
!28 = !DILocalVariable(name: "r2invTEMP2", scope: !7, file: !1, line: 20, type: !11)
!29 = !DILocalVariable(name: "r2invTEMP3", scope: !7, file: !1, line: 20, type: !11)
!30 = !DILocalVariable(name: "t1", scope: !7, file: !1, line: 20, type: !11)
!31 = !DILocalVariable(name: "t2", scope: !7, file: !1, line: 20, type: !11)
!32 = !DILocalVariable(name: "t3", scope: !7, file: !1, line: 20, type: !11)
!33 = !DILocalVariable(name: "i_x", scope: !34, file: !1, line: 23, type: !11)
!34 = distinct !DILexicalBlock(scope: !35, file: !1, line: 22, column: 3)
!35 = distinct !DILexicalBlock(scope: !36, file: !1, line: 21, column: 11)
!36 = distinct !DILexicalBlock(scope: !7, file: !1, line: 21, column: 11)
!37 = !DILocalVariable(name: "i_y", scope: !34, file: !1, line: 24, type: !11)
!38 = !DILocalVariable(name: "i_z", scope: !34, file: !1, line: 25, type: !11)
!39 = !DILocalVariable(name: "fx", scope: !34, file: !1, line: 26, type: !11)
!40 = !DILocalVariable(name: "fy", scope: !34, file: !1, line: 27, type: !11)
!41 = !DILocalVariable(name: "fz", scope: !34, file: !1, line: 28, type: !11)
!42 = !DILocalVariable(name: "j_x", scope: !43, file: !1, line: 32, type: !11)
!43 = distinct !DILexicalBlock(scope: !44, file: !1, line: 30, column: 5)
!44 = distinct !DILexicalBlock(scope: !45, file: !1, line: 29, column: 14)
!45 = distinct !DILexicalBlock(scope: !34, file: !1, line: 29, column: 14)
!46 = !DILocalVariable(name: "j_y", scope: !43, file: !1, line: 33, type: !11)
!47 = !DILocalVariable(name: "j_z", scope: !43, file: !1, line: 34, type: !11)
!48 = !DILocalVariable(name: "r6inv", scope: !43, file: !1, line: 44, type: !11)
!49 = !DILocalVariable(name: "force", scope: !43, file: !1, line: 45, type: !11)
!50 = !DILocation(line: 7, column: 14, scope: !7)
!51 = !DILocation(line: 7, column: 38, scope: !7)
!52 = !DILocation(line: 7, column: 62, scope: !7)
!53 = !DILocation(line: 8, column: 12, scope: !7)
!54 = !DILocation(line: 8, column: 37, scope: !7)
!55 = !DILocation(line: 8, column: 62, scope: !7)
!56 = !DILocation(line: 9, column: 12, scope: !7)
!57 = !DILocation(line: 19, column: 6, scope: !7)
!58 = !DILocation(line: 21, column: 11, scope: !36)
!59 = !DILocation(line: 23, column: 16, scope: !34)
!60 = !{!61, !61, i64 0}
!61 = !{!"int", !62, i64 0}
!62 = !{!"omnipotent char", !63, i64 0}
!63 = !{!"Simple C/C++ TBAA"}
!64 = !DILocation(line: 23, column: 10, scope: !34)
!65 = !DILocation(line: 24, column: 16, scope: !34)
!66 = !DILocation(line: 24, column: 10, scope: !34)
!67 = !DILocation(line: 25, column: 16, scope: !34)
!68 = !DILocation(line: 25, column: 10, scope: !34)
!69 = !DILocation(line: 26, column: 10, scope: !34)
!70 = !DILocation(line: 27, column: 10, scope: !34)
!71 = !DILocation(line: 28, column: 10, scope: !34)
!72 = !DILocation(line: 19, column: 9, scope: !7)
!73 = !DILocation(line: 29, column: 14, scope: !45)
!74 = !DILocation(line: 31, column: 22, scope: !43)
!75 = !DILocation(line: 31, column: 14, scope: !43)
!76 = !DILocation(line: 19, column: 12, scope: !7)
!77 = !DILocation(line: 32, column: 18, scope: !43)
!78 = !DILocation(line: 32, column: 12, scope: !43)
!79 = !DILocation(line: 33, column: 18, scope: !43)
!80 = !DILocation(line: 33, column: 12, scope: !43)
!81 = !DILocation(line: 34, column: 18, scope: !43)
!82 = !DILocation(line: 34, column: 12, scope: !43)
!83 = !DILocation(line: 35, column: 18, scope: !43)
!84 = !DILocation(line: 20, column: 7, scope: !7)
!85 = !DILocation(line: 36, column: 18, scope: !43)
!86 = !DILocation(line: 20, column: 13, scope: !7)
!87 = !DILocation(line: 37, column: 18, scope: !43)
!88 = !DILocation(line: 20, column: 19, scope: !7)
!89 = !DILocation(line: 38, column: 24, scope: !43)
!90 = !DILocation(line: 20, column: 32, scope: !7)
!91 = !DILocation(line: 39, column: 25, scope: !43)
!92 = !DILocation(line: 20, column: 43, scope: !7)
!93 = !DILocation(line: 40, column: 25, scope: !43)
!94 = !DILocation(line: 20, column: 55, scope: !7)
!95 = !DILocation(line: 41, column: 22, scope: !43)
!96 = !DILocation(line: 20, column: 67, scope: !7)
!97 = !DILocation(line: 42, column: 15, scope: !43)
!98 = !DILocation(line: 20, column: 71, scope: !7)
!99 = !DILocation(line: 20, column: 25, scope: !7)
!100 = !DILocation(line: 44, column: 26, scope: !43)
!101 = !DILocation(line: 44, column: 34, scope: !43)
!102 = !DILocation(line: 44, column: 12, scope: !43)
!103 = !DILocation(line: 45, column: 25, scope: !43)
!104 = !DILocation(line: 45, column: 36, scope: !43)
!105 = !DILocation(line: 45, column: 43, scope: !43)
!106 = !DILocation(line: 45, column: 31, scope: !43)
!107 = !DILocation(line: 45, column: 12, scope: !43)
!108 = !DILocation(line: 46, column: 18, scope: !43)
!109 = !DILocation(line: 46, column: 10, scope: !43)
!110 = !DILocation(line: 47, column: 18, scope: !43)
!111 = !DILocation(line: 47, column: 10, scope: !43)
!112 = !DILocation(line: 48, column: 18, scope: !43)
!113 = !DILocation(line: 48, column: 10, scope: !43)
!114 = !DILocation(line: 29, column: 45, scope: !44)
!115 = !DILocation(line: 29, column: 28, scope: !44)
!116 = distinct !{!116, !73, !117}
!117 = !DILocation(line: 49, column: 5, scope: !45)
!118 = !DILocation(line: 50, column: 5, scope: !34)
!119 = !DILocation(line: 50, column: 18, scope: !34)
!120 = !DILocation(line: 51, column: 5, scope: !34)
!121 = !DILocation(line: 51, column: 18, scope: !34)
!122 = !DILocation(line: 52, column: 5, scope: !34)
!123 = !DILocation(line: 52, column: 18, scope: !34)
!124 = !DILocation(line: 21, column: 36, scope: !35)
!125 = !DILocation(line: 21, column: 25, scope: !35)
!126 = distinct !{!126, !58, !127}
!127 = !DILocation(line: 53, column: 3, scope: !36)
!128 = !DILocation(line: 59, column: 1, scope: !7)
!129 = distinct !DISubprogram(name: "distance", scope: !1, file: !1, line: 61, type: !130, isLocal: false, isDefinition: true, scopeLine: 67, flags: DIFlagPrototyped, isOptimized: true, unit: !0, variables: !132)
!130 = !DISubroutineType(types: !131)
!131 = !{!11, !10, !10, !10, !11, !11}
!132 = !{!133, !134, !135, !136, !137, !138, !139, !140, !141}
!133 = !DILocalVariable(name: "position_x", arg: 1, scope: !129, file: !1, line: 62, type: !10)
!134 = !DILocalVariable(name: "position_y", arg: 2, scope: !129, file: !1, line: 63, type: !10)
!135 = !DILocalVariable(name: "position_z", arg: 3, scope: !129, file: !1, line: 64, type: !10)
!136 = !DILocalVariable(name: "i", arg: 4, scope: !129, file: !1, line: 65, type: !11)
!137 = !DILocalVariable(name: "j", arg: 5, scope: !129, file: !1, line: 66, type: !11)
!138 = !DILocalVariable(name: "delx", scope: !129, file: !1, line: 68, type: !11)
!139 = !DILocalVariable(name: "dely", scope: !129, file: !1, line: 68, type: !11)
!140 = !DILocalVariable(name: "delz", scope: !129, file: !1, line: 68, type: !11)
!141 = !DILocalVariable(name: "r2inv", scope: !129, file: !1, line: 68, type: !11)
!142 = !DILocation(line: 62, column: 8, scope: !129)
!143 = !DILocation(line: 63, column: 8, scope: !129)
!144 = !DILocation(line: 64, column: 8, scope: !129)
!145 = !DILocation(line: 65, column: 7, scope: !129)
!146 = !DILocation(line: 66, column: 7, scope: !129)
!147 = !DILocation(line: 69, column: 9, scope: !129)
!148 = !DILocation(line: 69, column: 25, scope: !129)
!149 = !DILocation(line: 69, column: 23, scope: !129)
!150 = !DILocation(line: 68, column: 7, scope: !129)
!151 = !DILocation(line: 70, column: 9, scope: !129)
!152 = !DILocation(line: 70, column: 25, scope: !129)
!153 = !DILocation(line: 70, column: 23, scope: !129)
!154 = !DILocation(line: 68, column: 13, scope: !129)
!155 = !DILocation(line: 71, column: 9, scope: !129)
!156 = !DILocation(line: 71, column: 25, scope: !129)
!157 = !DILocation(line: 71, column: 23, scope: !129)
!158 = !DILocation(line: 68, column: 19, scope: !129)
!159 = !DILocation(line: 72, column: 15, scope: !129)
!160 = !DILocation(line: 72, column: 29, scope: !129)
!161 = !DILocation(line: 72, column: 22, scope: !129)
!162 = !DILocation(line: 72, column: 43, scope: !129)
!163 = !DILocation(line: 72, column: 36, scope: !129)
!164 = !DILocation(line: 68, column: 25, scope: !129)
!165 = !DILocation(line: 73, column: 2, scope: !129)
!166 = distinct !DISubprogram(name: "buildNeighborList", scope: !1, file: !1, line: 102, type: !167, isLocal: false, isDefinition: true, scopeLine: 108, flags: DIFlagPrototyped, isOptimized: true, unit: !0, variables: !173)
!167 = !DISubroutineType(types: !168)
!168 = !{!11, !10, !10, !10, !169}
!169 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !170, size: 64)
!170 = !DICompositeType(tag: DW_TAG_array_type, baseType: !11, size: 1024, elements: !171)
!171 = !{!172}
!172 = !DISubrange(count: 32)
!173 = !{!174, !175, !176, !177, !178, !179, !180, !181, !182, !183, !187}
!174 = !DILocalVariable(name: "position_x", arg: 1, scope: !166, file: !1, line: 102, type: !10)
!175 = !DILocalVariable(name: "position_y", arg: 2, scope: !166, file: !1, line: 103, type: !10)
!176 = !DILocalVariable(name: "position_z", arg: 3, scope: !166, file: !1, line: 104, type: !10)
!177 = !DILocalVariable(name: "NL", arg: 4, scope: !166, file: !1, line: 105, type: !169)
!178 = !DILocalVariable(name: "totalPairs", scope: !166, file: !1, line: 109, type: !11)
!179 = !DILocalVariable(name: "i", scope: !166, file: !1, line: 109, type: !11)
!180 = !DILocalVariable(name: "j", scope: !166, file: !1, line: 109, type: !11)
!181 = !DILocalVariable(name: "k", scope: !166, file: !1, line: 109, type: !11)
!182 = !DILocalVariable(name: "distIJ", scope: !166, file: !1, line: 111, type: !11)
!183 = !DILocalVariable(name: "currList", scope: !184, file: !1, line: 113, type: !170)
!184 = distinct !DILexicalBlock(scope: !185, file: !1, line: 112, column: 30)
!185 = distinct !DILexicalBlock(scope: !186, file: !1, line: 112, column: 2)
!186 = distinct !DILexicalBlock(scope: !166, file: !1, line: 112, column: 2)
!187 = !DILocalVariable(name: "currDist", scope: !184, file: !1, line: 114, type: !170)
!188 = !DILocation(line: 102, column: 28, scope: !166)
!189 = !DILocation(line: 103, column: 8, scope: !166)
!190 = !DILocation(line: 104, column: 8, scope: !166)
!191 = !DILocation(line: 105, column: 7, scope: !166)
!192 = !DILocation(line: 109, column: 6, scope: !166)
!193 = !DILocation(line: 109, column: 18, scope: !166)
!194 = !DILocation(line: 112, column: 2, scope: !186)
!195 = !DILocation(line: 113, column: 3, scope: !184)
!196 = !DILocation(line: 113, column: 7, scope: !184)
!197 = !DILocation(line: 109, column: 24, scope: !166)
!198 = !DILocation(line: 115, column: 3, scope: !199)
!199 = distinct !DILexicalBlock(scope: !184, file: !1, line: 115, column: 3)
!200 = !DILocation(line: 116, column: 4, scope: !201)
!201 = distinct !DILexicalBlock(scope: !202, file: !1, line: 115, column: 32)
!202 = distinct !DILexicalBlock(scope: !199, file: !1, line: 115, column: 3)
!203 = !DILocation(line: 116, column: 16, scope: !201)
!204 = !DILocation(line: 114, column: 8, scope: !184)
!205 = !DILocation(line: 115, column: 29, scope: !202)
!206 = !DILocation(line: 115, column: 13, scope: !202)
!207 = distinct !{!207, !198, !208}
!208 = !DILocation(line: 118, column: 3, scope: !199)
!209 = !DILocation(line: 120, column: 10, scope: !210)
!210 = distinct !DILexicalBlock(scope: !211, file: !1, line: 120, column: 8)
!211 = distinct !DILexicalBlock(scope: !212, file: !1, line: 119, column: 31)
!212 = distinct !DILexicalBlock(scope: !213, file: !1, line: 119, column: 3)
!213 = distinct !DILexicalBlock(scope: !184, file: !1, line: 119, column: 3)
!214 = !DILocation(line: 109, column: 21, scope: !166)
!215 = !DILocation(line: 120, column: 8, scope: !211)
!216 = !DILocation(line: 125, column: 4, scope: !211)
!217 = !DILocation(line: 125, column: 16, scope: !211)
!218 = !DILocation(line: 127, column: 3, scope: !211)
!219 = !DILocation(line: 119, column: 28, scope: !212)
!220 = !DILocation(line: 119, column: 17, scope: !212)
!221 = !DILocation(line: 119, column: 3, scope: !213)
!222 = distinct !{!222, !221, !223}
!223 = !DILocation(line: 127, column: 3, scope: !213)
!224 = !DILocation(line: 128, column: 17, scope: !184)
!225 = !DILocation(line: 128, column: 14, scope: !184)
!226 = !DILocation(line: 129, column: 2, scope: !185)
!227 = !DILocation(line: 112, column: 27, scope: !185)
!228 = !DILocation(line: 112, column: 16, scope: !185)
!229 = distinct !{!229, !194, !230}
!230 = !DILocation(line: 129, column: 2, scope: !186)
!231 = !DILocation(line: 130, column: 2, scope: !166)
!232 = !DILocation(line: 131, column: 2, scope: !166)
!233 = distinct !DISubprogram(name: "populateNeighborList", scope: !1, file: !1, line: 134, type: !234, isLocal: false, isDefinition: true, scopeLine: 138, flags: DIFlagPrototyped, isOptimized: true, unit: !0, variables: !237)
!234 = !DISubroutineType(types: !235)
!235 = !{!11, !10, !10, !236, !169}
!236 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !11)
!237 = !{!238, !239, !240, !241, !242, !243, !244, !245}
!238 = !DILocalVariable(name: "currDist", arg: 1, scope: !233, file: !1, line: 134, type: !10)
!239 = !DILocalVariable(name: "currList", arg: 2, scope: !233, file: !1, line: 135, type: !10)
!240 = !DILocalVariable(name: "i", arg: 3, scope: !233, file: !1, line: 136, type: !236)
!241 = !DILocalVariable(name: "NL", arg: 4, scope: !233, file: !1, line: 137, type: !169)
!242 = !DILocalVariable(name: "idx", scope: !233, file: !1, line: 139, type: !11)
!243 = !DILocalVariable(name: "validPairs", scope: !233, file: !1, line: 139, type: !11)
!244 = !DILocalVariable(name: "distanceIter", scope: !233, file: !1, line: 139, type: !11)
!245 = !DILocalVariable(name: "neighborIter", scope: !233, file: !1, line: 139, type: !11)
!246 = !DILocation(line: 134, column: 31, scope: !233)
!247 = !DILocation(line: 135, column: 7, scope: !233)
!248 = !DILocation(line: 136, column: 13, scope: !233)
!249 = !DILocation(line: 137, column: 7, scope: !233)
!250 = !DILocation(line: 139, column: 6, scope: !233)
!251 = !DILocation(line: 139, column: 11, scope: !233)
!252 = !DILocation(line: 139, column: 37, scope: !233)
!253 = !DILocation(line: 142, column: 2, scope: !254)
!254 = distinct !DILexicalBlock(scope: !233, file: !1, line: 142, column: 2)
!255 = !DILocation(line: 146, column: 25, scope: !256)
!256 = distinct !DILexicalBlock(scope: !257, file: !1, line: 142, column: 69)
!257 = distinct !DILexicalBlock(scope: !254, file: !1, line: 142, column: 2)
!258 = !DILocation(line: 146, column: 3, scope: !256)
!259 = !DILocation(line: 146, column: 23, scope: !256)
!260 = !DILocation(line: 142, column: 66, scope: !257)
!261 = !DILocation(line: 142, column: 38, scope: !257)
!262 = distinct !{!262, !253, !263}
!263 = !DILocation(line: 151, column: 2, scope: !254)
!264 = !DILocation(line: 152, column: 2, scope: !233)
!265 = distinct !DISubprogram(name: "main", scope: !1, file: !1, line: 155, type: !266, isLocal: false, isDefinition: true, scopeLine: 155, isOptimized: true, unit: !0, variables: !268)
!266 = !DISubroutineType(types: !267)
!267 = !{!11}
!268 = !{!269, !270, !271, !272, !273, !274, !275, !276, !277, !278, !279, !283, !284, !285, !286, !287, !288, !289, !292}
!269 = !DILocalVariable(name: "sizeClass", scope: !265, file: !1, line: 156, type: !11)
!270 = !DILocalVariable(name: "passes", scope: !265, file: !1, line: 156, type: !11)
!271 = !DILocalVariable(name: "iter", scope: !265, file: !1, line: 156, type: !11)
!272 = !DILocalVariable(name: "nAtom", scope: !265, file: !1, line: 156, type: !11)
!273 = !DILocalVariable(name: "err", scope: !265, file: !1, line: 156, type: !11)
!274 = !DILocalVariable(name: "localSize", scope: !265, file: !1, line: 156, type: !11)
!275 = !DILocalVariable(name: "globalSize", scope: !265, file: !1, line: 156, type: !11)
!276 = !DILocalVariable(name: "i", scope: !265, file: !1, line: 156, type: !11)
!277 = !DILocalVariable(name: "j", scope: !265, file: !1, line: 156, type: !11)
!278 = !DILocalVariable(name: "totalPairs", scope: !265, file: !1, line: 156, type: !11)
!279 = !DILocalVariable(name: "probSizes", scope: !265, file: !1, line: 157, type: !280)
!280 = !DICompositeType(tag: DW_TAG_array_type, baseType: !11, size: 128, elements: !281)
!281 = !{!282}
!282 = !DISubrange(count: 4)
!283 = !DILocalVariable(name: "position_x", scope: !265, file: !1, line: 161, type: !170)
!284 = !DILocalVariable(name: "position_y", scope: !265, file: !1, line: 162, type: !170)
!285 = !DILocalVariable(name: "position_z", scope: !265, file: !1, line: 163, type: !170)
!286 = !DILocalVariable(name: "force_x", scope: !265, file: !1, line: 164, type: !170)
!287 = !DILocalVariable(name: "force_y", scope: !265, file: !1, line: 165, type: !170)
!288 = !DILocalVariable(name: "force_z", scope: !265, file: !1, line: 166, type: !170)
!289 = !DILocalVariable(name: "NL", scope: !265, file: !1, line: 167, type: !290)
!290 = !DICompositeType(tag: DW_TAG_array_type, baseType: !11, size: 32768, elements: !291)
!291 = !{!172, !172}
!292 = !DILocalVariable(name: "neighborList", scope: !265, file: !1, line: 168, type: !293)
!293 = !DICompositeType(tag: DW_TAG_array_type, baseType: !11, size: 32768, elements: !294)
!294 = !{!295}
!295 = !DISubrange(count: 1024)
!296 = !DILocation(line: 156, column: 6, scope: !265)
!297 = !DILocation(line: 156, column: 17, scope: !265)
!298 = !DILocation(line: 156, column: 25, scope: !265)
!299 = !DILocation(line: 156, column: 38, scope: !265)
!300 = !DILocation(line: 156, column: 43, scope: !265)
!301 = !DILocation(line: 156, column: 54, scope: !265)
!302 = !DILocation(line: 159, column: 2, scope: !265)
!303 = !DILocation(line: 161, column: 2, scope: !265)
!304 = !DILocation(line: 161, column: 7, scope: !265)
!305 = !DILocation(line: 162, column: 2, scope: !265)
!306 = !DILocation(line: 162, column: 7, scope: !265)
!307 = !DILocation(line: 163, column: 2, scope: !265)
!308 = !DILocation(line: 163, column: 7, scope: !265)
!309 = !DILocation(line: 164, column: 2, scope: !265)
!310 = !DILocation(line: 164, column: 7, scope: !265)
!311 = !DILocation(line: 165, column: 2, scope: !265)
!312 = !DILocation(line: 165, column: 7, scope: !265)
!313 = !DILocation(line: 166, column: 2, scope: !265)
!314 = !DILocation(line: 166, column: 7, scope: !265)
!315 = !DILocation(line: 167, column: 2, scope: !265)
!316 = !DILocation(line: 167, column: 7, scope: !265)
!317 = !DILocation(line: 168, column: 3, scope: !265)
!318 = !DILocation(line: 168, column: 7, scope: !265)
!319 = !DILocation(line: 156, column: 66, scope: !265)
!320 = !DILocation(line: 170, column: 2, scope: !321)
!321 = distinct !DILexicalBlock(scope: !265, file: !1, line: 170, column: 2)
!322 = !DILocation(line: 172, column: 19, scope: !323)
!323 = distinct !DILexicalBlock(scope: !324, file: !1, line: 171, column: 2)
!324 = distinct !DILexicalBlock(scope: !321, file: !1, line: 170, column: 2)
!325 = !DILocation(line: 172, column: 3, scope: !323)
!326 = !DILocation(line: 172, column: 17, scope: !323)
!327 = !DILocation(line: 173, column: 19, scope: !323)
!328 = !DILocation(line: 173, column: 3, scope: !323)
!329 = !DILocation(line: 173, column: 17, scope: !323)
!330 = !DILocation(line: 174, column: 19, scope: !323)
!331 = !DILocation(line: 174, column: 3, scope: !323)
!332 = !DILocation(line: 174, column: 17, scope: !323)
!333 = !DILocation(line: 170, column: 28, scope: !324)
!334 = !DILocation(line: 170, column: 17, scope: !324)
!335 = distinct !{!335, !320, !336}
!336 = !DILocation(line: 178, column: 2, scope: !321)
!337 = !DILocation(line: 181, column: 3, scope: !338)
!338 = distinct !DILexicalBlock(scope: !339, file: !1, line: 181, column: 3)
!339 = distinct !DILexicalBlock(scope: !340, file: !1, line: 180, column: 25)
!340 = distinct !DILexicalBlock(scope: !341, file: !1, line: 180, column: 2)
!341 = distinct !DILexicalBlock(scope: !265, file: !1, line: 180, column: 2)
!342 = !DILocation(line: 156, column: 69, scope: !265)
!343 = !DILocation(line: 182, column: 4, scope: !344)
!344 = distinct !DILexicalBlock(scope: !345, file: !1, line: 181, column: 36)
!345 = distinct !DILexicalBlock(scope: !338, file: !1, line: 181, column: 3)
!346 = !DILocation(line: 182, column: 13, scope: !344)
!347 = !DILocation(line: 181, column: 32, scope: !345)
!348 = !DILocation(line: 181, column: 16, scope: !345)
!349 = distinct !{!349, !337, !350}
!350 = !DILocation(line: 183, column: 3, scope: !338)
!351 = !DILocation(line: 180, column: 22, scope: !340)
!352 = !DILocation(line: 180, column: 12, scope: !340)
!353 = !DILocation(line: 180, column: 2, scope: !341)
!354 = distinct !{!354, !353, !355}
!355 = !DILocation(line: 184, column: 2, scope: !341)
!356 = !DILocation(line: 186, column: 33, scope: !265)
!357 = !DILocation(line: 186, column: 45, scope: !265)
!358 = !DILocation(line: 186, column: 57, scope: !265)
!359 = !DILocation(line: 186, column: 69, scope: !265)
!360 = !DILocation(line: 186, column: 15, scope: !265)
!361 = !DILocation(line: 156, column: 72, scope: !265)
!362 = !DILocation(line: 194, column: 3, scope: !363)
!363 = distinct !DILexicalBlock(scope: !265, file: !1, line: 194, column: 3)
!364 = !DILocation(line: 195, column: 11, scope: !365)
!365 = distinct !DILexicalBlock(scope: !366, file: !1, line: 195, column: 11)
!366 = distinct !DILexicalBlock(scope: !367, file: !1, line: 194, column: 22)
!367 = distinct !DILexicalBlock(scope: !363, file: !1, line: 194, column: 3)
!368 = !DILocation(line: 196, column: 38, scope: !369)
!369 = distinct !DILexicalBlock(scope: !365, file: !1, line: 195, column: 11)
!370 = !DILocation(line: 196, column: 31, scope: !369)
!371 = !DILocation(line: 196, column: 13, scope: !369)
!372 = !DILocation(line: 196, column: 36, scope: !369)
!373 = !DILocation(line: 195, column: 30, scope: !369)
!374 = !DILocation(line: 195, column: 24, scope: !369)
!375 = distinct !{!375, !364, !376}
!376 = !DILocation(line: 196, column: 45, scope: !365)
!377 = !DILocation(line: 194, column: 19, scope: !367)
!378 = !DILocation(line: 194, column: 13, scope: !367)
!379 = distinct !{!379, !362, !380}
!380 = !DILocation(line: 197, column: 3, scope: !363)
!381 = !DILocation(line: 201, column: 5, scope: !265)
!382 = !DILocation(line: 201, column: 14, scope: !265)
!383 = !DILocation(line: 201, column: 23, scope: !265)
!384 = !DILocation(line: 201, column: 68, scope: !265)
!385 = !DILocation(line: 201, column: 2, scope: !265)
!386 = !DILocation(line: 206, column: 2, scope: !387)
!387 = distinct !DILexicalBlock(scope: !265, file: !1, line: 206, column: 2)
!388 = !DILocation(line: 207, column: 37, scope: !389)
!389 = distinct !DILexicalBlock(scope: !390, file: !1, line: 206, column: 25)
!390 = distinct !DILexicalBlock(scope: !387, file: !1, line: 206, column: 2)
!391 = !DILocation(line: 207, column: 49, scope: !389)
!392 = !DILocation(line: 207, column: 61, scope: !389)
!393 = !DILocation(line: 207, column: 3, scope: !389)
!394 = !DILocation(line: 206, column: 22, scope: !390)
!395 = !DILocation(line: 206, column: 12, scope: !390)
!396 = distinct !{!396, !386, !397}
!397 = !DILocation(line: 208, column: 2, scope: !387)
!398 = !DILocation(line: 211, column: 1, scope: !265)
!399 = !DILocation(line: 210, column: 2, scope: !265)
